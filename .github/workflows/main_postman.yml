name: Experience API Integration tests(postman)

on:
  workflow_dispatch:
    inputs:
      testSuite:
        description: "Test Suite"
        required: false
        default: "Test Suites/Modules/ExperienceAPI"

  pull_request:
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'
    branches: [ master ]

jobs:
  e2e-tests:
    runs-on: ubuntu-18.04 # katalon action runs correctly on ubuntu-18.04
    env:
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
      BLOB_SAS: ${{ secrets.BLOB_TOKEN }}
      DEFAULT_TEST_SUITE: "Test Suites/Modules/ExperienceAPI"

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up .net Core 3.1.x for vc-build #GitHib Actions migrates to .net Core 5.x. To vc-build work properly need to manually install .net Core 3.1.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Install VirtoCommerce.GlobalTool
      uses: VirtoCommerce/vc-github-actions/setup-vcbuild@master

    - name: Get Image Version
      uses: VirtoCommerce/vc-github-actions/get-image-version@master
      id: image

    - name: Getting tests
      shell: sh
      run: |
        git clone https://github.com/VirtoCommerce/vc-quality-gate-katalon.git
        cd ${{ github.workspace }}/vc-quality-gate-katalon/
        git checkout -b dev origin/dev
        ls -l
    # Temporary commented for speedup workflow test
    - name: Build
      run: vc-build Compile

    - name: Packaging
      run: vc-build Compress -skip Clean+Restore+Compile+Test

    - name: Docker Login
      uses: azure/docker-login@v1
      with:
        login-server: ghcr.io
        username: $GITHUB_ACTOR
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker Env
      uses: VirtoCommerce/vc-github-actions/docker-env@master
      with:
        githubUser: ${{ env.GITHUB_ACTOR }}
        githubToken: ${{ env.GITHUB_TOKEN }}
        platformDockerTag: 'dev-linux-latest'
        storefrontDockerTag: 'dev-linux-latest'
        platformImage: ghcr.io/virtocommerce/platform
        storefrontImage: ghcr.io/virtocommerce/storefront
        validateSwagger: 'false'
        installModule: 'true'
        moduleId: ${{ steps.image.outputs.moduleId }}
        
    - name: Run API Tests
      uses: matt-ball/newman-action@master
      with:
         collection: https://github.com/VirtoCommerce/vc-module-experience-api/blob/collectionfortest/tests/postman/platform_xapi_collection_QA.json
         reporters: json
         envVar: '[{ "key": "url", "value": "http://localhost:8090" }]'
