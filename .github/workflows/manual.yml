# This is a basic workflow that is manually triggered

name: Module CI

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    
jobs:
# The type of runner that the job will run on
  build_package:
        
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
    
    - name: Install VirtoCommerce.GlobalTool
      run: dotnet tool install --global VirtoCommerce.GlobalTool
    
    - name: Install dotnet-sonarscanner
      run: dotnet tool install --global dotnet-sonarscanner
    
    - uses: mvktsk/github-actions/vc-module-ci@master
      with: 
        token: ${{ secrets.SONAR_TOKEN }}

  ci:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Install VirtoCommerce.GlobalTool
        run: dotnet tool install --global VirtoCommerce.GlobalTool

      - name: Install dotnet-sonarscanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Add version suffix
        if: ${{ github.ref=='refs/heads/dev' }}
        shell: pwsh
        run: |
          $commitNumber = git rev-list --count '${{ github.ref }}'.Replace('refs/heads', '')
          vc-build ChangeVersion -CustomVersionSuffix $commitNumber

      - name: SonarCloud Begin
        if: ${{ env.SONAR_TOKEN != 0 }}
        shell: pwsh
        env:
          PULL_REQUEST_TITLE: ${{ github.event.pull_request.title }}
        run: |
          $REPO_NAME = $env:GITHUB_REPOSITORY.Replace('VirtoCommerce', '')
          $BRANCH='${{ github.ref }}'.Replace('refs/heads', '')
          $CMD="dotnet sonarscanner begin /k:'VirtoCommerce_$($REPO_NAME)'"
          $CMD="$($CMD) /o:'virto-commerce'"
          $CMD="$($CMD) /d:sonar.cs.opencover.reportsPaths='$PWD/.tmp/coverage.xml'"
          $CMD="$($CMD) /d:sonar.host.url='https://sonarcloud.io'"
          $CMD="$($CMD) /d:sonar.login='${{ secrets.SONAR_TOKEN }}'"
          $CMD = "$($CMD) /d:sonar.branch='$($BRANCH)'"
          if ('${{ github.event_name }}' -eq 'pull_request' ) {
            $CMD="$($CMD) /d:sonar.pullrequest.base='$('${{ github.event.pull_request.base.ref }}')'"
            $CMD="$($CMD) /d:sonar.pullrequest.branch='$($env:PULL_REQUEST_TITLE)'"
            $CMD="$($CMD) /d:sonar.pullrequest.key=${{ github.event.number }}"
          }
          pwsh -command $CMD

      - name: Build
        run: vc-build Compile

      - name: Unit Tests
        run: vc-build Tests -skip

      - name: SonarCloud End
        if: ${{ env.SONAR_TOKEN != 0 }}
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Packaging
        run: vc-build Compress -skip Clean+Restore+Compile+Test
