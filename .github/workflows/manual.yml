# This is a basic workflow that is manually triggered

name: Module CI

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    
jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      GITHUB_TOKEN: "" #${{ secrets.GITHUB_TOKEN }}
      NUGET_KEY: "" #${{ secret.NUGET_KEY }}
      BLOB_SAS: ${{ secrets.BLOB_CONNECTION_STRING }}

    steps:
      - uses: actions/checkout@v2

      - name: Install VirtoCommerce.GlobalTool
        run: dotnet tool install --global VirtoCommerce.GlobalTool --version 1.3.2 --add-source http://ci.virtocommerce.com:5000/v3/index.json

      - name: Install dotnet-sonarscanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Add version suffix #Action
        if: ${{ github.ref=='refs/heads/dev' }}
        shell: pwsh
        run: |
          $commitNumber = git rev-list --count '${{ github.ref }}'.Replace('refs/heads/', '')
          vc-build ChangeVersion -CustomVersionSuffix "alpha.$($commitNumber)"

      - name: SonarCloud Begin
        uses: VirtoCommerce/vc-github-actions/sonar-scanner-begin@dev

      - name: Build
        run: vc-build Compile

      - name: Unit Tests
        run: vc-build Test -skip

      - name: SonarCloud End
        run: vc-build SonarQubeEnd "${{ secrets.SONAR_TOKEN }}"

      - name: Packaging
        run: vc-build Compress -skip Clean+Restore+Compile+Test
      
      - name: Publish Nuget
        if: ${{ github.ref=='refs/heads/dev' || github.ref=='refs/heads/master' }}
        shell: pwsh
        run: |
          & vc-build PublishPackages -ApiKey $env:NUGET_KEY -skip Clean+Restore+Compile+Test
          if($LASTEXITCODE -ne 0 -or $LASTEXITCODE -ne 409)
          {
              exit 1
          }
      
      - name: Publish Github PreRelease and Update modules.json #Action
        if: ${{ github.ref=='refs/heads/dev' }}
        shell: pwsh
        run: |
          $orgName = $env:GITHUB_REPOSITORY.split("/")[0]
          $BRANCH="${{ github.ref }}".Replace('refs/heads', '')
          $blobUrl = "https://vc3prerelease.blob.core.windows.net/packages$($env:BLOB_SAS)"
          $artifactFileName =  Get-ChildItem artifacts/*.zip -Name
          $artifactRelativePath = "artifacts/$($artifactFileName)"
          Write-Output $artifactFileName
          $downloadUrl = "https://vc3prerelease.blob.core.windows.net/packages/$($artifactFileName)"
          azcopy10 copy $artifactRelativePath $blobUrl
          Write-Output $downloadUrl
          & vc-build PublishModuleManifest -CustomModulePackageUri "$($downloadUrl)"
          if($LASTEXITCODE -ne 0 -or $LASTEXITCODE -ne 423)
          {
              exit 1
          }

      # Action ReleaseNotes generation
      
      - name: Publish Github Release and Update modules.json #Action
        if: ${{ github.ref=='refs/heads/master'}}
        shell: pwsh
        run: |
          $orgName = $env:GITHUB_REPOSITORY.split("/")[0]
          $BRANCH='${{ github.ref }}'.Replace('refs/heads/', '')
          $releaseBranchArg = "-ReleaseBranch $BRANCH"
          $releaseNotesArg = ""
          & vc-build Release -GitHubUser $orgName -GitHubToken $env:GITHUB_TOKEN $releaseBranchArg $releaseNotesArg -skip Clean+Restore+Compile+Test
          if($LASTEXITCODE -ne 0 -or $LASTEXITCODE -ne 422)
          {
              exit 1
          }
          & vc-build PublishModuleManifest
          if($LASTEXITCODE -ne 0 -or $LASTEXITCODE -ne 423)
          {
              exit 1
          }