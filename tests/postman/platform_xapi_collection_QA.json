swagger: "2.0"
info:
  title: "User service API"
  description: "Docs for User service API. All values of filter keys in query can be comma separated list"
  version: "1.0.0"
schemes:
  - "http"
host: 127.0.0.1
basePath: /user-service

paths:
  /status:
    get:
      tags:
        - "Status"
      summary: "Health-check"
      description: ""
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/HealthCheckResponse"
        500:
          description: "Internal server error"

  /auth/can-register:
    post:
      tags:
        - "Auth"
      summary: "Check if email can be used for registration"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "CheckRegisterEmailRequestBody"
          in: "body"
          description: "Body of request for check email"
          required: true
          schema:
            $ref: "#/definitions/CheckRegisterEmailRequestModel"
      responses:
        201:
          description: "Successful operation"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /auth/register:
    post:
      tags:
        - "Auth"
      summary: "Register user in service"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "RegisterUserRequestBody"
          in: "body"
          description: "Body of request for register user"
          required: true
          schema:
            $ref: "#/definitions/RegisterUserRequestModel"
      responses:
        201:
          description: "Resourcve successfully created"
          schema:
            $ref: "#/definitions/UserResponseModel"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /companies:
    get:
      tags:
        - "Companies"
      summary: "Get companies"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "filter[user_id]"
          type: "string"
          description: "Filter by user"
        - in: "query"
          name: "filter[name]"
          type: "string"
          description: "Filter by id name"
        - in: "query"
          name: "filter[is_host]"
          type: "string"
          description: "Filter by is_host column"
        - in: "query"
          name: "include"
          type: "string"
          description: "Include relations"
          enum:
            - logo
            - users
            - users_count
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CompaniesListResponseModel"
        401:
          description: "Incorrect auth credentials"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"
    post:
      tags:
        - "Companies"
      summary: "Create companies"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "CreateCompanyRequestBody"
          in: "body"
          description: "Body of request for creating company"
          required: true
          schema:
            $ref: "#/definitions/CreateCompanyRequestModel"
      responses:
        201:
          description: "Resourcve successfully created"
          schema:
            $ref: "#/definitions/CompanyResponseModel"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /companies/{company}:
    get:
      tags:
        - "Companies"
      summary: "Get company"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "company"
          type: "string"
          required: true
          description: "Id of company"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CompanyResponseModel"
        401:
          description: "Incorrect auth credentials"
        500:
          description: "Internal server error"
    put:
      tags:
        - "Companies"
      summary: "Updatre company"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "company"
          type: "string"
          required: true
          description: "Id of company"
        - name: "UpdateCompanyRequestBody"
          in: "body"
          description: "Body of request for updating of company"
          required: true
          schema:
            $ref: "#/definitions/UpdateCompanyRequestModel"
      responses:
        200:
          description: "Resourcve successfully created"
          schema:
            $ref: "#/definitions/CompanyResponseModel"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"
    delete:
      tags:
        - "Companies"
      summary: "Delete company"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "company"
          type: "string"
          required: true
          description: "Id of company"
      responses:
        204:
          description: "Successful deleted no content response"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        404:
          description: "Not found"
        500:
          description: "Internal server error"

  /companies/{company}/set-moderator:
    post:
      tags:
        - "Companies"
      summary: "Set user company moderator"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "MakeCompanyModeratorRequestBody"
          in: "body"
          description: "Body of request for make user company moderator"
          required: true
          schema:
            $ref: "#/definitions/MakeCompanyModeratorRequestModel"
      responses:
        201:
          description: "Resource successfully created"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /companies/{company}/unset-moderator:
    post:
      tags:
        - "Companies"
      summary: "Unset user company moderator"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "MakeCompanyModeratorRequestBody"
          in: "body"
          description: "Body of request for make user company moderator"
          required: true
          schema:
            $ref: "#/definitions/MakeCompanyModeratorRequestModel"
      responses:
        201:
          description: "Resource successfully created"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /companies/{company}/users:
    get:
      tags:
        - "Companies"
      summary: "Get users from company"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "include"
          type: "string"
          description: "Include resources"
          enum:
            - companies
            - companies_count
            - avatar
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "filter[is_moderator]"
          type: "boolean"
          description: "Filter by user moderator of current company"
        - in: "query"
          name: "group"
          type: "string"
          description: "Group results"
          enum:
            - contacts.type
            - contacts.group
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UsersListResponseModel"
        401:
          description: "Incorrect auth credentials"
        500:
          description: "Internal server error"

  /companies/{company}/invitations:
    post:
      tags:
        - "Companies"
      summary: "Invite user to company (API Gateway only)"
      description: "API Gateway only"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "filter[from_user_id]"
          type: "string"
          description: "Filter by user id who created"
        - in: "query"
          name: "filter[to_user_id]"
          type: "string"
          description: "Filter by to user id who recieved"
        - in: "query"
          name: "filter[email]"
          type: "string"
          description: "Filter by email column"
        - in: "query"
          name: "filter[status]"
          type: "string"
          description: "Filter by status column"
        - in: "query"
          name: "include"
          type: "string"
          description: "Include resources"
          enum:
            - company
            - to_user
            - from_user
      responses:
        201:
          description: "Resourcve successfully created"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /companies/{company}/invitations/approved:
    get:
      tags:
        - "Invitations"
      summary: "Get approved invitations (API Gateway only)"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "filter[from_user_id]"
          type: "string"
          description: "Filter by user id who created"
        - in: "query"
          name: "filter[to_user_id]"
          type: "string"
          description: "Filter by to user id who recieved"
        - in: "query"
          name: "filter[email]"
          type: "string"
          description: "Filter by email column"
        - in: "query"
          name: "include"
          type: "string"
          description: "Include resources"
          enum:
            - company
            - to_user
            - from_user
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/InvitationsListResponseModel"
        401:
          description: "Incorrect auth credentials"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /companies/{company}/invitations/rejected:
    get:
      tags:
        - "Invitations"
      summary: "Get rejected invitations (API Gateway only)"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "filter[from_user_id]"
          type: "string"
          description: "Filter by user id who created"
        - in: "query"
          name: "filter[to_user_id]"
          type: "string"
          description: "Filter by to user id who recieved"
        - in: "query"
          name: "filter[email]"
          type: "string"
          description: "Filter by email column"
        - in: "query"
          name: "include"
          type: "string"
          description: "Include resources"
          enum:
            - company
            - to_user
            - from_user
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/InvitationsListResponseModel"
        401:
          description: "Incorrect auth credentials"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /companies/{company}/invitations/pending:
    get:
      tags:
        - "Invitations"
      summary: "Get pending invitations (API Gateway only)"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "filter[from_user_id]"
          type: "string"
          description: "Filter by user id who created"
        - in: "query"
          name: "filter[to_user_id]"
          type: "string"
          description: "Filter by to user id who recieved"
        - in: "query"
          name: "filter[email]"
          type: "string"
          description: "Filter by email column"
        - in: "query"
          name: "include"
          type: "string"
          description: "Include resources"
          enum:
            - company
            - to_user
            - from_user
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/InvitationsListResponseModel"
        401:
          description: "Incorrect auth credentials"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /companies/{company}/attach-user/{user}:
    post:
      tags:
        - "Users and companies"
      summary: "Attach user to company (Services Only)"
      description: "Services Only"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "company"
          type: "string"
          required: true
          description: "Id of company"
        - in: "path"
          name: "user"
          type: "string"
          required: true
          description: "Id of user"
      responses:
        201:
          description: "Resourcve successfully created"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /companies/{company}/detach-user/{user}:
    delete:
      tags:
        - "Users and companies"
      summary: "Detach user from company (Services Only)"
      description: "Services Only"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "company"
          type: "string"
          required: true
          description: "Id of company"
        - in: "path"
          name: "user"
          type: "string"
          required: true
          description: "Id of user"
      responses:
        204:
          description: "Successful deleted no content response"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /users:
    get:
      tags:
        - "Users"
      summary: "Get users"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "include"
          type: "string"
          description: "Include resources"
          enum:
            - companies
            - companies_count
            - avatar
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "filter[company_id]"
          type: "string"
          description: "Filter by company id"
        - in: "query"
          name: "filter[email]"
          type: "string"
          description: "Filter by email"
        - in: "query"
          name: "group"
          type: "string"
          description: "Group results"
          enum:
            - contacts.type
            - contacts.group
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UsersListResponseModel"
        401:
          description: "Incorrect auth credentials"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /users/{user}:
    get:
      tags:
        - "Users"
      summary: "Get user"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "user"
          type: "string"
          required: true
          description: "Id of user"
        - in: "query"
          name: "include"
          type: "string"
          description: "Include relations"
          enum:
            - contacts
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UserResponseModel"
        401:
          description: "Incorrect auth credentials"
        500:
          description: "Internal server error"
    put:
      tags:
        - "Users"
      summary: "Update user"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "user"
          type: "string"
          required: true
          description: "Id of user"
        - name: "UpdateUserRequestBody"
          in: "body"
          description: "Body of request for updating of user"
          required: true
          schema:
            $ref: "#/definitions/UpdateUserRequestModel"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"
    delete:
      tags:
        - "Users"
      summary: "Delete user"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "user"
          type: "string"
          required: true
          description: "Id of user"
      responses:
        204:
          description: "Successful deleted no content response"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        404:
          description: "Not found"
        500:
          description: "Internal server error"

  /users/{user}/settings:
    get:
      tags:
        - "Users"
      summary: "Get user settings"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "user"
          type: "string"
          required: true
          description: "Id of user"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SettingsResponseModel"
        401:
          description: "Incorrect auth credentials"
        500:
          description: "Internal server error"
    post:
      tags:
        - "Users"
      summary: "Update user settings"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "user"
          type: "string"
          required: true
          description: "Id of user"
        - name: "UpdateUserSettingsRequestBody"
          in: "body"
          description: "Body of request for updating of user"
          required: true
          schema:
            $ref: "#/definitions/UpdateUserSettingsRequestModel"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /users/{user}/companies:
    get:
      tags:
        - "User and companies"
      summary: "Get user companies"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "filter[name]"
          type: "string"
          description: "Filter by name"
        - in: "query"
          name: "filter[is_host]"
          type: "string"
          description: "Filter by is_host column"
        - in: "query"
          name: "include"
          type: "string"
          description: "Include relations"
          enum:
            - logo
            - users
            - users_count
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CompaniesListResponseModel"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        404:
          description: "Not found"
        500:
          description: "Internal server error"

  /invitations:
    get:
      tags:
        - "Invitations"
      summary: "Get invitations"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "filter[from_user_id]"
          type: "string"
          description: "Filter by user id who created"
        - in: "query"
          name: "filter[to_user_id]"
          type: "string"
          description: "Filter by to user id who recieved"
        - in: "query"
          name: "filter[email]"
          type: "string"
          description: "Filter by email column"
        - in: "query"
          name: "filter[status]"
          type: "string"
          description: "Filter by status column"
        - in: "query"
          name: "filter[company_id]"
          type: "string"
          description: "Filter by company_id column"
        - in: "query"
          name: "include"
          type: "string"
          description: "Include resources"
          enum:
            - company
            - to_user
            - from_user
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/InvitationsListResponseModel"
        401:
          description: "Incorrect auth credentials"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /invitations/{invitation}/approve:
    post:
      tags:
        - "Invitations"
      summary: "Approve invitation"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "query"
          name: "approve"
          type: "boolean"
          description: "Approve invitation after create"
        - in: "path"
          name: "invitation"
          type: "string"
          required: true
          description: "Id of invitation"
      responses:
        201:
          description: "Resourcve successfully created"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /invitations/{invitation}/reject:
    delete:
      tags:
        - "Invitations"
      summary: "Reject invitation"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "invitation"
          type: "string"
          required: true
          description: "Id of invitation"
      responses:
        204:
          description: "Successfully deleted no content"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /invitations/{invitation}/reinvite:
    post:
      tags:
        - "Invitations"
      summary: "Reinvite invitation"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "invitation"
          type: "string"
          required: true
          description: "Id of invitation"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /roles:
    get:
      tags:
        - "Roles"
      summary: "Get roles (Services Only)"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "include"
          type: "string"
          description: "Include resources"
          enum:
            - permissions
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/RolesListResponseModel"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /roles/{role}/attach-user/{user}:
    post:
      tags:
        - "Roles"
      summary: "Attach user to role (Services Only)"
      description: "Services Only"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "role"
          type: "string"
          required: true
          description: "Id of role"
        - in: "path"
          name: "user"
          type: "string"
          required: true
          description: "Id of user"
      responses:
        201:
          description: "Resourcve successfully created"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /roles/{role}/detach-user/{user}:
    delete:
      tags:
        - "Roles"
      summary: "Detach user from role (Services Only)"
      description: "Services Only"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "role"
          type: "string"
          required: true
          description: "Id of role"
        - in: "path"
          name: "user"
          type: "string"
          required: true
          description: "Id of user"
      responses:
        204:
          description: "Successful deleted no content response"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /me:
    get:
      tags:
        - "Me"
      summary: "Get auth user info"
      description: ""
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UserResponseModel"
        401:
          description: "Incorrect auth credentials"
        500:
          description: "Internal server error"

  /me/avatar:
    post:
      tags:
        - "Me"
      summary: "Update user avatar (API Gateway only)"
      description: "API Gateway only"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "UpdateUserAvatarRequestBody"
          in: "body"
          description: "Body of request for updating of user avatar"
          required: true
          schema:
            $ref: "#/definitions/UpdateUserAvatarRequestModel"
      responses:
        201:
          description: "Resourcve successfully created"
          schema:
            $ref: "#/definitions/MediaResponseModel"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /me/companies:
    get:
      tags:
        - "Me"
      summary: "Get my companies (API Gateway only)"
      description: "API Gateway only"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "filter[name]"
          type: "string"
          description: "Filter by id name"
        - in: "query"
          name: "filter[is_host]"
          type: "string"
          description: "Filter by is_host column"
        - in: "query"
          name: "include"
          type: "string"
          description: "Include relations"
          enum:
            - logo
            - users
            - users_count
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CompaniesListResponseModel"
        401:
          description: "Incorrect auth credentials"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"
    post:
      tags:
        - "Me"
      summary: "Create company (API Gateway only)"
      description: "API Gateway only"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "CreateCompanyRequestBody"
          in: "body"
          description: "Body of request for creating company"
          required: true
          schema:
            $ref: "#/definitions/CreateCompanyRequestModel"
      responses:
        201:
          description: "Resourcve successfully created"
          schema:
            $ref: "#/definitions/CompanyResponseModel"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /me/companies/{company}:
    put:
      tags:
        - "Me"
      summary: "Updatre company (API Gateway only)"
      description: "API Gateway only"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "company"
          type: "string"
          required: true
          description: "Id of company"
        - name: "UpdateCompanyRequestBody"
          in: "body"
          description: "Body of request for updating of company"
          required: true
          schema:
            $ref: "#/definitions/UpdateCompanyRequestModel"
      responses:
        200:
          description: "Resourcve successfully created"
          schema:
            $ref: "#/definitions/CompanyResponseModel"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"
    delete:
      tags:
        - "Me"
      summary: "Delete my company (API Gateway only)"
      description: "API Gateway only"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "company"
          type: "string"
          required: true
          description: "Id of company"
      responses:
        204:
          description: "Successful deleted no content response"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        404:
          description: "Not found"
        500:
          description: "Internal server error"

  /me/companies/{company}/logo:
    post:
      tags:
        - "Me"
      summary: "Update my company logo (API Gateway only)"
      description: "API Gateway only"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "company"
          type: "string"
          required: true
          description: "Id of company"
        - name: "UpdateCompanyLogoRequestBody"
          in: "body"
          description: "Body of request for updating of company"
          required: true
          schema:
            $ref: "#/definitions/UpdateCompanyLogoRequestModel"
      responses:
        201:
          description: "Resourcve successfully created"
          schema:
            $ref: "#/definitions/MediaResponseModel"
        401:
          description: "Incorrect auth credentials"
        403:
          description: "Forbidden"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /me/invitations/incoming:
    get:
      tags:
        - "Me"
      summary: "Get invitations for me (API Gateway only)"
      description: "API Gateway only"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "filter[from_user_id]"
          type: "string"
          description: "Filter by user id who created"
        - in: "query"
          name: "filter[email]"
          type: "string"
          description: "Filter by email column"
        - in: "query"
          name: "filter[status]"
          type: "string"
          description: "Filter by status column"
        - in: "query"
          name: "filter[company_id]"
          type: "string"
          description: "Filter by company_id column"
        - in: "query"
          name: "include"
          type: "string"
          description: "Include resources"
          enum:
            - company
            - to_user
            - from_user
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/InvitationsListResponseModel"
        401:
          description: "Incorrect auth credentials"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /me/invitations/outgoing:
    get:
      tags:
        - "Me"
      summary: "Get invitations from me (API Gateway only)"
      description: "API Gateway only"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "page[size]"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "page[number]"
          type: "integer"
          description: "Page number for pagination items"
        - in: "query"
          name: "sort"
          type: "string"
          description: 'Sort by column and direction ("-" before column name - DESC direction)'
          enum:
            - id
            - -id
        - in: "query"
          name: "filter[id]"
          type: "string"
          description: "Filter by id column"
        - in: "query"
          name: "filter[to_user_id]"
          type: "string"
          description: "Filter by to user id who recieved"
        - in: "query"
          name: "filter[email]"
          type: "string"
          description: "Filter by email column"
        - in: "query"
          name: "filter[status]"
          type: "string"
          description: "Filter by status column"
        - in: "query"
          name: "filter[company_id]"
          type: "string"
          description: "Filter by company_id column"
        - in: "query"
          name: "include"
          type: "string"
          description: "Include resources"
          enum:
            - company
            - to_user
            - from_user
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/InvitationsListResponseModel"
        401:
          description: "Incorrect auth credentials"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

definitions:
  DefaultListMeta:
    type: "object"
    properties:
      count:
        type: "integer"
      pages_count:
        type: "integer"

  MediaResponseModel:
    type: "object"
    properties:
      id:
        type: "string"
      path:
        type: "string"
      url:
        type: "string"
      type:
        type: "string"
      mime_type:
        type: "string"
      human_size:
        type: "string"

  HealthCheckResponse:
    type: "object"
    properties:
      message:
        type: "string"
      locale:
        type: "string"

  CheckRegisterEmailRequestModel:
    type: "object"
    required:
      - "email"
    properties:
      email:
        type: "string"
      code:
        type: "string"

  RegisterUserRequestModel:
    type: "object"
    required:
      - "email"
    properties:
      id:
        type: "string"
      email:
        type: "string"
      name:
        type: "string"
        maximum: 50
      second_name:
        type: "string"
        maximum: 50
      last_name:
        type: "string"
        maximum: 50

  CompaniesListResponseModel:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/CompanyResponseModel"
      meta:
        type: "object"
        $ref: "#/definitions/DefaultListMeta"

  CompanyResponseModel:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      is_host:
        type: "boolean"
      users_count:
        type: "integer"
      logo:
        type: "object"
        $ref: "#/definitions/MediaResponseModel"

  CompanyInviteUserRequestModel:
    type: "object"
    required:
      - "email"
    properties:
      email:
        type: "string"

  CreateCompanyRequestModel:
    type: "object"
    required:
      - "name"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"

  MakeCompanyModeratorRequestModel:
    type: "object"
    required:
      - "user_id"
    properties:
      user_id:
        type: "string"

  UpdateCompanyRequestModel:
    type: "object"
    required:
      - "name"
    properties:
      name:
        type: "string"
      description:
        type: "string"

  UpdateCompanyLogoRequestModel:
    type: "object"
    required:
      - "logo"
    properties:
      logo:
        type: "string"
        format: binary

  UpdateUserAvatarRequestModel:
    type: "object"
    required:
      - "avatar"
    properties:
      avatar:
        type: "string"
        format: binary

  UserResponseModel:
    type: "object"
    properties:
      id:
        type: "string"
      cognito_id:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
      is_host:
        type: "boolean"
      second_name:
        type: "string"
      last_name:
        type: "string"
      full_name:
        type: "string"
      short_name:
        type: "string"
      secret_register_code:
        type: "string"
      companies:
        type: "array"
        items:
          $ref: "#/definitions/CompanyResponseModel"
      contacts:
        type: "array"
        items:
          $ref: "#/definitions/ContactResponseModel"
      avatar:
        type: "object"
        $ref: "#/definitions/MediaResponseModel"
      settings:
        type: "object"
        $ref: "#/definitions/SettingsResponseModel"

  UsersListResponseModel:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/UserResponseModel"
      meta:
        type: "object"
        $ref: "#/definitions/DefaultListMeta"

  UpdateUserRequestModel:
    type: "object"
    properties:
      name:
        type: "string"
      second_name:
        type: "string"
      last_name:
        type: "string"

  UpdateUserSettingsRequestModel:
    type: "object"
    properties:
      timezone:
        type: "string"
      location:
        type: "string"

  InvitationsListResponseModel:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/InvitationResponseModel"

  InvitationResponseModel:
    type: "object"
    properties:
      id:
        type: "string"
      status:
        type: "string"
      from_user_id:
        type: "string"
      company_id:
        type: "string"
      to_user_id:
        type: "string"
      from_user:
        type: "object"
        $ref: "#/definitions/UserResponseModel"
      to_user:
        type: "object"
        $ref: "#/definitions/UserResponseModel"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      change_status_at:
        type: "string"
      last_invited_at:
        type: "string"
      company:
        type: "object"
        $ref: "#/definitions/CompanyResponseModel"

  RolesListResponseModel:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/RoleResponseModel"

  RoleResponseModel:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      slug:
        type: "string"
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/PermissionResponseModel"

  PermissionResponseModel:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"

  ContactListResponseModel:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/ContactResponseModel"

  ContactResponseModel:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      value:
        type: "string"
      type:
        type: "string"
      resource_id:
        type: "string"
        format: "uuid"
      resource_type:
        type: "string"
      contact_group_id:
        type: "string"
        format: "uuid"

  SettingsResponseModel:
    type: "object"
    properties:
      timezone:
        type: "string"
      location:
        type: "string"