{
	"info": {
		"_postman_id": "a0bf5f20-9cb3-4f3d-85fc-dacf735e7277",
		"name": "XAPI_QA_ENV separated",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7012418"
	},
	"item": [
		{
			"name": "Ready_for_CI",
			"item": [
				{
					"name": "X-profile",
					"item": [
						{
							"name": "Auth token [ID]",
							"item": [
								{
									"name": "Expired token > Run mutation with required token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"C301997 Expired token > Run mutation with required token\", function () {\r",
													"      var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.be.not.null;\r",
													"    pm.expect(jsonData.errors[0].message).to.include(\"AuthorizationError\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableCookies": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Token1}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
												"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Expired token > Run query with required token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"C301998 Expired token > Run query with required token\", function () {\r",
													"      var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.not.empty;\r",
													"    pm.expect(jsonData.errors[0].message).to.include(\"AuthorizationError\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableCookies": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{Token1}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query contact ( $id: String!) {\r\n    contact (id: $id) {\r\n  id\r\n    dynamicProperties\r\n    {\r\n      dictionaryItem\r\n      {\r\n       id\r\n      label\r\n      }\r\n      name\r\n      value\r\n    }\r\n  }\r\n    }\r\n",
												"variables": "{\r\n  \"id\": \"{{contactId2}}\"\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove token > Run mutations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"C301999 Remove token > Run mutations\", function () {\r",
													"      var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].message).to.include(\"AuthorizationError\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableCookies": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
												"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove token > Run query",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"C302000 Remove token > Run query\", function () {\r",
													"      var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.not.empty;\r",
													"    pm.expect(jsonData.errors[0].message).to.include(\"AuthorizationError\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableCookies": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query contact ( $id: String!) {\r\n    contact (id: $id) {\r\n  id\r\n    dynamicProperties\r\n    {\r\n      dictionaryItem\r\n      {\r\n       id\r\n      label\r\n      }\r\n      name\r\n      value\r\n    }\r\n  }\r\n    }\r\n",
												"variables": "{\r\n  \"id\": \"{{contactId2}}\"\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.cookies.clear()"
										]
									}
								}
							]
						},
						{
							"name": "Anon",
							"item": [
								{
									"name": "Organization Anonymous [ID]",
									"item": [
										{
											"name": "Create Organization",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261610 Organization created\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"organizationId\", jsonData.data.createOrganization.id);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createOrganization ($command: InputCreateOrganizationType!) {\ncreateOrganization (command: $command) {\nid\nname\n}\n}",
														"variables": "{\n\"command\": {\n\"name\": \"Organization_Anonymous\",\n\"addresses\": []\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Organization",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261593 Access denied, User not assigned to organization \", function () {\r",
															"      var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors).to.not.empty;\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organization ($id: String!, $userId: String) {\n    organization (id: $id, userId: $userId) {\n    dynamicProperties\n    {\n      value\n      valueType\n      name\n      dynamicProperty\n      {\n        valueType\n        id\n        label\n        displayOrder\n      dictionaryItems\n        {\n          items\n          {\n            id\n            name\n            label\n          }\n        }\n      }\n      dictionaryItem\n      {\n        id\n        label\n      name\n      }\n    }\n  \n        businessCategory\n        contacts  {\n            edges {\n                cursor\n                node {\n                    birthDate\n                    firstName\n                    fullName\n                    id\n                    lastName\n                    memberType\n                    middleName\n                    name\n                    organizationId\n                    organizations {\n                        items{\n                        businessCategory\n                        description\n                        emails\n                        groups\n                        id\n                        memberType\n                        name\n                        outerId\n                        ownerId\n                        parentId\n                        phones\n                        seoObjectType\n                    }}\n                    organizationsIds\n                    outerId\n                    phones\n                    securityAccounts {\n                        accessFailedCount\n                        createdBy\n                        createdDate\n                        email\n                        emailConfirmed\n                        id\n                        isAdministrator\n                        lockoutEnabled\n                        lockoutEnd\n                        memberId\n                        modifiedBy\n                        modifiedDate\n                        normalizedEmail\n                        normalizedUserName\n                        passwordExpired\n                        permissions\n                        phoneNumber\n                        phoneNumberConfirmed\n                        photoUrl\n                        securityStamp\n                        storeId\n                        twoFactorEnabled\n                        userName\n                        userType\n                    }\n                }\n            }\n            items {\n                birthDate\n                firstName\n                fullName\n                id\n                lastName\n                memberType\n                middleName\n                name\n                organizationId\n                organizations {\n                    items{\n                    businessCategory\n                    contacts {\n                        totalCount\n                    }\n                    description\n                    emails\n                    groups\n                    id\n                    memberType\n                    name\n                    outerId\n                    ownerId\n                    parentId\n                    phones\n                    seoObjectType\n                }}\n                organizationsIds\n                outerId\n                phones\n                securityAccounts {\n                    accessFailedCount\n                    contact {\n                        birthDate\n                        firstName\n                        fullName\n                        id\n                        lastName\n                        memberType\n                        middleName\n                        name\n                        organizationId\n                        organizationsIds\n                        outerId\n                        phones\n                    }\n                    createdBy\n                    createdDate\n                    email\n                    emailConfirmed\n                    id\n                    isAdministrator\n                    lockoutEnabled\n                    lockoutEnd\n                    memberId\n                    modifiedBy\n                    modifiedDate\n                    normalizedEmail\n                    normalizedUserName\n                    passwordExpired\n                    permissions\n                    phoneNumber\n                    phoneNumberConfirmed\n                    photoUrl\n                    roles {\n                        description\n                        id\n                        name\n                        normalizedName\n                        permissions\n                    }\n                    securityStamp\n                    storeId\n                    twoFactorEnabled\n                    userName\n                    userType\n                }\n            }\n            pageInfo {\n                endCursor\n                hasNextPage\n                hasPreviousPage\n                startCursor\n            }\n            totalCount\n        }\n        description\n        emails\n        groups\n        id\n        memberType\n        name\n        outerId\n        ownerId\n        parentId\n        phones\n        seoObjectType\n    }\n}",
														"variables": "{\n  \"id\": \"{{organizationId}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Organization",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261611 Access denied, User not assigned to organization\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors).to.not.empty;\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError:\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateOrganization ($after: String, $first: Int, $searchPhrase: String, $after1: String, $first1: Int, $searchPhrase1: String, $command: InputUpdateOrganizationType!) {\n    updateOrganization (command: $command) {\n        businessCategory\n        contacts (after: $after1, first: $first1, searchPhrase: $searchPhrase1) {\n            edges {\n                cursor\n                node {\n                    birthDate\n                    firstName\n                    fullName\n                    id\n                    lastName\n                    memberType\n                    middleName\n                    name\n                    organizationId\n                    organizations {\n\t\t\t\t\t\t\t\t\t\titems{\n                        businessCategory\n                        description\n                        emails\n                        groups\n                        id\n                        memberType\n                        name\n                        outerId\n                        ownerId\n                        parentId\n                        phones\n                        seoObjectType\n\t\t\t\t\t\t\t\t\t\t}\n                    }\n                    organizationsIds\n                    outerId\n                    phones\n                    securityAccounts {\n                        accessFailedCount\n                        createdBy\n                        createdDate\n                        email\n                        emailConfirmed\n                        id\n                        isAdministrator\n                        lockoutEnabled\n                        lockoutEnd\n                        memberId\n                        modifiedBy\n                        modifiedDate\n                        normalizedEmail\n                        normalizedUserName\n                        passwordExpired\n                        permissions\n                        phoneNumber\n                        phoneNumberConfirmed\n                        photoUrl\n                        securityStamp\n                        storeId\n                        twoFactorEnabled\n                        userName\n                        userType\n                    }\n                }\n            }\n            items {\n                birthDate\n                firstName\n                fullName\n                id\n                lastName\n                memberType\n                middleName\n                name\n                organizationId\n                organizations {\n\t\t\t\t\t\t\t\t\t\titems{\n                    businessCategory\n                    contacts (after: $after, first: $first, searchPhrase: $searchPhrase) {\n                        totalCount\n                    }\n                    description\n                    emails\n                    groups\n                    id\n                    memberType\n                    name\n                    outerId\n                    ownerId\n                    parentId\n                    phones\n                    seoObjectType\n                }}\n                organizationsIds\n                outerId\n                phones\n                securityAccounts {\n                    accessFailedCount\n                    contact {\n                        birthDate\n                        firstName\n                        fullName\n                        id\n                        lastName\n                        memberType\n                        middleName\n                        name\n                        organizationId\n                        organizationsIds\n                        outerId\n                        phones\n                    }\n                    createdBy\n                    createdDate\n                    email\n                    emailConfirmed\n                    id\n                    isAdministrator\n                    lockoutEnabled\n                    lockoutEnd\n                    memberId\n                    modifiedBy\n                    modifiedDate\n                    normalizedEmail\n                    normalizedUserName\n                    passwordExpired\n                    permissions\n                    phoneNumber\n                    phoneNumberConfirmed\n                    photoUrl\n                    roles {\n                        description\n                        id\n                        name\n                        normalizedName\n                        permissions\n                    }\n                    securityStamp\n                    storeId\n                    twoFactorEnabled\n                    userName\n                    userType\n                }\n            }\n            pageInfo {\n                endCursor\n                hasNextPage\n                hasPreviousPage\n                startCursor\n            }\n            totalCount\n        }\n        description\n        emails\n        groups\n        id\n        memberType\n        name\n        outerId\n        ownerId\n        parentId\n        phones\n        seoObjectType\n    }\n}",
														"variables": "{\n\"command\": {\n\"id\": \"{{organizationId}}\",\n\"name\": \"OrganizationxApiReg_Updat2e1\"\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "noauth"
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Contact Anonymous [ID]",
									"item": [
										{
											"name": "Сreate Contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261614 Contact created\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"contactId2\", jsonData.data.createContact.id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
														"variables": "{\n\"command\": {\n\"name\": \"Contact22\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact2\",\n\"firstName\": \"Contact2\",\n\"lastName\": \"Contact2\"\n}\n}\n\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261594 Access denied\", function () {\r",
															"      var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors).to.not.empty;\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n    dynamicProperties\n    {\n      dictionaryItem\n      {\n       id\n      label\n      }\n      name\n      value\n    }\n  }\n    }\n",
														"variables": "{\n  \"id\": \"{{contactId2}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Try to update Contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261609 Access denied\", function () {\r",
															"      var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors).to.not.empty;\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateContact ( $command: InputUpdateContactType!) {\nupdateContact (command: $command) {\nfullName\nid\nlastName\nname\naddresses{\n          items{\n          addressType\n          key\n          city\n          countryCode\n          countryName\n          email\n          firstName\n          lastName\n          id\n          line1\n          line2\n          middleName\n          name phone\n          postalCode\n          regionId\n          regionName\n          zip\n          }}\n}\n}",
														"variables": "{\n\"command\": {\n\"id\": \"{{contactId2}}\",\n\"name\": \"Contact22\",\n\"memberType\": \"Contact22\",\n\"addresses\": [],\n\"fullName\": \"Contact22\",\n\"firstName\": \"Contact22\",\n\"lastName\": \"Contact22\"\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Try to update Contact address",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261599 Access denied\", function () {\r",
															"      var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors).to.not.empty;\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
															"});\r",
															"\r",
															"  "
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateMemberAddresses ($command: InputUpdateMemberAddressType!) {\r\n   updateMemberAddresses (command: $command) {\r\n       name\r\n       id\r\n        addresses { key city countryCode countryName email firstName  lastName line1 line2 middleName name phone postalCode regionId regionName zip }\r\n   }\r\n}\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"memberId\": \"{{contactId2}}\",\r\n    \"addresses\": [{\r\n        \"addressType\": 1,\r\n        \"city\": \"Thousand oaks 2221\",\r\n        \"countryCode\": \"USA\",\r\n        \"countryName\": \"United States\",\r\n        \"email\": \"alivemyuenone@gmail.com\",\r\n        \"firstName\": \"Steven\",\r\n        \"key\": \"3b6fddca-6024-4df9-9e2a-5f13329202cb\",\r\n        \"lastName\": \"Woodward\",\r\n        \"line1\": \"1888, colgate dr\",\r\n        \"name\": \"Steven Woodward  1888, colgate dr Thousand oaks California 91360 United States\",\r\n        \"postalCode\": \"91360\",\r\n        \"regionId\": \"CA\",\r\n        \"regionName\": \"California\"\r\n    }]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Try to delete Сontact",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261619 Access denied\", function () {\r",
															"      var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors).to.not.empty;\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError:\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "noauth"
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "GetToken [ID]",
									"item": [
										{
											"name": "Get admin token",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    \r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set admin token\", function () {\r",
															"   \r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"AdminToken\", jsonData.access_token);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {
													"content-type": true
												},
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "grand_type",
														"value": "",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=password&scope=offline_access&username=admin&password=store",
													"options": {
														"raw": {
															"language": "text"
														}
													}
												},
												"url": {
													"raw": "{{url}}/connect/token",
													"host": [
														"{{url}}"
													],
													"path": [
														"connect",
														"token"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete contact [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Organization [admin]",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/organizations?ids={{organizationId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"organizations"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{organizationId}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "noauth"
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "CRUD by Anonymous",
									"item": [
										{
											"name": "Create user (without token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"createUser (without token)\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.createUser.succeeded).to.equal(true);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n      \n    }\n}",
														"variables": "{\n\"command\": {\n\"applicationUser\": { \n\"id\":\"{{userId3}}\",      \n\"createdBy\": \"anonimAutoTest\",\n\"email\": \"{{$randomEmail}}\",\n\"password\":\"{{$randomPassword}}\",\n\"userName\": \"{{userName3}}\",\n\"userType\": \"Customer\",\n\"storeId\":\"{{storeId}}\"\n}\n}\n}\n\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add user_1 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
														"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"Password1\",\n    \"userName\": \"{{userName3}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId1}}\"\n      }}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get user (without token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Get user (without token)\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"  //  pm.expect(jsonData.errors).to.be.not.empty;\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
															"  });\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.cookies.clear()"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.cookies.clear()"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Cookie",
														"value": "",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query user(\n  $id: String\n  $userName: String\n  $email: String\n  $loginProvider: String\n  $providerKey: String\n) {\n  user(\n    id: $id\n    userName: $userName\n    email: $email\n    loginProvider: $loginProvider\n    providerKey: $providerKey\n  ) {\n    id\n    isAdministrator\n        userName\n    email\n    storeId\n    userName\n    userType\n    roles{\n      id\n      name\n      description\n      permissions\n    }\n  }\n}",
														"variables": "{\n\"id\": \"\",\n\"userName\": \"{{userName3}}\",\n\"loginProvider\":\"\",\n\"providerKey\": \"\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update aser (without token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"updateUser (without token)\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"   // pm.expect(jsonData.errors).to.not.empty;\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
															"  });\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.cookies.clear()"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Cookie",
														"value": "",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateUser ($command: InputUpdateUserType!) {\n    updateUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
														"variables": "\n{\n\"command\":{\n   \"applicationUser\":{\n\"userType\": \"Customer\",\n\"roles\": [],\n\"id\": \"{{userId3}}\",\n\"userName\": \"{{userName3}}\",\n\"email\": \"testqa3@mail.com\",\n\"securityStamp\": \"RandomData\",\n\"storeId\":\"{{storeId}}\"\n}\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete user (without token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"DeleteUser\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"  //  pm.expect(jsonData.errors).to.not.empty;\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: User doesn't have the required permission 'platform:security:delete'\");\r",
															"  });\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Cookie",
														"value": "",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\n    deleteUsers (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
														"variables": "{\n\"command\": {\n\"userNames\": [\n\"{{userName3}}\"\n]\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete user [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"deleteUsers\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.deleteUsers).to.not.empty;\r",
															"    pm.expect(jsonData.data.deleteUsers.succeeded).to.be.equal(true);\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.cookies.clear()"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.cookies.clear()"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\n    deleteUsers (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
														"variables": "{\n\"command\": {\n\"userNames\": [\n\"{{userName3}}\"\n]\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "noauth"
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							],
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "User",
							"item": [
								{
									"name": "Contact User [ID]",
									"item": [
										{
											"name": "Prepare",
											"item": [
												{
													"name": "Delete users [admin]",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\",\"{{userName3}}\"\r\n    ]\r\n  }\r\n}\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Organization [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set organizationId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"organizationId1\", jsonData.data.createOrganization.id);\r",
																	"\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createOrganization ($command: InputCreateOrganizationType!) {\ncreateOrganization (command: $command) {\nid\nname\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"ApiReg_Assign\",\n\"addresses\": []\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Contact_1 [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\",\n\"organizations\": \"{{organizationId1}}\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add User_1 [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"createUser = true\", function () {\r",
																	"    pm.expect(pm.response.text()).to.include(\"true\");\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
																"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"Password1\",\n    \"userName\": \"{{userName1}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId1}}\"\n      }}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check added User_1 [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Check user\", function () {\r",
																	"    var data = pm.response.json();\r",
																	" pm.expect(data.data.contact.securityAccounts).to.be.not.empty;\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"pm.test(\"Set userId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"userId1\", jsonData.data.contact.securityAccounts.id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact {\r\n    contact (id: \"{{contactId1}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n      userName\r\n      email\r\n    }\r\n    }\r\n}\r\n",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token for User_1 [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set Token1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"Token1\", jsonData.access_token);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {
															"content-type": true
														}
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "grand_type",
																"value": "",
																"type": "text",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=password&scope=offline_access&username={{userName1}}&password=Password1",
															"options": {
																"raw": {
																	"language": "text"
																}
															}
														},
														"url": {
															"raw": "{{url}}/connect/token",
															"host": [
																"{{url}}"
															],
															"path": [
																"connect",
																"token"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "User",
											"item": [
												{
													"name": "Create Contact_2 by User_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId2\", jsonData.data.createContact.id);\r",
																	"});\r",
																	"pm.test(\"C261613 User_1 can create Contact_2\", function () {\r",
																	"    var data = pm.response.json();\r",
																	" pm.expect(data.data.createContact).to.be.not.empty;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact2\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact2\",\n\"firstName\": \"Contact2\",\n\"lastName\": \"Contact2\",\n\"organizations\": \"{{organizationId1}}\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index Contacts [admin]",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{contactId1}},{{contactId2}}\"]}]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index Organization [admin]",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{organizationId1}}\"]}]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get Contact_1 by User_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261591 Get user's contact by contact id. User assigned to contact\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.contact.fullName).to.be.not.empty;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact {\r\n    contact (id: \"{{contactId1}}\") {\r\n        fullName\r\n        id\r\n        organizationId\r\n        \r\n    }\r\n    }\r\n\r\n",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get Contact_2 by User_1 (in the same organization)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261677 Get Contact_2, User_1 not assigned to contact. Contact in the same organization \", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.contact.fullName).to.be.not.empty;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact {\r\n    contact (id: \"{{contactId2}}\") {\r\n        fullName\r\n        id\r\n        organizationId\r\n        \r\n    }\r\n    }\r\n\r\n",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update Contact_2 address by User_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261678 Address updated, User not assigned to contact. Contacts in the same organization \", function () {\r",
																	"    var data = pm.response.json();\r",
																	" pm.expect(data.data.updateMemberAddresses.addresses).to.be.not.empty;\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"  "
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateMemberAddresses ($command: InputUpdateMemberAddressType!) {\r\n   updateMemberAddresses (command: $command) {\r\n       name\r\n       id\r\n        addresses { key city countryCode countryName email firstName  lastName line1 line2 middleName name phone postalCode regionId regionName zip }\r\n   }\r\n}\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"memberId\": \"{{contactId2}}\",\r\n    \"addresses\": [{\r\n        \"addressType\": 1,\r\n        \"city\": \"Thousand oaks 25\",\r\n        \"countryCode\": \"USA\",\r\n        \"countryName\": \"United States\",\r\n        \"email\": \"alivemenone@gmail.com\",\r\n        \"firstName\": \"Steven\",\r\n        \"key\": \"3b6fddca-6024-4df9-9e2a-5f13329202cb\",\r\n        \"lastName\": \"Woodward\",\r\n        \"line1\": \"1888, colgate dr\",\r\n        \"name\": \"Steven Woodward  1888, colgate dr Thousand oaks California 91360 United States\",\r\n        \"postalCode\": \"91360\",\r\n        \"regionId\": \"CA\",\r\n        \"regionName\": \"California\"\r\n    }]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update Contact_2 by User_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261679 Name updated, User not assigned to contact. User in the same organization \", function () {\r",
																	"    var data = pm.response.json();\r",
																	" pm.expect(data.data.updateContact.fullName).to.be.equal(\"Contact22\");\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"  \r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateContact ( $command: InputUpdateContactType!) {\r\n    updateContact (command: $command) {\r\n       fullName\r\n        id\r\n        lastName\r\n        name\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"id\": \"{{contactId2}}\",\r\n    \"name\": \"UserA\",\r\n    \"memberType\": \"Contact\",\r\n    \"addresses\": [],\r\n    \"fullName\": \"Contact22\",\r\n    \"firstName\": \"Contact22\",\r\n    \"lastName\": \"Contact22\",\r\n    \"organizations\": \"{{organizationId1}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Try to delete Contact_2 by User_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Access denied, User in the same organization. No permission\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check delete [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261615 Contact_2 not deleted by User_1(without permission and in the same organization)\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.contact.fullName).to.not.empty;\r",
																	"});\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact {\r\n    contact (id: \"{{contactId2}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n      userName\r\n      email\r\n    }\r\n    }\r\n}\r\n",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add role \"organization manager\" [admin]",
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\"permissions\":[{\"id\":\"customer:read\",\"name\":\"customer:read\",\"groupName\":\"Customer\",\"assignedScopes\":[],\"availableScopes\":[{\"type\":\"AssociatedOrganizationsOnlyScope\",\"scope\":\"{{userId}}\"}]},{\"id\":\"customer:create\",\"name\":\"customer:create\",\"groupName\":\"Customer\",\"assignedScopes\":[],\"availableScopes\":[{\"type\":\"AssociatedOrganizationsOnlyScope\",\"scope\":\"{{userId}}\"}]},{\"id\":\"customer:access\",\"name\":\"customer:access\",\"groupName\":\"Customer\",\"assignedScopes\":[],\"availableScopes\":[{\"type\":\"AssociatedOrganizationsOnlyScope\",\"scope\":\"{{userId}}\"}]},{\"id\":\"customer:update\",\"name\":\"customer:update\",\"groupName\":\"Customer\",\"assignedScopes\":[],\"availableScopes\":[{\"type\":\"AssociatedOrganizationsOnlyScope\",\"scope\":\"{{userId}}\"}]},{\"id\":\"customer:delete\",\"name\":\"customer:delete\",\"groupName\":\"Customer\",\"assignedScopes\":[],\"availableScopes\":[]}],\"id\":\"{{roleId}}\",\"name\":\"{{roleName}}\",\"normalizedName\":\"{{roleNormName}}\",\"concurrencyStamp\":\"0afccac0-9e16-4ef9-9998-b8b37aafe0c5\",\"description\":\"1\"}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/platform/security/roles",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"platform",
																"security",
																"roles"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Contact_3 [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId3\", jsonData.data.createContact.id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact3\",\n\"memberType\": \"Contac3\",\n\"addresses\": [],\n\"fullName\": \"Contact3\",\n\"firstName\": \"Contact3\",\n\"lastName\": \"Contact3\",\n\"organizations\": \"{{organizationId1}}\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add User_3 [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"createUser = true\", function () {\r",
																	"    pm.expect(pm.response.text()).to.include(\"true\");\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n    \n        errors {\n            code\n        }\n        succeeded\n    }\n}\n\n",
																"variables": "{\"command\":{\n\"applicationUser\":{\n  \"userType\": \"Customer\",\n  \"roles\": [{   \n           \"name\":\"{{roleName}}\",\n           \"id\":\"{{roleId}}\",\n           \"permissions\":[]\n        }],\n\n  \"storeId\":\"Electronics\",\n  \"email\": \"{{$randomEmail}}\",\n  \"userName\":\"{{userName3}}\",\n  \"memberId\":\"{{contactId3}}\",\n  \"password\":\"Password1234\"\n\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check added User_3 [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Check user\", function () {\r",
																	"    var data = pm.response.json();\r",
																	" pm.expect(data.data.contact.securityAccounts).to.be.not.empty;\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"pm.test(\"Set userId3\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"userId3\", jsonData.data.contact.securityAccounts[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact {\r\n    contact (id: \"{{contactId3}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n      userName\r\n      email\r\n      id\r\n    }\r\n    }\r\n}\r\n",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index Contacts [admin]",
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{contactId3}}\"]}]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token for User_3 [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set Token1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"Token3\", jsonData.access_token);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {
															"content-type": true
														},
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "grand_type",
																"value": "",
																"type": "text",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=password&scope=offline_access&username={{userName3}}&password=Password1234",
															"options": {
																"raw": {
																	"language": "text"
																}
															}
														},
														"url": {
															"raw": "{{url}}/connect/token",
															"host": [
																"{{url}}"
															],
															"path": [
																"connect",
																"token"
															]
														}
													},
													"response": []
												},
												{
													"name": "Try to delete Contact_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token3}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check delete [admin] Copy",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261618 Contact_2  deleted by User_3 (with permission and in the same organization)\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.contact.fullName).to.be.not.empty;\r",
																	"});\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact {\r\n    contact (id: \"{{contactId1}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n      userName\r\n      email\r\n    }\r\n    }\r\n}\r\n",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update Contact_3 [User_3]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261604 Contact_3 can update himself\", function () {\r",
																	"    var data = pm.response.json();\r",
																	" pm.expect(data.data.updateContact.fullName).to.be.equal(\"Contact33\");\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"  \r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token3}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateContact ( $command: InputUpdateContactType!) {\r\n    updateContact (command: $command) {\r\n       fullName\r\n        id\r\n        lastName\r\n        name\r\n        organizationId\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n\"name\": \"Contact3\",\r\n\"memberType\": \"Contact\",\r\n\"addresses\": [],\r\n\"fullName\": \"Contact33\",\r\n\"firstName\": \"Contact3\",\r\n\"lastName\": \"Contact3\",\r\n\"id\": \"{{contactId3}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update Contact_3 address [User_3]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261597 Address updated\", function () {\r",
																	"    var data = pm.response.json();\r",
																	" pm.expect(data.data.updateMemberAddresses.addresses).to.be.not.empty;\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"  "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token3}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateMemberAddresses ($command: InputUpdateMemberAddressType!) {\r\n   updateMemberAddresses (command: $command) {\r\n       name\r\n       id\r\n        addresses { key city countryCode countryName email firstName  lastName line1 line2 middleName name phone postalCode regionId regionName zip }\r\n   }\r\n}\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"memberId\": \"{{contactId3}}\",\r\n    \"addresses\": [{\r\n        \"addressType\": 1,\r\n        \"city\": \"Thousand oaks 25\",\r\n        \"countryCode\": \"USA\",\r\n        \"countryName\": \"United States\",\r\n        \"email\": \"alivemenone@gmail.com\",\r\n        \"firstName\": \"Steven\",\r\n        \"key\": \"3b6fddca-6024-4df9-9e2a-5f13329202cb\",\r\n        \"lastName\": \"Woodward\",\r\n        \"line1\": \"1888, colgate dr\",\r\n        \"name\": \"Steven Woodward  1888, colgate dr Thousand oaks California 91360 United States\",\r\n        \"postalCode\": \"91360\",\r\n        \"regionId\": \"CA\",\r\n        \"regionName\": \"California\"\r\n    }]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Organization 2 [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set organizationId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"organizationId2\", jsonData.data.createOrganization.id);\r",
																	"\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createOrganization ($command: InputCreateOrganizationType!) {\ncreateOrganization (command: $command) {\nid\nname\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"ApiReg_Assign2\",\n\"addresses\": []\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Contact_4  another organization [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId4\", jsonData.data.createContact.id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact4\",\n\"memberType\": \"Contac4\",\n\"addresses\": [],\n\"fullName\": \"Contact4\",\n\"firstName\": \"Contact4\",\n\"lastName\": \"Contact4\",\n\"organizations\": \"{{organizationId2}}\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index Contacts [admin]",
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{contactId4}}\"]}]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update Contact_4 by User_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261608 Access denied, Contact_4 in another organization\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});\r",
																	"\r",
																	"  \r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token3}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateContact ( $command: InputUpdateContactType!) {\r\n    updateContact (command: $command) {\r\n       fullName\r\n        id\r\n        lastName\r\n        name\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"id\": \"{{contactId4}}\",\r\n    \"name\": \"UserA\",\r\n    \"memberType\": \"Contact\",\r\n    \"addresses\": [],\r\n    \"fullName\": \"Contact44\",\r\n    \"firstName\": \"Contact44\",\r\n    \"lastName\": \"Contact44\",\r\n    \"organizations\": \"{{organizationId2}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update Contact_4 address by User_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261598 Access denied, Contact_4 in another organization\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});\r",
																	"\r",
																	"  "
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token3}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateMemberAddresses ($command: InputUpdateMemberAddressType!) {\r\n   updateMemberAddresses (command: $command) {\r\n       name\r\n       id\r\n        addresses { key city countryCode countryName email firstName  lastName line1 line2 middleName name phone postalCode regionId regionName zip }\r\n   }\r\n}\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"memberId\": \"{{contactId4}}\",\r\n    \"addresses\": [{\r\n        \"addressType\": 1,\r\n        \"city\": \"Thousand oaks 25\",\r\n        \"countryCode\": \"USA\",\r\n        \"countryName\": \"United States\",\r\n        \"email\": \"alivemenone@gmail.com\",\r\n        \"firstName\": \"Steven\",\r\n        \"key\": \"3b6fddca-6024-4df9-9e2a-5f13329202cb\",\r\n        \"lastName\": \"Woodward\",\r\n        \"line1\": \"1888, colgate dr\",\r\n        \"name\": \"Steven Woodward  1888, colgate dr Thousand oaks California 91360 United States\",\r\n        \"postalCode\": \"91360\",\r\n        \"regionId\": \"CA\",\r\n        \"regionName\": \"California\"\r\n    }]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get Contact_4 by User_1 (in the same organization) Copy",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261592 Access denied, User_3 in another organization\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});\r",
																	"\r",
																	"  "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token3}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact {\r\n    contact (id: \"{{contactId4}}\") {\r\n        fullName\r\n        id\r\n        organizationId\r\n        \r\n    }\r\n    }\r\n\r\n",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Try to delete Contact_4 by User_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Access denied, Contact_4 in another organization\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token3}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId4}}\"\r\n  }\r\n}\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check delete [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261617 Contact_4  not deleted by User_3 (with permission and not in the same organization)\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.contact.fullName).to.be.not.empty;\r",
																	"});\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact {\r\n    contact (id: \"{{contactId4}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n      userName\r\n      email\r\n    }\r\n    }\r\n}\r\n",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Clear all",
											"item": [
												{
													"name": "Delete users [admin]",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\",\"{{userName3}}\"\r\n    ]\r\n  }\r\n}\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Contact_1 [admin]",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Contact_2 [admin]",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Contact_3 [admin]",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId3}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Contact_4 [admin]",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId4}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete organization [admin]",
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/api/members?ids={{organizationId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"members"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{organizationId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete organization  2[admin]",
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/api/members?ids={{organizationId2}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"members"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{organizationId2}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Admin delete role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Successful POST request\", function () {\r",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/platform/security/roles?ids={{roleId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"platform",
																"security",
																"roles"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{roleId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Organization User [ID]",
									"item": [
										{
											"name": "Delete users [admin]",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\",\"{{userName2}}\"\r\n    ]\r\n  }\r\n}\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Contact_1 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set contactId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
														"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\"\n}\n}\n\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add User_1 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n    \n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
														"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"{{userName1}}\",\n    \"userName\": \"{{userName1}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId1}}\"\n      }}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check added User_1 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check user\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.contact.securityAccounts).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"Set userId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"userId1\", jsonData.data.contact.securityAccounts.id);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contact {\r\n    contact (id: \"{{contactId1}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n        id\r\n      userName\r\n      email\r\n    }\r\n    }\r\n}\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index Contact [admin]",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{contactId1}}\"]}]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										},
										{
											"name": "Token for User_1 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set Token1\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"Token1\", jsonData.access_token);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {
													"content-type": true
												}
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "grand_type",
														"value": "",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=password&scope=offline_access&username={{userName1}}&password={{userName1}}",
													"options": {
														"raw": {
															"language": "text"
														}
													}
												},
												"url": {
													"raw": "{{url}}/connect/token",
													"host": [
														"{{url}}"
													],
													"path": [
														"connect",
														"token"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Organization",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set organizationId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"organizationId1\", jsonData.data.createOrganization.id);\r",
															"\r",
															"});\r",
															"pm.test(\"T669348 User can create organization\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.createOrganization).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token1}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createOrganization ($command: InputCreateOrganizationType!) {\ncreateOrganization (command: $command) {\nid\nname\n}\n}",
														"variables": "{\n\"command\": {\n\"name\": \"ApiReg_Assign1\",\n\"addresses\": []\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index Organization [admin]",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{organizationId1}}\"]}]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Organization",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"T669330 Access denied, User not assigned to organization \", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
															"    console.log(jsonData.errors[0].message);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token1}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organization {\n  organization(id: \"{{organizationId1}}\") {\n    id\n    name\n    businessCategory\n    description\n    outerId\n    emails\n    groups\n    contacts {\n      items {\n        id\n        name\n        fullName\n        firstName\n        lastName\n        phones\n        securityAccounts {\n          userName\n          email\n          createdDate\n          permissions\n          roles {\n            id\n            description\n            name\n            permissions\n          }\n        }\n      }\n    }\n  }\n}",
														"variables": "{\n  \"id\": \"{{organizationId1}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Organization (without permission, not assigned)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"T669339 Access denied, User not assigned to organization and no permission\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
															"    console.log(jsonData.errors[0].message);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token1}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateOrganization ($after: String, $first: Int, $searchPhrase: String, $after1: String, $first1: Int, $searchPhrase1: String, $command: InputUpdateOrganizationType!) {\r\n    updateOrganization (command: $command) {\r\n        businessCategory\r\n        contacts (after: $after1, first: $first1, searchPhrase: $searchPhrase1) {\r\n            edges {\r\n                cursor\r\n                node {\r\n                    birthDate\r\n                    firstName\r\n                    fullName\r\n                    id\r\n                    lastName\r\n                    memberType\r\n                    middleName\r\n                    name\r\n                    organizationId\r\n                    organizations {\r\n\t\t\t\t\t\t\t\t\t\titems{\r\n                        businessCategory\r\n                        description\r\n                        emails\r\n                        groups\r\n                        id\r\n                        memberType\r\n                        name\r\n                        outerId\r\n                        ownerId\r\n                        parentId\r\n                        phones\r\n                        seoObjectType\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                    }\r\n                    organizationsIds\r\n                    outerId\r\n                    phones\r\n                    securityAccounts {\r\n                        accessFailedCount\r\n                        createdBy\r\n                        createdDate\r\n                        email\r\n                        emailConfirmed\r\n                        id\r\n                        isAdministrator\r\n                        lockoutEnabled\r\n                        lockoutEnd\r\n                        memberId\r\n                        modifiedBy\r\n                        modifiedDate\r\n                        normalizedEmail\r\n                        normalizedUserName\r\n                        passwordExpired\r\n                        permissions\r\n                        phoneNumber\r\n                        phoneNumberConfirmed\r\n                        photoUrl\r\n                        securityStamp\r\n                        storeId\r\n                        twoFactorEnabled\r\n                        userName\r\n                        userType\r\n                    }\r\n                }\r\n            }\r\n            items {\r\n                birthDate\r\n                firstName\r\n                fullName\r\n                id\r\n                lastName\r\n                memberType\r\n                middleName\r\n                name\r\n                organizationId\r\n                organizations {\r\n\t\t\t\t\t\t\t\t\t\titems{\r\n                    businessCategory\r\n                    contacts (after: $after, first: $first, searchPhrase: $searchPhrase) {\r\n                        totalCount\r\n                    }\r\n                    description\r\n                    emails\r\n                    groups\r\n                    id\r\n                    memberType\r\n                    name\r\n                    outerId\r\n                    ownerId\r\n                    parentId\r\n                    phones\r\n                    seoObjectType\r\n                }}\r\n                organizationsIds\r\n                outerId\r\n                phones\r\n                securityAccounts {\r\n                    accessFailedCount\r\n                    contact {\r\n                        birthDate\r\n                        firstName\r\n                        fullName\r\n                        id\r\n                        lastName\r\n                        memberType\r\n                        middleName\r\n                        name\r\n                        organizationId\r\n                        organizationsIds\r\n                        outerId\r\n                        phones\r\n                    }\r\n                    createdBy\r\n                    createdDate\r\n                    email\r\n                    emailConfirmed\r\n                    id\r\n                    isAdministrator\r\n                    lockoutEnabled\r\n                    lockoutEnd\r\n                    memberId\r\n                    modifiedBy\r\n                    modifiedDate\r\n                    normalizedEmail\r\n                    normalizedUserName\r\n                    passwordExpired\r\n                    permissions\r\n                    phoneNumber\r\n                    phoneNumberConfirmed\r\n                    photoUrl\r\n                    roles {\r\n                        description\r\n                        id\r\n                        name\r\n                        normalizedName\r\n                        permissions\r\n                    }\r\n                    securityStamp\r\n                    storeId\r\n                    twoFactorEnabled\r\n                    userName\r\n                    userType\r\n                }\r\n            }\r\n            pageInfo {\r\n                endCursor\r\n                hasNextPage\r\n                hasPreviousPage\r\n                startCursor\r\n            }\r\n            totalCount\r\n        }\r\n        description\r\n        emails\r\n        groups\r\n        id\r\n        memberType\r\n        name\r\n        outerId\r\n        ownerId\r\n        parentId\r\n        phones\r\n        seoObjectType\r\n    }\r\n}",
														"variables": "{\r\n\"command\": {\r\n\"id\": \"{{organizationId1}}\",\r\n\"name\": \"Organizati\"\r\n}\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Contact_1 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Contact_1 assigned to organization\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.updateContact.id).to.eql(pm.collectionVariables.get(\"contactId1\"));\r",
															"});\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateContact ( $command: InputUpdateContactType!) {\nupdateContact (command: $command) {\nfullName\nid\nlastName\nname\norganizationId\naddresses{\n          items{\n          addressType\n          key\n          city\n          countryCode\n          countryName\n          email\n          firstName\n          lastName\n          id\n          line1\n          line2\n          middleName\n          name phone\n          postalCode\n          regionId\n          regionName\n          zip\n          }}\n}\n}",
														"variables": "{\n\"command\": {\n\"id\": \"{{contactId1}}\",\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\",\n\"organizations\":\"{{organizationId1}}\"\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Organization (without permission, assigned)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C328380 Access denied, no permission\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
															"    console.log(jsonData.errors[0].message);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token1}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateOrganization ($after: String, $first: Int, $searchPhrase: String, $after1: String, $first1: Int, $searchPhrase1: String, $command: InputUpdateOrganizationType!) {\r\n    updateOrganization (command: $command) {\r\n        businessCategory\r\n        contacts (after: $after1, first: $first1, searchPhrase: $searchPhrase1) {\r\n            edges {\r\n                cursor\r\n                node {\r\n                    birthDate\r\n                    firstName\r\n                    fullName\r\n                    id\r\n                    lastName\r\n                    memberType\r\n                    middleName\r\n                    name\r\n                    organizationId\r\n                    organizations {\r\n\t\t\t\t\t\t\t\t\t\titems{\r\n                        businessCategory\r\n                        description\r\n                        emails\r\n                        groups\r\n                        id\r\n                        memberType\r\n                        name\r\n                        outerId\r\n                        ownerId\r\n                        parentId\r\n                        phones\r\n                        seoObjectType\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                    }\r\n                    organizationsIds\r\n                    outerId\r\n                    phones\r\n                    securityAccounts {\r\n                        accessFailedCount\r\n                        createdBy\r\n                        createdDate\r\n                        email\r\n                        emailConfirmed\r\n                        id\r\n                        isAdministrator\r\n                        lockoutEnabled\r\n                        lockoutEnd\r\n                        memberId\r\n                        modifiedBy\r\n                        modifiedDate\r\n                        normalizedEmail\r\n                        normalizedUserName\r\n                        passwordExpired\r\n                        permissions\r\n                        phoneNumber\r\n                        phoneNumberConfirmed\r\n                        photoUrl\r\n                        securityStamp\r\n                        storeId\r\n                        twoFactorEnabled\r\n                        userName\r\n                        userType\r\n                    }\r\n                }\r\n            }\r\n            items {\r\n                birthDate\r\n                firstName\r\n                fullName\r\n                id\r\n                lastName\r\n                memberType\r\n                middleName\r\n                name\r\n                organizationId\r\n                organizations {\r\n\t\t\t\t\t\t\t\t\t\titems{\r\n                    businessCategory\r\n                    contacts (after: $after, first: $first, searchPhrase: $searchPhrase) {\r\n                        totalCount\r\n                    }\r\n                    description\r\n                    emails\r\n                    groups\r\n                    id\r\n                    memberType\r\n                    name\r\n                    outerId\r\n                    ownerId\r\n                    parentId\r\n                    phones\r\n                    seoObjectType\r\n                }}\r\n                organizationsIds\r\n                outerId\r\n                phones\r\n                securityAccounts {\r\n                    accessFailedCount\r\n                    contact {\r\n                        birthDate\r\n                        firstName\r\n                        fullName\r\n                        id\r\n                        lastName\r\n                        memberType\r\n                        middleName\r\n                        name\r\n                        organizationId\r\n                        organizationsIds\r\n                        outerId\r\n                        phones\r\n                    }\r\n                    createdBy\r\n                    createdDate\r\n                    email\r\n                    emailConfirmed\r\n                    id\r\n                    isAdministrator\r\n                    lockoutEnabled\r\n                    lockoutEnd\r\n                    memberId\r\n                    modifiedBy\r\n                    modifiedDate\r\n                    normalizedEmail\r\n                    normalizedUserName\r\n                    passwordExpired\r\n                    permissions\r\n                    phoneNumber\r\n                    phoneNumberConfirmed\r\n                    photoUrl\r\n                    roles {\r\n                        description\r\n                        id\r\n                        name\r\n                        normalizedName\r\n                        permissions\r\n                    }\r\n                    securityStamp\r\n                    storeId\r\n                    twoFactorEnabled\r\n                    userName\r\n                    userType\r\n                }\r\n            }\r\n            pageInfo {\r\n                endCursor\r\n                hasNextPage\r\n                hasPreviousPage\r\n                startCursor\r\n            }\r\n            totalCount\r\n        }\r\n        description\r\n        emails\r\n        groups\r\n        id\r\n        memberType\r\n        name\r\n        outerId\r\n        ownerId\r\n        parentId\r\n        phones\r\n        seoObjectType\r\n    }\r\n}",
														"variables": "{\r\n\"command\": {\r\n\"id\": \"{{organizationId1}}\",\r\n\"name\": \"Organization\"\r\n}\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add role \"organization manager\" [admin]",
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\"permissions\":[{\"id\":\"customer:read\",\"name\":\"customer:read\",\"groupName\":\"Customer\",\"assignedScopes\":[],\"availableScopes\":[{\"type\":\"AssociatedOrganizationsOnlyScope\",\"scope\":\"{{userId}}\"}]},{\"id\":\"customer:create\",\"name\":\"customer:create\",\"groupName\":\"Customer\",\"assignedScopes\":[],\"availableScopes\":[{\"type\":\"AssociatedOrganizationsOnlyScope\",\"scope\":\"{{userId}}\"}]},{\"id\":\"customer:access\",\"name\":\"customer:access\",\"groupName\":\"Customer\",\"assignedScopes\":[],\"availableScopes\":[{\"type\":\"AssociatedOrganizationsOnlyScope\",\"scope\":\"{{userId}}\"}]},{\"id\":\"customer:update\",\"name\":\"customer:update\",\"groupName\":\"Customer\",\"assignedScopes\":[],\"availableScopes\":[{\"type\":\"AssociatedOrganizationsOnlyScope\",\"scope\":\"{{userId}}\"}]},{\"id\":\"customer:delete\",\"name\":\"customer:delete\",\"groupName\":\"Customer\",\"assignedScopes\":[],\"availableScopes\":[]}],\"id\":\"36b7b682-5245-4faa-9297-ce5045d3eed1\",\"name\":\"{{roleName}}\",\"normalizedName\":\"{{roleNormName}}\",\"concurrencyStamp\":\"0afccac0-9e16-4ef9-9998-b8b37aafe0c5\",\"description\":\"1\"}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/platform/security/roles",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"platform",
														"security",
														"roles"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Contact_2 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set contactId2\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"contactId2\", jsonData.data.createContact.id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
														"variables": "{\n\"command\": {\n\"name\": \"Contact2\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact2\",\n\"firstName\": \"Contact2\",\n\"lastName\": \"Contact2\"\n}\n}\n\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add User_2 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n    \n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
														"variables": "{\"command\":{\n\"applicationUser\":{\n  \"userType\": \"Customer\",\n  \"roles\": [{   \n           \"name\":\"{{roleName}}\",\n           \"id\":\"{{roleId}}\",\n           \"permissions\":[]\n        }],\n\n  \"storeId\":\"Electronics\",\n  \"id\":\"{{userId2}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"userName\":\"{{userName2}}\",\n  \"memberId\":\"{{contactId2}}\",\n  \"password\":\"{{userName2}}\"\n\n}\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check added User_2 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check user\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.contact.securityAccounts).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"Set userId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"userId2\", jsonData.data.contact.securityAccounts[0].id);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contact {\r\n    contact (id: \"{{contactId2}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n        id\r\n      userName\r\n      email\r\n    }\r\n    }\r\n}\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Token for User_2 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set Token1\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"Token2\", jsonData.access_token);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {
													"content-type": true
												}
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "grand_type",
														"value": "",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=password&scope=offline_access&username={{userName2}}&password={{userName2}}",
													"options": {
														"raw": {
															"language": "text"
														}
													}
												},
												"url": {
													"raw": "{{url}}/connect/token",
													"host": [
														"{{url}}"
													],
													"path": [
														"connect",
														"token"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Organization (with permission, not assigned)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"T669341 Access denied, With permission, but not assigned\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
															"    console.log(jsonData.errors[0].message);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token2}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateOrganization ($after: String, $first: Int, $searchPhrase: String, $after1: String, $first1: Int, $searchPhrase1: String, $command: InputUpdateOrganizationType!) {\n    updateOrganization (command: $command) {\n        businessCategory\n        contacts (after: $after1, first: $first1, searchPhrase: $searchPhrase1) {\n            edges {\n                cursor\n                node {\n                    birthDate\n                    firstName\n                    fullName\n                    id\n                    lastName\n                    memberType\n                    middleName\n                    name\n                    organizationId\n                    organizations {\n\t\t\t\t\t\t\t\t\t\titems{\n                        businessCategory\n                        description\n                        emails\n                        groups\n                        id\n                        memberType\n                        name\n                        outerId\n                        ownerId\n                        parentId\n                        phones\n                        seoObjectType\n\t\t\t\t\t\t\t\t\t\t}\n                    }\n                    organizationsIds\n                    outerId\n                    phones\n                    securityAccounts {\n                        accessFailedCount\n                        createdBy\n                        createdDate\n                        email\n                        emailConfirmed\n                        id\n                        isAdministrator\n                        lockoutEnabled\n                        lockoutEnd\n                        memberId\n                        modifiedBy\n                        modifiedDate\n                        normalizedEmail\n                        normalizedUserName\n                        passwordExpired\n                        permissions\n                        phoneNumber\n                        phoneNumberConfirmed\n                        photoUrl\n                        securityStamp\n                        storeId\n                        twoFactorEnabled\n                        userName\n                        userType\n                    }\n                }\n            }\n            items {\n                birthDate\n                firstName\n                fullName\n                id\n                lastName\n                memberType\n                middleName\n                name\n                organizationId\n                organizations {\n\t\t\t\t\t\t\t\t\t\titems{\n                    businessCategory\n                    contacts (after: $after, first: $first, searchPhrase: $searchPhrase) {\n                        totalCount\n                    }\n                    description\n                    emails\n                    groups\n                    id\n                    memberType\n                    name\n                    outerId\n                    ownerId\n                    parentId\n                    phones\n                    seoObjectType\n                }}\n                organizationsIds\n                outerId\n                phones\n                securityAccounts {\n                    accessFailedCount\n                    contact {\n                        birthDate\n                        firstName\n                        fullName\n                        id\n                        lastName\n                        memberType\n                        middleName\n                        name\n                        organizationId\n                        organizationsIds\n                        outerId\n                        phones\n                    }\n                    createdBy\n                    createdDate\n                    email\n                    emailConfirmed\n                    id\n                    isAdministrator\n                    lockoutEnabled\n                    lockoutEnd\n                    memberId\n                    modifiedBy\n                    modifiedDate\n                    normalizedEmail\n                    normalizedUserName\n                    passwordExpired\n                    permissions\n                    phoneNumber\n                    phoneNumberConfirmed\n                    photoUrl\n                    roles {\n                        description\n                        id\n                        name\n                        normalizedName\n                        permissions\n                    }\n                    securityStamp\n                    storeId\n                    twoFactorEnabled\n                    userName\n                    userType\n                }\n            }\n            pageInfo {\n                endCursor\n                hasNextPage\n                hasPreviousPage\n                startCursor\n            }\n            totalCount\n        }\n        description\n        emails\n        groups\n        id\n        memberType\n        name\n        outerId\n        ownerId\n        parentId\n        phones\n        seoObjectType\n    }\n}",
														"variables": "{\n\"command\": {\n\"id\": \"{{organizationId1}}\",\n\"name\": \"OrganizationxApiReg_Updat2e122\"\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Contact_2 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Contact_2 assigned to organization\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.updateContact.id).to.eql(pm.collectionVariables.get(\"contactId2\"));\r",
															"});\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateContact ( $command: InputUpdateContactType!) {\nupdateContact (command: $command) {\nfullName\nid\nlastName\nname\norganizationId\naddresses{\n          items{\n          addressType\n          key\n          city\n          countryCode\n          countryName\n          email\n          firstName\n          lastName\n          id\n          line1\n          line2\n          middleName\n          name phone\n          postalCode\n          regionId\n          regionName\n          zip\n          }}\n}\n}",
														"variables": "{\n\"command\": {\n\"id\": \"{{contactId2}}\",\n\"name\": \"Contact2\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact2\",\n\"firstName\": \"Contact2\",\n\"lastName\": \"Contact2\",\n\"organizations\":\"{{organizationId1}}\"\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Organization (user assigned)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"T669329 Get organization\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.organization).to.not.eql(null);\r",
															"    pm.expect(json.data.organization).to.be.an(\"object\");\r",
															"    pm.expect(json.data.organization.id).to.be.a(\"string\");\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token2}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organization ($id: String!, $userId: String) {\n    organization (id: $id, userId: $userId) {\n    dynamicProperties\n    {\n      value\n      valueType\n      name\n      dynamicProperty\n      {\n        valueType\n        id\n        label\n        displayOrder\n      dictionaryItems\n        {\n          items\n          {\n            id\n            name\n            label\n          }\n        }\n      }\n      dictionaryItem\n      {\n        id\n        label\n      name\n      }\n    }\n  \n        businessCategory\n        contacts  {\n            edges {\n                cursor\n                node {\n                    birthDate\n                    firstName\n                    fullName\n                    id\n                    lastName\n                    memberType\n                    middleName\n                    name\n                    organizationId\n                    organizations {\n                        items{\n                        businessCategory\n                        description\n                        emails\n                        groups\n                        id\n                        memberType\n                        name\n                        outerId\n                        ownerId\n                        parentId\n                        phones\n                        seoObjectType\n                    }}\n                    organizationsIds\n                    outerId\n                    phones\n                    securityAccounts {\n                        accessFailedCount\n                        createdBy\n                        createdDate\n                        email\n                        emailConfirmed\n                        id\n                        isAdministrator\n                        lockoutEnabled\n                        lockoutEnd\n                        memberId\n                        modifiedBy\n                        modifiedDate\n                        normalizedEmail\n                        normalizedUserName\n                        passwordExpired\n                        permissions\n                        phoneNumber\n                        phoneNumberConfirmed\n                        photoUrl\n                        securityStamp\n                        storeId\n                        twoFactorEnabled\n                        userName\n                        userType\n                    }\n                }\n            }\n            items {\n                birthDate\n                firstName\n                fullName\n                id\n                lastName\n                memberType\n                middleName\n                name\n                organizationId\n                organizations {\n                    items{\n                    businessCategory\n                    contacts {\n                        totalCount\n                    }\n                    description\n                    emails\n                    groups\n                    id\n                    memberType\n                    name\n                    outerId\n                    ownerId\n                    parentId\n                    phones\n                    seoObjectType\n                }}\n                organizationsIds\n                outerId\n                phones\n                securityAccounts {\n                    accessFailedCount\n                    contact {\n                        birthDate\n                        firstName\n                        fullName\n                        id\n                        lastName\n                        memberType\n                        middleName\n                        name\n                        organizationId\n                        organizationsIds\n                        outerId\n                        phones\n                    }\n                    createdBy\n                    createdDate\n                    email\n                    emailConfirmed\n                    id\n                    isAdministrator\n                    lockoutEnabled\n                    lockoutEnd\n                    memberId\n                    modifiedBy\n                    modifiedDate\n                    normalizedEmail\n                    normalizedUserName\n                    passwordExpired\n                    permissions\n                    phoneNumber\n                    phoneNumberConfirmed\n                    photoUrl\n                    roles {\n                        description\n                        id\n                        name\n                        normalizedName\n                        permissions\n                    }\n                    securityStamp\n                    storeId\n                    twoFactorEnabled\n                    userName\n                    userType\n                }\n            }\n            pageInfo {\n                endCursor\n                hasNextPage\n                hasPreviousPage\n                startCursor\n            }\n            totalCount\n        }\n        description\n        emails\n        groups\n        id\n        memberType\n        name\n        outerId\n        ownerId\n        parentId\n        phones\n        seoObjectType\n    }\n}",
														"variables": "{\n  \"id\": \"{{organizationId1}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Organization (with permission, assigned)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"CheckId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.updateOrganization.id).to.eql(pm.collectionVariables.get(\"organizationId1\"));\r",
															"});\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"T669340 Organization updated\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.updateOrganization.name).to.eql(\"OrganizationxApiReg_Updat_Update1\");\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token2}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateOrganization ($after: String, $first: Int, $searchPhrase: String, $after1: String, $first1: Int, $searchPhrase1: String, $command: InputUpdateOrganizationType!) {\n    updateOrganization (command: $command) {\n        businessCategory\n        contacts (after: $after1, first: $first1, searchPhrase: $searchPhrase1) {\n            edges {\n                cursor\n                node {\n                    birthDate\n                    firstName\n                    fullName\n                    id\n                    lastName\n                    memberType\n                    middleName\n                    name\n                    organizationId\n                    organizations {\n\t\t\t\t\t\t\t\t\t\titems{\n                        businessCategory\n                        description\n                        emails\n                        groups\n                        id\n                        memberType\n                        name\n                        outerId\n                        ownerId\n                        parentId\n                        phones\n                        seoObjectType\n\t\t\t\t\t\t\t\t\t\t}\n                    }\n                    organizationsIds\n                    outerId\n                    phones\n                    securityAccounts {\n                        accessFailedCount\n                        createdBy\n                        createdDate\n                        email\n                        emailConfirmed\n                        id\n                        isAdministrator\n                        lockoutEnabled\n                        lockoutEnd\n                        memberId\n                        modifiedBy\n                        modifiedDate\n                        normalizedEmail\n                        normalizedUserName\n                        passwordExpired\n                        permissions\n                        phoneNumber\n                        phoneNumberConfirmed\n                        photoUrl\n                        securityStamp\n                        storeId\n                        twoFactorEnabled\n                        userName\n                        userType\n                    }\n                }\n            }\n            items {\n                birthDate\n                firstName\n                fullName\n                id\n                lastName\n                memberType\n                middleName\n                name\n                organizationId\n                organizations {\n\t\t\t\t\t\t\t\t\t\titems{\n                    businessCategory\n                    contacts (after: $after, first: $first, searchPhrase: $searchPhrase) {\n                        totalCount\n                    }\n                    description\n                    emails\n                    groups\n                    id\n                    memberType\n                    name\n                    outerId\n                    ownerId\n                    parentId\n                    phones\n                    seoObjectType\n                }}\n                organizationsIds\n                outerId\n                phones\n                securityAccounts {\n                    accessFailedCount\n                    contact {\n                        birthDate\n                        firstName\n                        fullName\n                        id\n                        lastName\n                        memberType\n                        middleName\n                        name\n                        organizationId\n                        organizationsIds\n                        outerId\n                        phones\n                    }\n                    createdBy\n                    createdDate\n                    email\n                    emailConfirmed\n                    id\n                    isAdministrator\n                    lockoutEnabled\n                    lockoutEnd\n                    memberId\n                    modifiedBy\n                    modifiedDate\n                    normalizedEmail\n                    normalizedUserName\n                    passwordExpired\n                    permissions\n                    phoneNumber\n                    phoneNumberConfirmed\n                    photoUrl\n                    roles {\n                        description\n                        id\n                        name\n                        normalizedName\n                        permissions\n                    }\n                    securityStamp\n                    storeId\n                    twoFactorEnabled\n                    userName\n                    userType\n                }\n            }\n            pageInfo {\n                endCursor\n                hasNextPage\n                hasPreviousPage\n                startCursor\n            }\n            totalCount\n        }\n        description\n        emails\n        groups\n        id\n        memberType\n        name\n        outerId\n        ownerId\n        parentId\n        phones\n        seoObjectType\n    }\n}",
														"variables": "{\n\"command\": {\n\"id\": \"{{organizationId1}}\",\n\"name\": \"OrganizationxApiReg_Updat_Update1\"\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete users [admin]",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\",\"{{userName2}}\"\r\n    ]\r\n  }\r\n}\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Contact_1 [admin]",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Contact_2 [admin]",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Admin delete role",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Successful POST request\", function () {\r",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/platform/security/roles?ids={{roleId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"platform",
														"security",
														"roles"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{roleId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete organization [admin]",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/members?ids={{organizationId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"members"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{organizationId1}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						},
						{
							"name": "Admin",
							"item": [
								{
									"name": "Contact Admin [ID]",
									"item": [
										{
											"name": "Create contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261668 Set contactId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"contactId\", jsonData.data.createContact.id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n}\n}",
														"variables": "{\n\"command\": {\n\"name\": \"UserA\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"UserA\",\n\"firstName\": \"UserA\",\n\"lastName\": \"UserA\"\n}\n}\n\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//var jsonData = pm.response.json();\r",
															"//if(pm.expect(jsonData.errors[0].message).to.be.not.empty) {\r",
															"///    postman.setNextRequest(null)\r",
															"//}\r",
															"//if(pm.expect(jsonData.errors[0].message).to.be.not.empty) {\r",
															"//    postman.setNextRequest('Index Contact')\r",
															"//}\r",
															"\r",
															"\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"CheckId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.updateContact.id).to.eql(pm.collectionVariables.get(\"contactId\"));\r",
															"});\r",
															"\r",
															"pm.test(\"C261667 Check changes\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.updateContact.fullName).to.eql(\"UserA111\");\r",
															"    pm.expect(jsonData.data.updateContact.lastName).to.eql(\"UserB2\");\r",
															"    pm.expect(jsonData.data.updateContact.name).to.eql(\"UserA111\");\r",
															"});\r",
															"\r",
															"pm.test(\"Address is empty\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.updateContact.addresses.items).to.be.empty;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateContact ( $command: InputUpdateContactType!) {\nupdateContact (command: $command) {\nfullName\nid\nlastName\nname\naddresses{\n          items{\n          addressType\n          key\n          city\n          countryCode\n          countryName\n          email\n          firstName\n          lastName\n          id\n          line1\n          line2\n          middleName\n          name phone\n          postalCode\n          regionId\n          regionName\n          zip\n          }}\n}\n}",
														"variables": "{\n\"command\": {\n\"id\": \"{{contactId}}\",\n\"name\": \"UserB2\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"UserA111\",\n\"firstName\": \"UserB2\",\n\"lastName\": \"UserB2\"\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update addresses",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261666 Address was add\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.updateContact.addresses.items).to.not.empty;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateContact ($command: InputUpdateContactType!) {\n    updateContact (command: $command) {\n         addresses{\n          items{\n          addressType\n          key\n          city\n          countryCode\n          countryName\n          email\n          firstName\n          lastName\n          id\n          line1\n          line2\n          middleName\n          name phone\n          postalCode\n          regionId\n          regionName\n          zip\n          }\n        }\n        }\n    }",
														"variables": "{\n\"command\": {\n\"id\":\"{{contactId}}\",\n\"firstName\":\"UserB2\",\n\"lastName\":\"UserB2\",\n\"addresses\": [{\n\"addressType\": 2,\n\"city\": \"1Thousand oaks 25\",\n\"countryCode\": \"VUT\",\n\"countryName\": \"United States\",\n\"email\": \"alivemenone@gmail.com\",\n\"firstName\": \"Steven\",\n\"lastName\": \"Woodward\",\n\"line1\": \"1888, colgate dr\",\n\"name\": \"Steven Woodward 1888, colgate dr Thousand oaks California 91360 United States\",\n\"postalCode\": \"91360\",\n\"regionId\": \"CA\",\n\"regionName\": \"California\"\n}]\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261665 Get user's contact by contact id\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.contact).to.not.eql(null);\r",
															"    pm.expect(json.data.contact).to.be.an(\"object\");\r",
															"    pm.expect(json.data.contact.id).to.be.a(\"string\");\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n    dynamicProperties\n    {\n      dictionaryItem\n      {\n       id\n      label\n      }\n      name\n      value\n    }\n  }\n    }\n",
														"variables": "{\n  \"id\": \"{{contactId}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Contacts",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Search orders\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.contacts.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contacts($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\ncontacts(searchPhrase:$searchPhrase, sort: $sort, first: $first, after:$after){\r\ntotalCount items{\r\nid\r\nname\r\ndynamicProperties(cultureName: $cultureName) {\r\nname value valueType\r\ndynamicProperty {\r\nname label valueType\r\ndictionaryItems(cultureName: $cultureName){ items { label name }}\r\n}\r\ndictionaryItem {\r\nlabel name id\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"cultureName\": \"en-US\",\r\n\"after\": \"0\",\r\n\"first\": 20,\r\n\"sort\": \"name:desc\"\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update contact dynamic property",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C315776 Update contact dynamic property\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.updateMemberDynamicProperties.dynamicProperties).to.not.empty;\r",
															"    pm.expect(pm.response.text()).to.include(\"CustomerModule_Contact_ShortText_1_0_0\");\r",
															"   });\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateMemberDynamicProperties($command: InputUpdateMemberDynamicPropertiesType!) {\r\n    updateMemberDynamicProperties(command: $command) {\r\n    \t\tname\r\n            id\r\n        dynamicProperties {\r\n          name value\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n   \"memberId\":\"{{contactId}}\",\r\n    \"dynamicProperties\": [\r\n         {\r\n          \"name\": \"CustomerModule_Contact_Decimal_0_0_0\",\r\n          \"value\": {{decimal1}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Html_0_0_0\",\r\n          \"value\": \"{{html1}}\"\r\n        },\r\n                {\r\n          \"name\": \"Married\",\r\n          \"value\": {{bool2}}\r\n        },\r\n        {\r\n         \"name\": \"Sex\",\r\n          \"value\": \"{{Sex}}\"\r\n        },\r\n        {\r\n        \"name\": \"occupation\",\r\n        \"value\":\"{{occupation}}\"\r\n        }, \r\n        {\r\n          \"name\": \"Default shipping address\",\r\n          \"value\": \"{{Defaultship}}\"\r\n        },            \r\n            {\r\n          \"name\": \"CustomerModule_Contact_Integer_1_0_0\",\r\n          \"value\": {{int1}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Integer_1_0_0\",\r\n          \"value\": {{int2}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Integer_0_0_0\",\r\n          \"value\": {{int3}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Html_0_1_0\",\r\n          \"value\": \"{{html3}}\",\r\n          \"cultureName\":\"de-DE\"\r\n        },\r\n         {\r\n          \"name\": \"CustomerModule_Contact_Html_0_1_0\",\r\n          \"value\": \"{{html1}}\",\r\n          \"cultureName\":\"en-US\"\r\n        },\r\n         {\r\n          \"name\": \"CustomerModule_Contact_Html_0_1_0\",\r\n          \"value\": \"{{html2}}\",\r\n          \"cultureName\":\"fr-FR\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Boolean_0_0_0\",\r\n          \"value\": {{bool1}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_DateTime_0_0_0\",\r\n          \"value\": \"{{data1}}\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Decimal_1_0_0\",\r\n          \"value\": {{decimal2}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Decimal_1_0_0\",\r\n          \"value\": {{decimal3}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_LongText_0_0_0\",\r\n          \"value\": \"{{long1}}\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_ShortText_0_0_0\",\r\n          \"value\": \"{{short1}}\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Image_0_0_0\",\r\n          \"value\": \"{{image}}\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_LongText_0_1_0\",\r\n          \"value\": \"{{long2}}\"\r\n        },              \r\n        {\r\n          \"name\": \"CustomerModule_Contact_ShortText_0_0_1\",\r\n          \"value\": \"{{short2}}\"          \r\n        },\r\n         {\r\n          \"name\": \"CustomerModule_Contact_ShortText_0_1_1\",\r\n          \"value\": \"{{short3}}\",\r\n\t\t\t\t\t\"cultureName\": \"en-US\"\r\n        },\r\n        {\r\n         \"name\": \"CustomerModule_Contact_ShortText_0_1_1\",\r\n          \"value\": \"{{short6}}\",\r\n\t\t\t\t\t\"cultureName\": \"de-DE\"\r\n        },        \r\n        {\r\n          \"name\": \"CustomerModule_Contact_ShortText_0_1_0\",\r\n          \"value\": \"{{short4}}\",\r\n\t\t\t\t\t\"cultureName\": \"en-US\"\r\n        },\r\n          {\r\n          \"name\": \"CustomerModule_Contact_ShortText_0_1_0\",\r\n          \"value\": \"{{short5}}\",\r\n\t\t\t\t\t\"cultureName\": \"fr-FR\"\r\n        },\r\n       {\r\n          \"name\": \"CustomerModule_Contact_ShortText_1_0_0\",\r\n          \"value\": \"{{short7}}\"\r\n        },\r\n {\r\n          \"name\": \"CustomerModule_Contact_ShortText_1_0_0\",\r\n          \"value\": \"{{short8}}\"\r\n},\r\n        {\r\n          \"name\": \"CustomerModule_Contact_ShortText_1_1_0\",\r\n          \"value\": \"{{short12}}\",\r\n\t\t\t\t\t\"cultureName\": \"en-US\"\r\n        },\r\n    {\r\n          \"name\": \"CustomerModule_Contact_ShortText_1_1_0\",\r\n          \"value\": \"{{short13}}\",\r\n\t\t\t\t\t\"cultureName\": \"fr-FR\"\r\n        },\r\n    {\r\n          \"name\": \"CustomerModule_Contact_ShortText_1_1_0\",\r\n          \"value\": \"{{short14}}\",\r\n\t\t\t\t\t\"cultureName\": \"en-US\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_ShortText_1_1_1\",\r\n          \"value\": \"{{short15}}\",\r\n\t\t    \"cultureName\": \"en-US\"\r\n        },\r\n        {\r\n          \"name\": \"Default shipping address\",\r\n          \"value\": \"\"\r\n        }\r\n  \t]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties after update",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"C327960 Check dynamic properties after update short\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327961 Check dynamic properties after update datetime\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															" });\r",
															" pm.test(\"C327962 Check dynamic properties after update int\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327963 Check dynamic properties after update decimal\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															" });\r",
															" pm.test(\"C327964 Check dynamic properties after update long text\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327965 Check dynamic properties after update html\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															" });\r",
															" pm.test(\"C327966 Check dynamic properties after update empty\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(\"Default shipping address\");\r",
															" });\r",
															"pm.test(\"C327967 Check dynamic properties after update multivalue\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short7\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short8\"));\r",
															" });\r",
															" pm.test(\"C327968 Check dynamic properties after update Multilingual\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															" });\r",
															"  pm.test(\"C328695 Check dynamic properties after update image\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															" });\r",
															"  pm.test(\"C328696 Check dynamic properties after update boolean\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															" });\r",
															"\r",
															" \r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"/*pm.test(\"Check dynamic properties after update\", function () {\r",
															"    \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short6\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short7\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short13\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short14\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short8\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short12\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short13\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short14\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short15\"));\r",
															"\r",
															" });*/\r",
															" \r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n  name\n    dynamicProperties\n    {\n      dictionaryItem\n      {\n       id\n      label\n      }\n      name\n      value\n    }\n  }\n    }\n",
														"variables": "{\n  \"id\": \"{{contactId}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index Contact",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{contactId}}\"]}]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										},
										{
											"name": "Contacts by bool",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C284231 Search Contact by value from Dynamic properties\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.contacts.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"C289839 Search contacts by bool\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.contacts.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 8000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contacts($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\ncontacts(searchPhrase:$searchPhrase, sort: $sort, first: $first, after:$after){\r\ntotalCount items{\r\nid\r\nname\r\ndynamicProperties(cultureName: $cultureName) {\r\nname value valueType\r\ndynamicProperty {\r\nname label valueType\r\ndictionaryItems(cultureName: $cultureName){ items { label name }}\r\n}\r\ndictionaryItem {\r\nlabel name id\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"cultureName\": \"en-US\",\r\n\"searchPhrase\": \"CustomerModule_Contact_Boolean_0_0_0:{{bool1}}\"\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Contacts by short text",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C289834 Search contacts by short text\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.contacts.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contacts($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\ncontacts(searchPhrase:$searchPhrase, sort: $sort, first: $first, after:$after){\r\ntotalCount items{\r\nid\r\nname\r\ndynamicProperties(cultureName: $cultureName) {\r\nname value valueType\r\ndynamicProperty {\r\nname label valueType\r\ndictionaryItems(cultureName: $cultureName){ items { label name }}\r\n}\r\ndictionaryItem {\r\nlabel name id\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"cultureName\": \"en-US\",\r\n\"searchPhrase\": \r\n\"\\\"CustomerModule_Contact_ShortText_0_0_0\\\":\\\"{{short1}}\\\"\"\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Contacts by long text",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C289835 Search contacts by long text\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.contacts.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contacts($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\ncontacts(searchPhrase:$searchPhrase, sort: $sort, first: $first, after:$after){\r\ntotalCount items{\r\nid\r\nname\r\ndynamicProperties(cultureName: $cultureName) {\r\nname value valueType\r\ndynamicProperty {\r\nname label valueType\r\ndictionaryItems(cultureName: $cultureName){ items { label name }}\r\n}\r\ndictionaryItem {\r\nlabel name id\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"cultureName\": \"en-US\",\r\n\"searchPhrase\": \"\\\"CustomerModule_Contact_LongText_0_0_0\\\":\\\"{{long1}}\\\"\"\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Contacts by integer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C289836 Search contacts by integer\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.contacts.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contacts($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\ncontacts(searchPhrase:$searchPhrase, sort: $sort, first: $first, after:$after){\r\ntotalCount items{\r\nid\r\nname\r\ndynamicProperties(cultureName: $cultureName) {\r\nname value valueType\r\ndynamicProperty {\r\nname label valueType\r\ndictionaryItems(cultureName: $cultureName){ items { label name }}\r\n}\r\ndictionaryItem {\r\nlabel name id\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"cultureName\": \"en-US\",\r\n\"searchPhrase\": \"CustomerModule_Contact_Integer_1_0_0:{{int1}}\"\r\n      }\r\n\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Contacts by decimal",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C289837 Search contacts by decimal\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.contacts.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contacts($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\ncontacts(searchPhrase:$searchPhrase, sort: $sort, first: $first, after:$after){\r\ntotalCount items{\r\nid\r\nname\r\ndynamicProperties(cultureName: $cultureName) {\r\nname value valueType\r\ndynamicProperty {\r\nname label valueType\r\ndictionaryItems(cultureName: $cultureName){ items { label name }}\r\n}\r\ndictionaryItem {\r\nlabel name id\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"cultureName\": \"en-US\",\r\n\"searchPhrase\": \"CustomerModule_Contact_Decimal_0_0_0:{{decimal1}}\"\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Contacts by date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C289838 Search contacts by date\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.contacts.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contacts($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\ncontacts(searchPhrase:$searchPhrase, sort: $sort, first: $first, after:$after){\r\ntotalCount items{\r\nid\r\nname\r\ndynamicProperties(cultureName: $cultureName) {\r\nname value valueType\r\ndynamicProperty {\r\nname label valueType\r\ndictionaryItems(cultureName: $cultureName){ items { label name }}\r\n}\r\ndictionaryItem {\r\nlabel name id\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"searchPhrase\": \"\\\"CustomerModule_Contact_Datetime_0_0_0\\\":\\\"{{data1}}\\\"\", \r\n\"cultureName\": \"en-US\"\r\n} "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Contacts by image",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C328691 Search contacts by image\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.contacts.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contacts($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\ncontacts(searchPhrase:$searchPhrase, sort: $sort, first: $first, after:$after){\r\ntotalCount items{\r\nid\r\nname\r\ndynamicProperties(cultureName: $cultureName) {\r\nname value valueType\r\ndynamicProperty {\r\nname label valueType\r\ndictionaryItems(cultureName: $cultureName){ items { label name }}\r\n}\r\ndictionaryItem {\r\nlabel name id\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"cultureName\": \"en-US\",\r\n\"searchPhrase\": \"\\\"CustomerModule_Contact_Image_0_0_0\\\":\\\"{{image}}\\\"\"\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Contacts by html",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C328692 Search contacts by html\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.contacts.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contacts($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\ncontacts(searchPhrase:$searchPhrase, sort: $sort, first: $first, after:$after){\r\ntotalCount items{\r\nid\r\nname\r\ndynamicProperties(cultureName: $cultureName) {\r\nname value valueType\r\ndynamicProperty {\r\nname label valueType\r\ndictionaryItems(cultureName: $cultureName){ items { label name }}\r\n}\r\ndictionaryItem {\r\nlabel name id\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"cultureName\": \"en-US\",\r\n\"searchPhrase\": \r\n\"\\\"CustomerModule_Contact_Html_0_1_0\\\":\\\"{{html1}}\\\"\"\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check delete contact\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.deleteContact).to.eql(true);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check delete",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261670 Contact deleted\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.contact).to.be.null;\r",
															"});\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contact {\r\n    contact (id: \"{{contactId}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n      userName\r\n      email\r\n    }\r\n    }\r\n}\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Contact with dynamic properies",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set contactId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"contactId2\", jsonData.data.createContact.id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n}\n}",
														"variables": "{\n\"command\": {\n\"name\": \"{{contactName}}\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"ContactwithDynamic\",\n\"firstName\": \"ContactwithDynamic\",\n\"lastName\": \"ContactwithDynamic\",\n\"dynamicProperties\": [\n         {\n          \"name\": \"CustomerModule_Contact_Decimal_0_0_0\",\n          \"value\": {{decimal1}}\n        },\n        {\n          \"name\": \"CustomerModule_Contact_Html_0_0_0\",\n          \"value\": \"{{html1}}\"\n        },\n                {\n          \"name\": \"Married\",\n          \"value\": {{bool2}}\n        },\n        {\n         \"name\": \"Sex\",\n          \"value\": \"{{Sex}}\"\n        },\n        {\n        \"name\": \"occupation\",\n        \"value\":\"{{occupation}}\"\n        }, \n        {\n          \"name\": \"Default shipping address\",\n          \"value\": \"{{Defaultship}}\"\n        },            \n            {\n          \"name\": \"CustomerModule_Contact_Integer_1_0_0\",\n          \"value\": {{int1}}\n        },\n        {\n          \"name\": \"CustomerModule_Contact_Integer_1_0_0\",\n          \"value\": {{int2}}\n        },\n        {\n          \"name\": \"CustomerModule_Contact_Integer_0_0_0\",\n          \"value\": {{int3}}\n        },\n        {\n          \"name\": \"CustomerModule_Contact_Html_0_1_0\",\n          \"value\": \"{{html3}}\",\n          \"cultureName\":\"de-DE\"\n        },\n         {\n          \"name\": \"CustomerModule_Contact_Html_0_1_0\",\n          \"value\": \"{{html1}}\",\n          \"cultureName\":\"en-US\"\n        },\n         {\n          \"name\": \"CustomerModule_Contact_Html_0_1_0\",\n          \"value\": \"{{html2}}\",\n          \"cultureName\":\"fr-FR\"\n        },\n        {\n          \"name\": \"CustomerModule_Contact_Boolean_0_0_0\",\n          \"value\": {{bool1}}\n        },\n        {\n          \"name\": \"CustomerModule_Contact_DateTime_0_0_0\",\n          \"value\": \"{{data1}}\"\n        },\n        {\n          \"name\": \"CustomerModule_Contact_Decimal_1_0_0\",\n          \"value\": {{decimal2}}\n        },\n        {\n          \"name\": \"CustomerModule_Contact_Decimal_1_0_0\",\n          \"value\": {{decimal3}}\n        },\n        {\n          \"name\": \"CustomerModule_Contact_LongText_0_0_0\",\n          \"value\": \"{{long1}}\"\n        },\n        {\n          \"name\": \"CustomerModule_Contact_ShortText_0_0_0\",\n          \"value\": \"{{short1}}\"\n        },\n        {\n          \"name\": \"CustomerModule_Contact_Image_0_0_0\",\n          \"value\": \"{{image}}\"\n        },\n        {\n          \"name\": \"CustomerModule_Contact_LongText_0_1_0\",\n          \"value\": \"{{long2}}\"\n        },              \n        {\n          \"name\": \"CustomerModule_Contact_ShortText_0_0_1\",\n          \"value\": \"{{short2}}\"          \n        },\n         {\n          \"name\": \"CustomerModule_Contact_ShortText_0_1_1\",\n          \"value\": \"{{short3}}\",\n\t\t\t\t\t\"cultureName\": \"en-US\"\n        },\n        {\n         \"name\": \"CustomerModule_Contact_ShortText_0_1_1\",\n          \"value\": \"{{short6}}\",\n\t\t\t\t\t\"cultureName\": \"de-DE\"\n        },        \n        {\n          \"name\": \"CustomerModule_Contact_ShortText_0_1_0\",\n          \"value\": \"{{short4}}\",\n\t\t\t\t\t\"cultureName\": \"en-US\"\n        },\n          {\n          \"name\": \"CustomerModule_Contact_ShortText_0_1_0\",\n          \"value\": \"{{short5}}\",\n\t\t\t\t\t\"cultureName\": \"fr-FR\"\n        },\n       {\n          \"name\": \"CustomerModule_Contact_ShortText_1_0_0\",\n          \"value\": \"{{short7}}\"\n        },\n {\n          \"name\": \"CustomerModule_Contact_ShortText_1_0_0\",\n          \"value\": \"{{short8}}\"\n},\n        {\n          \"name\": \"CustomerModule_Contact_ShortText_1_1_0\",\n          \"value\": \"{{short12}}\",\n\t\t\t\t\t\"cultureName\": \"en-US\"\n        },\n    {\n          \"name\": \"CustomerModule_Contact_ShortText_1_1_0\",\n          \"value\": \"{{short13}}\",\n\t\t\t\t\t\"cultureName\": \"fr-FR\"\n        },\n    {\n          \"name\": \"CustomerModule_Contact_ShortText_1_1_0\",\n          \"value\": \"{{short14}}\",\n\t\t\t\t\t\"cultureName\": \"en-US\"\n        },\n        {\n          \"name\": \"CustomerModule_Contact_ShortText_1_1_1\",\n          \"value\": \"{{short15}}\",\n\t\t    \"cultureName\": \"en-US\"\n        },\n        {\n          \"name\": \"Default shipping address\",\n          \"value\": \"\"\n        }\n  \t]\n}\n}\n\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"C315775 Check Created Contact with dynamic properies\", function () {\r",
															"    \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short6\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short7\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short13\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short14\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short8\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short12\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short13\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short14\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short15\"));\r",
															"\r",
															" });\r",
															" \r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n    dynamicProperties\n    {\n      dictionaryItem\n      {\n       id\n      label\n      }\n      name\n      value\n    }\n  }\n    }\n",
														"variables": "{\n  \"id\": \"{{contactId2}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete contact created with dynamic properties",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check delete contact\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.deleteContact).to.eql(true);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Contact emails [ID]",
									"item": [
										{
											"name": "Create contact with emails",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set contactId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"contactId\", jsonData.data.createContact.id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\nemails\n}\n}",
														"variables": "{\n\"command\": {\n\"name\": \"{{contactName}}\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"UserWithEmail\",\n\"firstName\": \"UserWithEmail\",\n\"lastName\": \"UserWithEmail\",\n\"emails\": [\"email2@a\",\"email1@a\"]\n\n}\n}\n\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get contact emails",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C315278 emails added\", function () {\r",
															"    var data = pm.response.json();\r",
															"   pm.expect(data.data.contact.emails).to.include(\"email2@a\",\"email1@a\")\r",
															"} \r",
															");\r",
															"pm.test(\"C315277 get emails\", function () {\r",
															"    var data = pm.response.json();\r",
															"   pm.expect(data.data.contact.emails).to.include(\"email2@a\",\"email1@a\")\r",
															"} \r",
															");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contact {\r\n  contact (id: \"{{contactId}}\") {\r\n        fullName\r\n        id\r\n        emails\r\n\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update emails",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Emails updated\", function () {\r",
															"    var data = pm.response.json();\r",
															"   pm.expect(data.data.updateContact.emails).to.include(\"email3@a\",\"email4@a\")\r",
															"} \r",
															");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateContact ( $command: InputUpdateContactType!) {\n    updateContact (command: $command) {\n       fullName\n        id\n        lastName\n        name\n        emails\n    }\n}\n\n\n\n\n\n",
														"variables": "{\n  \"command\": {\n    \"id\": \"{{contactId}}\",\n    \"name\": \"UserWithEmail\",\n    \"memberType\": \"Contact\",\n    \"addresses\": [],\n    \"fullName\": \"UserWithEmail\",\n    \"firstName\": \"UserWithEmail\",\n    \"lastName\": \"UserWithEmail\",\n    \"emails\": [\"email3@a\",\"email3@4\"]\n  }\n}\n\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get contact emails",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C315279 emails updated\", function () {\r",
															"    var data = pm.response.json();\r",
															"   pm.expect(data.data.contact.emails).to.include(\"email3@a\",\"email4@a\")\r",
															"} \r",
															");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contact {\r\n  contact (id: \"{{contactId}}\") {\r\n        fullName\r\n        id\r\n        emails\r\n\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete contact with emails",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\n    deleteContact (command: $command)\n}",
														"variables": "{\n  \"command\": {\n    \"contactId\": \"{{contactId}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create contact without emails",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set contactId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"contactId\", jsonData.data.createContact.id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n}\n}",
														"variables": "{\n\"command\": {\n\"name\": \"{{contactName}}\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"UserWithoutEmail\",\n\"firstName\": \"UserWithoutEmail\",\n\"lastName\": \"UserWithoutEmail\"\n}\n}\n\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get contact emails",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Email not added\", function () {\r",
															"    var data = pm.response.json();\r",
															"     pm.expect(data.data.contact.emails).to.be.empty\r",
															"        pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query contact {\r\n  contact (id: \"{{contactId}}\") {\r\n        fullName\r\n        id\r\n        emails\r\n\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete contact without emails",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\n    deleteContact (command: $command)\n}",
														"variables": "{\n  \"command\": {\n    \"contactId\": \"{{contactId}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Reset password [ID]",
									"item": [
										{
											"name": "Create user",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"CreateUser\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.createUser).to.not.empty;\r",
															"    pm.expect(jsonData.data.createUser.succeeded).to.be.equal(true);\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n      \n    }\n}",
														"variables": "{\n\"command\": {\n\"applicationUser\": {\n\"createdBy\": \"exp1\",\n\"email\": \"{{$randomEmail}}\",\n\"password\":\"{{$randomPassword}}\",\n\"userName\": \"{{userName1}}\",\n\"userType\": \"Customer\",\n\"storeId\":\"Electronics\"\n}\n}\n}\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get user",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"get user\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.user).to.not.eql(null);\r",
															"    pm.expect(json.data.user).to.be.an(\"object\");\r",
															"    pm.expect(json.data.user.id).to.be.a(\"string\");\r",
															"    pm.expect(json.data.user.email).to.be.not.empty;\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"    pm.collectionVariables.set(\"userId1\", json.data.user.id);\r",
															"    pm.collectionVariables.set(\"email\", json.data.user.email);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query user(\n  $id: String\n  $userName: String\n  $email: String\n  $loginProvider: String\n  $providerKey: String\n) {\n  user(\n    id: $id\n    userName: $userName\n    email: $email\n    loginProvider: $loginProvider\n    providerKey: $providerKey\n  ) {\n    id\n    isAdministrator\n        userName\n    email\n    storeId\n    userName\n    userType\n    roles{\n      id\n      name\n      description\n      permissions\n    }\n  }\n}",
														"variables": "{\n\"userName\": \"{{userName1}}\",\n\"loginProvider\":\"\",\n\"providerKey\": \"\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Request password reset (Login)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C316093 Check request Password Reset\",function (){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.requestPasswordReset).to.eql(true);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query{\r\n  requestPasswordReset(\r\nloginOrEmail: \"{{userName1}}\"\r\nurlSuffix: \"reset-password/reset\"\r\n)\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Request password reset(email)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C328593 Check request Password Reset\",function (){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.requestPasswordReset).to.eql(true);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query{\r\n  requestPasswordReset(\r\nloginOrEmail: \"{{email}}\"\r\nurlSuffix: \"reset-password/reset\"\r\n)\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Validate password (invalid password)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C316097 Check validate password(invalid password)\",function (){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.validatePassword.succeeded).to.eql(false);\r",
															"pm.expect(pm.response.text()).to.include(\"PasswordTooShort\");\r",
															"pm.expect(pm.response.text()).to.include(\"PasswordRequiresUpper\");\r",
															"pm.expect(pm.response.text()).to.include(\"Passwords must have at least one uppercase ('A'-'Z').\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\r\n  validatePassword(password: \"rty1\")\r\n  {\r\n    succeeded\r\n    errors{\r\n      code\r\n      errorParameter\r\n      description\r\n    }\r\n  }\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Validate password (invalid password>Empty field)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C328594 Check validate password(invalid password>Empty field)\",function (){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.validatePassword.succeeded).to.eql(false);\r",
															"pm.expect(pm.response.text()).to.include(\"PasswordTooShort\");\r",
															"pm.expect(pm.response.text()).to.include(\"PasswordRequiresUpper\",\"PasswordRequiresLower\");\r",
															"pm.expect(pm.response.text()).to.include(\"Passwords must have at least one uppercase ('A'-'Z').\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\r\n  validatePassword(password: \"\")\r\n  {\r\n    succeeded\r\n    errors{\r\n      code\r\n      errorParameter\r\n      description\r\n    }\r\n  }\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Validate password (valid password)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C316094 Check validate password(valid password)\",function (){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.validatePassword.succeeded).to.eql(true);\r",
															"pm.expect(jsonData.data.validatePassword.errors).to.be.empty;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\r\n  validatePassword(password: \"hjsdhsj77FFFFsss\")\r\n  {\r\n    succeeded\r\n    errors{\r\n      code\r\n      errorParameter\r\n      description\r\n    }\r\n  }\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get token from notification body",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Set token\", function(){\r",
															"\r",
															"var newString = pm.response.json().results[0].body.slice(172);\r",
															"var result = newString.substring(0,newString.length-19);\r",
															"pm.collectionVariables.set(\"Token1\", result);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{ \"notificationType\": \"ResetPasswordEmailNotification\",\r\n  \"keyword\":\"Reset password link\",\r\n  \"sort\": \"\",\r\n  \"skip\": 0,\r\n  \"take\": 20,\r\n  \"responseGroup\": \"Default\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/notifications/journal",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"notifications",
														"journal"
													]
												}
											},
											"response": []
										},
										{
											"name": "Reset password by token (invalid password)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C316098 Check reset password by token (invalid password)\",function (){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.resetPasswordByToken.succeeded).to.eql(false);\r",
															"pm.expect(pm.response.text()).to.include(\"PasswordTooShort\");\r",
															"pm.expect(pm.response.text()).to.include(\"PasswordRequiresUpper\");\r",
															"pm.expect(pm.response.text()).to.include(\"Passwords must have at least one uppercase ('A'-'Z').\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation resetPasswordByToken ($command:InputResetPasswordByTokenType){\r\n   resetPasswordByToken(command:$command)\r\n  {\r\n    succeeded\r\n    errors{\r\n      code\r\n      errorParameter\r\n      description\r\n    }\r\n  }\r\n}",
														"variables": "{\r\n  \"command\":{\r\n    \"token\":\"{{Token1}}\",\r\n    \"userId\":\"{{userId1}}\",\r\n    \"newPassword\":\"hd11\"\r\n  }\r\n}\r\n\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Reset password by token (valid password)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C316095 Check reset password by token (valid password)\",function (){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.resetPasswordByToken.succeeded).to.eql(true);\r",
															"pm.expect(jsonData.data.resetPasswordByToken.errors).to.be.empty;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation resetPasswordByToken ($command:InputResetPasswordByTokenType){\r\n   resetPasswordByToken(command:$command)\r\n  {\r\n    succeeded\r\n    errors{\r\n      code\r\n      errorParameter\r\n      description\r\n    }\r\n  }\r\n}",
														"variables": "{\r\n  \"command\":{\r\n    \"token\":\"{{Token1}}\",\r\n    \"userId\":\"{{userId1}}\",\r\n    \"newPassword\":\"eieireuTTTT78273\"\r\n  }\r\n}\r\n\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Reset password by token (invalid or expired token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C316099 Invalid token\", function () {\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.resetPasswordByToken.succeeded).to.eql(false);\r",
															"pm.expect(pm.response.text()).to.include(\"InvalidToken\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation resetPasswordByToken ($command:InputResetPasswordByTokenType){\r\n   resetPasswordByToken(command:$command)\r\n  {\r\n    succeeded\r\n    errors{\r\n      code\r\n      errorParameter\r\n      description\r\n    }\r\n  }\r\n}",
														"variables": "{\r\n  \"command\":{\r\n    \"token\":\"CfDJ8Mo%2BrWwlNkFKrl20BzPtmw88fNLKI90eDQ%2FryvPNVVdokXkXFSlMd8MVnWYhZbJeZ%2FOipocC2ZPMPG0Rxq2AkoGynmAUj9ns7zCdTZen4yLFBV4LwwcIHG86L7aKWpoZIsjutH1%2F98%2BTTE%2F%2BtiheJEQodtXWDQsHJ6AixSCoW1%2F1HySv33ElhoReQAyWfdYSUv3LceK7LmAv97fjP574KL7CrTg%2FNt73dEOGA2txgfpJ\",\r\n    \"userId\":\"{{userId1}}\",\r\n    \"newPassword\":\"fsfRRRRRuytu666\"\r\n  }\r\n}\r\n\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete user",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"deleteUsers\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.deleteUsers).to.not.empty;\r",
															"    pm.expect(jsonData.data.deleteUsers.succeeded).to.be.equal(true);\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\n    deleteUsers (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
														"variables": "{\n\"command\": {\n\"userNames\": [\n\"{{userName1}}\"\n]\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Organization Admin [ID]",
									"item": [
										{
											"name": "Create organization with dynamic properties",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Organization created - set organizationId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"organizationId\", jsonData.data.createOrganization.id);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createOrganization ($command: InputCreateOrganizationType!) {\n    createOrganization (command: $command) {\n        id\n        name\n       dynamicProperties {\n          name value\n          }\n    }\n}",
														"variables": "{\n  \"command\": {\n    \"name\": \"Test_org1\",\n    \"dynamicProperties\": [\n         {\n          \"name\": \"CustomerModule_Organization_Decimal_0_0_0\",\n          \"value\":{{decimal1}}\n        },\n        {\n          \"name\": \"CustomerModule_Organization_Html_0_0_0\",\n          \"value\": \"{{html1}}\"\n        }, \n        {\n          \"name\": \"Default shipping address\",\n          \"value\": \"\"\n        },  \n        {\n          \"name\": \"CustomerModule_Organization_Integer_0_0_0\",\n          \"value\":{{int1}}\n        },          \n            {\n          \"name\": \"CustomerModule_Organization_Integer_1_0_0\",\n          \"value\":{{int2}}\n        },\n        {\n          \"name\": \"CustomerModule_Organization_Integer_1_0_0\",\n          \"value\":{{int3}}\n        },\n        {\n          \"name\": \"CustomerModule_Organization_Html_0_1_0\",\n          \"value\": \"{{html2}}\",\n          \"cultureName\":\"en-US\"\n        },\n        {\n          \"name\": \"CustomerModule_Organization_Html_0_1_0\",\n          \"value\": \"{{html3}}\",\n          \"cultureName\":\"de-DE\"\n        },\n        {\n          \"name\": \"CustomerModule_Organization_Html_0_1_0\",\n          \"value\": \"{{html4}}\",\n          \"cultureName\":\"fr-FR\"\n        },\n        {\n          \"name\": \"CustomerModule_Organization_Boolean_0_0_0\",\n          \"value\": {{bool1}}\n        },\n        {\n          \"name\": \"CustomerModule_Organization_DateTime_0_0_0\",\n          \"value\": \"{{data1}}\"\n        },\n        {\n          \"name\": \"CustomerModule_Organization_Decimal_1_0_0\",\n          \"value\": {{decimal2}}\n        },\n        {\n          \"name\": \"CustomerModule_Organization_Decimal_1_0_0\",\n          \"value\": {{decimal3}}\n        },\n        {\n          \"name\": \"CustomerModule_Organization_LongText_0_0_0\",\n          \"value\": \"{{long1}}\"\n        },\n        {\n          \"name\": \"CustomerModule_Organization_ShortText_0_0_0\",\n          \"value\": \"{{short1}}\"\n        },\n        {\n          \"name\": \"CustomerModule_Organization_Image_0_0_0\",\n          \"value\": \"{{image}}\"\n        },\n        {\n          \"name\": \"CustomerModule_Organization_LongText_0_1_0\",\n          \"value\": \"{{long2}}\",\n                   \"cultureName\":\"fr-FR\"\n        },              \n        {\n          \"name\": \"CustomerModule_Organization_ShortText_0_0_1\",\n          \"value\": \"{{short2}}\"         \n        },\n           {\n         \"name\": \"CustomerModule_Organization_ShortText_0_1_1\",\n          \"value\": \"{{short3}}\",\n\t\t\t\t\t\"cultureName\": \"de-DE\"\n        },        \n        {\n          \"name\": \"CustomerModule_Organization_ShortText_0_1_0\",\n          \"value\": \"{{short4}}\",\n\t\t\t\t\t\"cultureName\": \"en-US\"\n        },\n        {\n          \"name\": \"CustomerModule_Organization_ShortText_0_1_0\",\n           \"value\": \"{{short5}}\",\n\t\t\t\t\t\"cultureName\": \"fr-FR\"\n        },\n        {\n          \"name\": \"CustomerModule_Organization_ShortText_1_0_0\",\n          \"value\": \"{{short6}}\"\n        },\n {\n          \"name\": \"CustomerModule_Organization_ShortText_1_0_0\",\n          \"value\": \"{{short7}}\"\n},\n        {\n          \"name\": \"CustomerModule_Organization_ShortText_1_1_0\",\n          \"value\": \"{{short8}}\",\n\t\t\t\t\t\"cultureName\": \"en-US\"\n        },\n    {\n          \"name\": \"CustomerModule_Organization_ShortText_1_1_0\",\n          \"value\": \"{{short9}}\",\n\t\t\t\t\t\"cultureName\": \"fr-FR\"\n        },\n    {\n          \"name\": \"CustomerModule_Organization_ShortText_1_1_0\",\n          \"value\": \"{{short10}}\",\n\t\t\t\t\t\"cultureName\": \"en-US\"\n        },\n        {\n          \"name\": \"CustomerModule_Organization_ShortText_1_1_1\",\n          \"value\": \"{{short11}}\",\n\t\t    \"cultureName\": \"en-US\"\n        },\n         {\n          \"name\": \"CustomerModule_Organization_ShortText_1_1_1\",\n          \"value\": \"{{short12}}\",\n\t\t    \"cultureName\": \"de-DE\"\n        },\n            {\n           \"name\":\"CustomerModule_Organization_ShortText_1_0_1\",\n           \"value\":\"{{short13}}\"\n        },\n        {\n            \"name\":\"CustomerModule_Organization_ShortText_1_0_1\",\n            \"value\":\"{{short14}}\"\n        },\n        {\n          \"name\":\"CustomerModule_Organization_ShortText_1_0_1\",\n           \"value\":\"{{short15}}\"  \n        }\n  \t\n\n    ]\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check created organization with dynamic properties",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C315773 Check Create organization with dynamic properties\", function () {\r",
															"\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short6\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short7\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short13\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short14\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short8\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short9\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short10\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short11\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short12\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short13\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short14\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short15\"));\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organization ($id: String!, $userId: String) {\n    organization (id: $id, userId: $userId) {\n    dynamicProperties\n    {\n      value\n      valueType\n      name\n      dynamicProperty\n      {\n        valueType\n        dictionaryItems\n        {\n          items\n          {\n            id\n            name\n            label\n          }\n        }\n      }\n      dictionaryItem\n      {\n        id\n        label\n      name\n      }\n    }\n    }\n}",
														"variables": "{\n  \"id\": \"{{organizationId}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete organization",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/organizations?ids={{organizationId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"organizations"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{organizationId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Сreate organization",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261664 Organization created - set organizationId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"organizationId\", jsonData.data.createOrganization.id);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createOrganization ($command: InputCreateOrganizationType!) {\ncreateOrganization (command: $command) {\nid\nname\n}\n}",
														"variables": "{\n\"command\": {\n\"name\": \"OrganizationxApiReg\",\n\"addresses\": []\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update organization",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"CheckId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.updateOrganization.id).to.eql(pm.collectionVariables.get(\"organizationId\"));\r",
															"});\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261663 Check changes\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.updateOrganization.name).to.eql(pm.collectionVariables.get(\"organizationName1\"));\r",
															"\r",
															"\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateOrganization ($after: String, $first: Int, $searchPhrase: String, $after1: String, $first1: Int, $searchPhrase1: String, $command: InputUpdateOrganizationType!) {\n    updateOrganization (command: $command) {\n        businessCategory\n        contacts (after: $after1, first: $first1, searchPhrase: $searchPhrase1) {\n            edges {\n                cursor\n                node {\n                    birthDate\n                    firstName\n                    fullName\n                    id\n                    lastName\n                    memberType\n                    middleName\n                    name\n                    organizationId\n                    organizations {\n\t\t\t\t\t\t\t\t\t\titems{\n                        businessCategory\n                        description\n                        emails\n                        groups\n                        id\n                        memberType\n                        name\n                        outerId\n                        ownerId\n                        parentId\n                        phones\n                        seoObjectType\n\t\t\t\t\t\t\t\t\t\t}\n                    }\n                    organizationsIds\n                    outerId\n                    phones\n                    securityAccounts {\n                        accessFailedCount\n                        createdBy\n                        createdDate\n                        email\n                        emailConfirmed\n                        id\n                        isAdministrator\n                        lockoutEnabled\n                        lockoutEnd\n                        memberId\n                        modifiedBy\n                        modifiedDate\n                        normalizedEmail\n                        normalizedUserName\n                        passwordExpired\n                        permissions\n                        phoneNumber\n                        phoneNumberConfirmed\n                        photoUrl\n                        securityStamp\n                        storeId\n                        twoFactorEnabled\n                        userName\n                        userType\n                    }\n                }\n            }\n            items {\n                birthDate\n                firstName\n                fullName\n                id\n                lastName\n                memberType\n                middleName\n                name\n                organizationId\n                organizations {\n\t\t\t\t\t\t\t\t\t\titems{\n                    businessCategory\n                    contacts (after: $after, first: $first, searchPhrase: $searchPhrase) {\n                        totalCount\n                    }\n                    description\n                    emails\n                    groups\n                    id\n                    memberType\n                    name\n                    outerId\n                    ownerId\n                    parentId\n                    phones\n                    seoObjectType\n                }}\n                organizationsIds\n                outerId\n                phones\n                securityAccounts {\n                    accessFailedCount\n                    contact {\n                        birthDate\n                        firstName\n                        fullName\n                        id\n                        lastName\n                        memberType\n                        middleName\n                        name\n                        organizationId\n                        organizationsIds\n                        outerId\n                        phones\n                    }\n                    createdBy\n                    createdDate\n                    email\n                    emailConfirmed\n                    id\n                    isAdministrator\n                    lockoutEnabled\n                    lockoutEnd\n                    memberId\n                    modifiedBy\n                    modifiedDate\n                    normalizedEmail\n                    normalizedUserName\n                    passwordExpired\n                    permissions\n                    phoneNumber\n                    phoneNumberConfirmed\n                    photoUrl\n                    roles {\n                        description\n                        id\n                        name\n                        normalizedName\n                        permissions\n                    }\n                    securityStamp\n                    storeId\n                    twoFactorEnabled\n                    userName\n                    userType\n                }\n            }\n            pageInfo {\n                endCursor\n                hasNextPage\n                hasPreviousPage\n                startCursor\n            }\n            totalCount\n        }\n        description\n        emails\n        groups\n        id\n        memberType\n        name\n        outerId\n        ownerId\n        parentId\n        phones\n        seoObjectType\n    }\n}",
														"variables": "{\n\"command\": {\n\"id\": \"{{organizationId}}\",\n\"name\": \"{{organizationName1}}\"\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update organization dynamic property",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C315774 Update_organizatiom_dynamic_property\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.updateMemberDynamicProperties.dynamicProperties).to.not.empty;\r",
															"pm.expect(pm.response.text()).to.include(\"CustomerModule_Organization_ShortText_0_0_1\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateMemberDynamicProperties($command: InputUpdateMemberDynamicPropertiesType!) {\r\n    updateMemberDynamicProperties(command: $command) {\r\n    \t\tname \r\n        dynamicProperties {\r\n          name value \r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n   \"memberId\":\"{{organizationId}}\",\r\n    \"dynamicProperties\": [\r\n         {\r\n          \"name\": \"CustomerModule_Organization_Decimal_0_0_0\",\r\n          \"value\":{{decimal1}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_Html_0_0_0\",\r\n          \"value\": \"{{html1}}\"\r\n        }, \r\n        {\r\n          \"name\": \"Default shipping address\",\r\n          \"value\": \"\"\r\n        },  \r\n        {\r\n          \"name\": \"CustomerModule_Organization_Integer_0_0_0\",\r\n          \"value\":{{int1}}\r\n        },          \r\n            {\r\n          \"name\": \"CustomerModule_Organization_Integer_1_0_0\",\r\n          \"value\":{{int2}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_Integer_1_0_0\",\r\n          \"value\":{{int3}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_Html_0_1_0\",\r\n          \"value\": \"{{html2}}\",\r\n          \"cultureName\":\"en-US\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_Html_0_1_0\",\r\n          \"value\": \"{{html3}}\",\r\n          \"cultureName\":\"de-DE\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_Html_0_1_0\",\r\n          \"value\": \"{{html4}}\",\r\n          \"cultureName\":\"fr-FR\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_Boolean_0_0_0\",\r\n          \"value\": {{bool1}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_DateTime_0_0_0\",\r\n          \"value\": \"{{data1}}\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_Decimal_1_0_0\",\r\n          \"value\": {{decimal2}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_Decimal_1_0_0\",\r\n          \"value\": {{decimal3}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_LongText_0_0_0\",\r\n          \"value\": \"{{long1}}\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_ShortText_0_0_0\",\r\n          \"value\": \"{{short1}}\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_Image_0_0_0\",\r\n          \"value\": \"{{image}}\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_LongText_0_1_0\",\r\n          \"value\": \"{{long2}}\",\r\n                   \"cultureName\":\"fr-FR\"\r\n        },              \r\n        {\r\n          \"name\": \"CustomerModule_Organization_ShortText_0_0_1\",\r\n          \"value\": \"{{short2}}\"         \r\n        },\r\n           {\r\n         \"name\": \"CustomerModule_Organization_ShortText_0_1_1\",\r\n          \"value\": \"{{short3}}\",\r\n\t\t\t\t\t\"cultureName\": \"de-DE\"\r\n        },        \r\n        {\r\n          \"name\": \"CustomerModule_Organization_ShortText_0_1_0\",\r\n          \"value\": \"{{short4}}\",\r\n\t\t\t\t\t\"cultureName\": \"en-US\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_ShortText_0_1_0\",\r\n           \"value\": \"{{short5}}\",\r\n\t\t\t\t\t\"cultureName\": \"fr-FR\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_ShortText_1_0_0\",\r\n          \"value\": \"{{short6}}\"\r\n        },\r\n {\r\n          \"name\": \"CustomerModule_Organization_ShortText_1_0_0\",\r\n          \"value\": \"{{short7}}\"\r\n},\r\n        {\r\n          \"name\": \"CustomerModule_Organization_ShortText_1_1_0\",\r\n          \"value\": \"{{short8}}\",\r\n\t\t\t\t\t\"cultureName\": \"en-US\"\r\n        },\r\n    {\r\n          \"name\": \"CustomerModule_Organization_ShortText_1_1_0\",\r\n          \"value\": \"{{short9}}\",\r\n\t\t\t\t\t\"cultureName\": \"fr-FR\"\r\n        },\r\n    {\r\n          \"name\": \"CustomerModule_Organization_ShortText_1_1_0\",\r\n          \"value\": \"{{short10}}\",\r\n\t\t\t\t\t\"cultureName\": \"en-US\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_ShortText_1_1_1\",\r\n          \"value\": \"{{short11}}\",\r\n\t\t    \"cultureName\": \"en-US\"\r\n        },\r\n         {\r\n          \"name\": \"CustomerModule_Organization_ShortText_1_1_1\",\r\n          \"value\": \"{{short12}}\",\r\n\t\t    \"cultureName\": \"de-DE\"\r\n        },\r\n            {\r\n           \"name\":\"CustomerModule_Organization_ShortText_1_0_1\",\r\n           \"value\":\"{{short13}}\"\r\n        },\r\n        {\r\n            \"name\":\"CustomerModule_Organization_ShortText_1_0_1\",\r\n            \"value\":\"{{short14}}\"\r\n        },\r\n        {\r\n          \"name\":\"CustomerModule_Organization_ShortText_1_0_1\",\r\n           \"value\":\"{{short15}}\"  \r\n        }\r\n  \t]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get user's organization",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"C261662 Get user's organization\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.organization).to.not.eql(null);\r",
															"    pm.expect(json.data.organization).to.be.an(\"object\");\r",
															"    pm.expect(json.data.organization.id).to.be.a(\"string\");\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organization ($id: String!, $userId: String) {\n    organization (id: $id, userId: $userId) {\n    dynamicProperties\n    {\n      value\n      valueType\n      name\n      dynamicProperty\n      {\n        valueType\n        id\n        label\n        displayOrder\n      dictionaryItems\n        {\n          items\n          {\n            id\n            name\n            label\n          }\n        }\n      }\n      dictionaryItem\n      {\n        id\n        label\n      name\n      }\n    }\n  \n        businessCategory\n        contacts  {\n            edges {\n                cursor\n                node {\n                    birthDate\n                    firstName\n                    fullName\n                    id\n                    lastName\n                    memberType\n                    middleName\n                    name\n                    organizationId\n                    organizations {\n                        items{\n                        businessCategory\n                        description\n                        emails\n                        groups\n                        id\n                        memberType\n                        name\n                        outerId\n                        ownerId\n                        parentId\n                        phones\n                        seoObjectType\n                    }}\n                    organizationsIds\n                    outerId\n                    phones\n                    securityAccounts {\n                        accessFailedCount\n                        createdBy\n                        createdDate\n                        email\n                        emailConfirmed\n                        id\n                        isAdministrator\n                        lockoutEnabled\n                        lockoutEnd\n                        memberId\n                        modifiedBy\n                        modifiedDate\n                        normalizedEmail\n                        normalizedUserName\n                        passwordExpired\n                        permissions\n                        phoneNumber\n                        phoneNumberConfirmed\n                        photoUrl\n                        securityStamp\n                        storeId\n                        twoFactorEnabled\n                        userName\n                        userType\n                    }\n                }\n            }\n            items {\n                birthDate\n                firstName\n                fullName\n                id\n                lastName\n                memberType\n                middleName\n                name\n                organizationId\n                organizations {\n                    items{\n                    businessCategory\n                    contacts {\n                        totalCount\n                    }\n                    description\n                    emails\n                    groups\n                    id\n                    memberType\n                    name\n                    outerId\n                    ownerId\n                    parentId\n                    phones\n                    seoObjectType\n                }}\n                organizationsIds\n                outerId\n                phones\n                securityAccounts {\n                    accessFailedCount\n                    contact {\n                        birthDate\n                        firstName\n                        fullName\n                        id\n                        lastName\n                        memberType\n                        middleName\n                        name\n                        organizationId\n                        organizationsIds\n                        outerId\n                        phones\n                    }\n                    createdBy\n                    createdDate\n                    email\n                    emailConfirmed\n                    id\n                    isAdministrator\n                    lockoutEnabled\n                    lockoutEnd\n                    memberId\n                    modifiedBy\n                    modifiedDate\n                    normalizedEmail\n                    normalizedUserName\n                    passwordExpired\n                    permissions\n                    phoneNumber\n                    phoneNumberConfirmed\n                    photoUrl\n                    roles {\n                        description\n                        id\n                        name\n                        normalizedName\n                        permissions\n                    }\n                    securityStamp\n                    storeId\n                    twoFactorEnabled\n                    userName\n                    userType\n                }\n            }\n            pageInfo {\n                endCursor\n                hasNextPage\n                hasPreviousPage\n                startCursor\n            }\n            totalCount\n        }\n        description\n        emails\n        groups\n        id\n        memberType\n        name\n        outerId\n        ownerId\n        parentId\n        phones\n        seoObjectType\n    }\n}",
														"variables": "{\n  \"id\": \"{{organizationId}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties after update",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"C289491 Check updated short text\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															"});\r",
															"\r",
															"pm.test(\"C289492 Check updated datetime\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"});\r",
															"\r",
															"pm.test(\"C289493 Check updated integer\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"});\r",
															"\r",
															"pm.test(\"C289494 Check updated decimal\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"});\r",
															"\r",
															"pm.test(\"C289495 Check updated long text\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"});\r",
															"\r",
															"pm.test(\"C289496 Check updated html\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"});\r",
															"\r",
															"pm.test(\"C289497 Check updated empty\", function () {\r",
															"pm.expect(pm.response.text()).to.include(\"Default shipping address\");\r",
															"});\r",
															"\r",
															"pm.test(\"C289498 Check updated multivalue property\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short6\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short7\"));\r",
															"});\r",
															"\r",
															"pm.test(\"C289499 Check updated multilingual property\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short4\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															"});\r",
															"\r",
															"pm.test(\"C328695 Check dynamic properties after update image\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"});\r",
															"pm.test(\"C328696 Check dynamic properties after update boolean\", function () { \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															"});\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"/*pm.test(\"Check dynamic properties after update\", function () {\r",
															"\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short6\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short7\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short13\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short14\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short8\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short9\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short10\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short11\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short12\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short13\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short14\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short15\"));\r",
															"\r",
															"});*/\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organization ($id: String!, $userId: String) {\n    organization (id: $id, userId: $userId) {\n    dynamicProperties\n    {\n      value\n      valueType\n      name\n      dynamicProperty\n      {\n        valueType\n        dictionaryItems\n        {\n          items\n          {\n            id\n            name\n            label\n          }\n        }\n      }\n      dictionaryItem\n      {\n        id\n        label\n      name\n      }\n    }\n    }\n}",
														"variables": "{\n  \"id\": \"{{organizationId}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index organization",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{organizationId}}\"]}]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										},
										{
											"name": "Organizations",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Get all organizations\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.organizations.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 5000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organizations($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\n  organizations (searchPhrase:$searchPhrase, sort: $sort, first: $first, after: $after){ \r\n    totalCount items{\r\n      name id\r\n      dynamicProperties(cultureName: $cultureName) {\r\n        name value valueType\r\n        dynamicProperty {\r\n          name label valueType\r\n          dictionaryItems(cultureName: $cultureName){ items { label name }}\r\n        }\r\n        dictionaryItem {\r\n          label name id\r\n        }\r\n      }\r\n    } \r\n  }\r\n}",
														"variables": "{\r\n  \"cultureName\": \"en-US\",\r\n    \"after\": \"0\",\r\n    \"first\": 20,\r\n    \"sort\": \"name:desc\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Organizations by bool",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C284232 Search organizations by value from Dynamic properties\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.organizations.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"C289845 Search organizations by bool\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.organizations.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organizations($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\n  organizations (searchPhrase:$searchPhrase, sort: $sort, first: $first, after: $after){ \r\n    totalCount items{\r\n      name id\r\n      dynamicProperties(cultureName: $cultureName) {\r\n        name value valueType\r\n        dynamicProperty {\r\n          name label valueType\r\n          dictionaryItems(cultureName: $cultureName){ items { label name }}\r\n        }\r\n        dictionaryItem {\r\n          label name id\r\n        }\r\n      }\r\n    } \r\n  }\r\n}",
														"variables": "{\r\n  \"cultureName\": \"en-US\",\r\n    \"searchPhrase\": \"CustomerModule_Organization_Boolean_0_0_0:{{bool1}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Organizations by integer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C289842 Search organizations by integer\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.organizations.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organizations($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\n  organizations (searchPhrase:$searchPhrase, sort: $sort, first: $first, after: $after){ \r\n    totalCount items{\r\n      name id\r\n      dynamicProperties(cultureName: $cultureName) {\r\n        name value valueType\r\n        dynamicProperty {\r\n          name label valueType\r\n          dictionaryItems(cultureName: $cultureName){ items { label name }}\r\n        }\r\n        dictionaryItem {\r\n          label name id\r\n        }\r\n      }\r\n    } \r\n  }\r\n}",
														"variables": "{\r\n  \"cultureName\": \"en-US\",\r\n     \"searchPhrase\": \"CustomerModule_Organization_Integer_0_0_0:{{int1}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Organizations by decimal",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C289843 Search organizations by decimal\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.organizations.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organizations($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\n  organizations (searchPhrase:$searchPhrase, sort: $sort, first: $first, after: $after){ \r\n    totalCount items{\r\n      name id\r\n      dynamicProperties(cultureName: $cultureName) {\r\n        name value valueType\r\n        dynamicProperty {\r\n          name label valueType\r\n          dictionaryItems(cultureName: $cultureName){ items { label name }}\r\n        }\r\n        dictionaryItem {\r\n          label name id\r\n        }\r\n      }\r\n    } \r\n  }\r\n}",
														"variables": "{\r\n  \"cultureName\": \"en-US\",\r\n    \"searchPhrase\": \"CustomerModule_Organization_Decimal_0_0_0:{{decimal1}}\"\r\n\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Organizations by short text",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C289840 Search organizations by short text\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.organizations.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organizations($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\n  organizations (searchPhrase:$searchPhrase, sort: $sort, first: $first, after: $after){ \r\n    totalCount items{\r\n      name id\r\n      dynamicProperties(cultureName: $cultureName) {\r\n        name value valueType\r\n        dynamicProperty {\r\n          name label valueType\r\n          dictionaryItems(cultureName: $cultureName){ items { label name }}\r\n        }\r\n        dictionaryItem {\r\n          label name id\r\n        }\r\n      }\r\n    } \r\n  }\r\n}",
														"variables": "{\r\n\"cultureName\": \"en-US\",\r\n\"searchPhrase\": \"\\\"CustomerModule_Organization_ShortText_0_0_0\\\":\\\"{{short1}}\\\"\"\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Organizations by long text",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C289841 Search organizations by long text\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.organizations.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organizations($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\n  organizations (searchPhrase:$searchPhrase, sort: $sort, first: $first, after: $after){ \r\n    totalCount items{\r\n      name id\r\n      dynamicProperties(cultureName: $cultureName) {\r\n        name value valueType\r\n        dynamicProperty {\r\n          name label valueType\r\n          dictionaryItems(cultureName: $cultureName){ items { label name }}\r\n        }\r\n        dictionaryItem {\r\n          label name id\r\n        }\r\n      }\r\n    } \r\n  }\r\n}",
														"variables": "{\r\n  \"cultureName\": \"en-US\",\r\n    \"searchPhrase\": \"\\\"CustomerModule_Organization_LongText_0_0_0\\\":\\\"{{long1}}\\\"\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Organizations by date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C289844 Search organizations by date\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.organizations.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organizations($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\n  organizations (searchPhrase:$searchPhrase, sort: $sort, first: $first, after: $after){ \r\n    totalCount items{\r\n      name id\r\n      dynamicProperties(cultureName: $cultureName) {\r\n        name value valueType\r\n        dynamicProperty {\r\n          name label valueType\r\n          dictionaryItems(cultureName: $cultureName){ items { label name }}\r\n        }\r\n        dictionaryItem {\r\n          label name id\r\n        }\r\n      }\r\n    } \r\n  }\r\n}",
														"variables": "{\r\n\"searchPhrase\": \"\\\"CustomerModule_Organization_DateTime_0_0_0\\\":\\\"{{data1}}\\\"\", \r\n\"cultureName\": \"en-US\"\r\n} "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Organizations by html",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C328359 Search organizations by html\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.organizations.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organizations($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\n  organizations (searchPhrase:$searchPhrase, sort: $sort, first: $first, after: $after){ \r\n    totalCount items{\r\n      name id\r\n      dynamicProperties(cultureName: $cultureName) {\r\n        name value valueType\r\n        dynamicProperty {\r\n          name label valueType\r\n          dictionaryItems(cultureName: $cultureName){ items { label name }}\r\n        }\r\n        dictionaryItem {\r\n          label name id\r\n        }\r\n      }\r\n    } \r\n  }\r\n}",
														"variables": "{\r\n  \"cultureName\": \"en-US\",\r\n    \"searchPhrase\": \"CustomerModule_Organization_Html_0_0_0:{{html1}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Organizations by image",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C328360 Search organizations by image\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.organizations.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organizations($searchPhrase: String, $cultureName: String, $sort: String, $after: String, $first: Int){\r\n  organizations (searchPhrase:$searchPhrase, sort: $sort, first: $first, after: $after){ \r\n    totalCount items{\r\n      name id\r\n      dynamicProperties(cultureName: $cultureName) {\r\n        name value valueType\r\n        dynamicProperty {\r\n          name label valueType\r\n          dictionaryItems(cultureName: $cultureName){ items { label name }}\r\n        }\r\n        dictionaryItem {\r\n          label name id\r\n        }\r\n      }\r\n    } \r\n  }\r\n}",
														"variables": "{\r\n  \"cultureName\": \"en-US\",\r\n\"searchPhrase\": \"\\\"CustomerModule_Organization_Image_0_0_0\\\":\\\"{{image}}\\\"\"\r\n}\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete organization",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/organizations?ids={{organizationId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"organizations"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{organizationId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Check after delete",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check organization after delete\", function () {\r",
															"    var data = pm.response.json();\r",
															" pm.expect(data.data.organization).to.be.null\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query organization ($id: String!, $userId: String) {\n    organization (id: $id, userId: $userId) {\n    dynamicProperties\n    {\n      value\n      valueType\n      name\n      dynamicProperty\n      {\n        valueType\n        id\n        label\n        displayOrder\n      dictionaryItems\n        {\n          items\n          {\n            id\n            name\n            label\n          }\n        }\n      }\n      dictionaryItem\n      {\n        id\n        label\n      name\n      }\n    }\n  \n        businessCategory\n        contacts  {\n            edges {\n                cursor\n                node {\n                    birthDate\n                    firstName\n                    fullName\n                    id\n                    lastName\n                    memberType\n                    middleName\n                    name\n                    organizationId\n                    organizations {\n                        items{\n                        businessCategory\n                        description\n                        emails\n                        groups\n                        id\n                        memberType\n                        name\n                        outerId\n                        ownerId\n                        parentId\n                        phones\n                        seoObjectType\n                    }}\n                    organizationsIds\n                    outerId\n                    phones\n                    securityAccounts {\n                        accessFailedCount\n                        createdBy\n                        createdDate\n                        email\n                        emailConfirmed\n                        id\n                        isAdministrator\n                        lockoutEnabled\n                        lockoutEnd\n                        memberId\n                        modifiedBy\n                        modifiedDate\n                        normalizedEmail\n                        normalizedUserName\n                        passwordExpired\n                        permissions\n                        phoneNumber\n                        phoneNumberConfirmed\n                        photoUrl\n                        securityStamp\n                        storeId\n                        twoFactorEnabled\n                        userName\n                        userType\n                    }\n                }\n            }\n            items {\n                birthDate\n                firstName\n                fullName\n                id\n                lastName\n                memberType\n                middleName\n                name\n                organizationId\n                organizations {\n                    items{\n                    businessCategory\n                    contacts {\n                        totalCount\n                    }\n                    description\n                    emails\n                    groups\n                    id\n                    memberType\n                    name\n                    outerId\n                    ownerId\n                    parentId\n                    phones\n                    seoObjectType\n                }}\n                organizationsIds\n                outerId\n                phones\n                securityAccounts {\n                    accessFailedCount\n                    contact {\n                        birthDate\n                        firstName\n                        fullName\n                        id\n                        lastName\n                        memberType\n                        middleName\n                        name\n                        organizationId\n                        organizationsIds\n                        outerId\n                        phones\n                    }\n                    createdBy\n                    createdDate\n                    email\n                    emailConfirmed\n                    id\n                    isAdministrator\n                    lockoutEnabled\n                    lockoutEnd\n                    memberId\n                    modifiedBy\n                    modifiedDate\n                    normalizedEmail\n                    normalizedUserName\n                    passwordExpired\n                    permissions\n                    phoneNumber\n                    phoneNumberConfirmed\n                    photoUrl\n                    roles {\n                        description\n                        id\n                        name\n                        normalizedName\n                        permissions\n                    }\n                    securityStamp\n                    storeId\n                    twoFactorEnabled\n                    userName\n                    userType\n                }\n            }\n            pageInfo {\n                endCursor\n                hasNextPage\n                hasPreviousPage\n                startCursor\n            }\n            totalCount\n        }\n        description\n        emails\n        groups\n        id\n        memberType\n        name\n        outerId\n        ownerId\n        parentId\n        phones\n        seoObjectType\n    }\n}",
														"variables": "{\n  \"id\": \"{{organizationId}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get User [ID]",
									"item": [
										{
											"name": "Сreate гser",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"CreateUser\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.createUser).to.not.empty;\r",
															"    pm.expect(jsonData.data.createUser.succeeded).to.be.equal(true);\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n        \n      \n    }\n}",
														"variables": "{\n\"command\": {\n\"applicationUser\": {\n\"createdBy\": \"exp1\",\n\"email\": \"{{email}}\",\n\"password\":\"{{$randomPassword}}\",\n\"userName\": \"{{userName1}}\",\n\"userType\": \"Customer\",\n\"storeId\":\"B2B-store\"\n}\n}\n}\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get user's information by username",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Set Id\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"email\", jsonData.data.user.email);\r",
															"    pm.collectionVariables.set(\"userId1\", jsonData.data.user.id);\r",
															"});\r",
															"pm.test(\"C261782 Get user's information by username\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.user.userName).to.be.eql(pm.collectionVariables.get(\"userName1\"));\r",
															"    pm.expect(jsonData.data.user.id).to.be.eql(pm.collectionVariables.get(\"userId1\"));\r",
															"    pm.expect(jsonData.data.user.email).to.be.eql(pm.collectionVariables.get(\"email\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query user(\r\n$id: String\r\n$userName: String\r\n$email: String\r\n$loginProvider: String\r\n$providerKey: String\r\n) {\r\nuser(\r\nid: $id\r\nuserName: $userName\r\nemail: $email\r\nloginProvider: $loginProvider\r\nproviderKey: $providerKey\r\n) {\r\nid\r\nisAdministrator\r\n    userName\r\nemail\r\nstoreId\r\nuserName\r\nuserType\r\nroles{\r\n  id\r\n  name\r\n  description\r\n  permissions\r\n}\r\ncontact {\r\n    id\r\n  name\r\n  firstName\r\n  lastName\r\n  fullName\r\n  name\r\n  memberType\r\n  phones\r\n  addresses{\r\n    items{\r\n    key\r\n    addressType\r\n    city\r\n    firstName\r\n    lastName\r\n    regionId\r\n    regionName\r\n  }\r\n  }\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"userName\": \"{{userName1}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get user's information by id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261784 Get user's information by id\", function () {\r",
															"   pm.response.to.have.status(200);\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.user.userName).to.be.eql(pm.collectionVariables.get(\"userName1\"));\r",
															"    pm.expect(jsonData.data.user.id).to.be.eql(pm.collectionVariables.get(\"userId1\"));\r",
															"    pm.expect(jsonData.data.user.email).to.be.eql(pm.collectionVariables.get(\"email\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query user(\r\n$id: String\r\n$userName: String\r\n$email: String\r\n$loginProvider: String\r\n$providerKey: String\r\n) {\r\nuser(\r\nid: $id\r\nuserName: $userName\r\nemail: $email\r\nloginProvider: $loginProvider\r\nproviderKey: $providerKey\r\n) {\r\nid\r\nisAdministrator\r\n    userName\r\nemail\r\nstoreId\r\nuserName\r\nuserType\r\nroles{\r\n  id\r\n  name\r\n  description\r\n  permissions\r\n}\r\ncontact {\r\n    id\r\n  name\r\n  firstName\r\n  lastName\r\n  fullName\r\n  name\r\n  memberType\r\n  phones\r\n  addresses{\r\n    items{\r\n    key\r\n    addressType\r\n    city\r\n    firstName\r\n    lastName\r\n    regionId\r\n    regionName\r\n  }\r\n  }\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"id\": \"{{userId1}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get user's information by email",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261785 Get user's information by email\", function () {\r",
															"   pm.response.to.have.status(200);\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.user.userName).to.be.eql(pm.collectionVariables.get(\"userName1\"));\r",
															"    pm.expect(jsonData.data.user.id).to.be.eql(pm.collectionVariables.get(\"userId1\"));\r",
															"    pm.expect(jsonData.data.user.email).to.be.eql(pm.collectionVariables.get(\"email\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query user(\r\n$id: String\r\n$userName: String\r\n$email: String\r\n$loginProvider: String\r\n$providerKey: String\r\n) {\r\nuser(\r\nid: $id\r\nuserName: $userName\r\nemail: $email\r\nloginProvider: $loginProvider\r\nproviderKey: $providerKey\r\n) {\r\nid\r\nisAdministrator\r\n    userName\r\nemail\r\nstoreId\r\nuserName\r\nuserType\r\nroles{\r\n  id\r\n  name\r\n  description\r\n  permissions\r\n}\r\ncontact {\r\n    id\r\n  name\r\n  firstName\r\n  lastName\r\n  fullName\r\n  name\r\n  memberType\r\n  phones\r\n  addresses{\r\n    items{\r\n    key\r\n    addressType\r\n    city\r\n    firstName\r\n    lastName\r\n    regionId\r\n    regionName\r\n  }\r\n  }\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"email\": \"{{email}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get user's information by all fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261783 Get user's information by all fields\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.user.userName).to.be.eql(pm.collectionVariables.get(\"userName1\"));\r",
															"    pm.expect(jsonData.data.user.id).to.be.eql(pm.collectionVariables.get(\"userId1\"));\r",
															"    pm.expect(jsonData.data.user.email).to.be.eql(pm.collectionVariables.get(\"email\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query user(\r\n$id: String\r\n$userName: String\r\n$email: String\r\n$loginProvider: String\r\n$providerKey: String\r\n) {\r\nuser(\r\nid: $id\r\nuserName: $userName\r\nemail: $email\r\nloginProvider: $loginProvider\r\nproviderKey: $providerKey\r\n) {\r\nid\r\nisAdministrator\r\n    userName\r\nemail\r\nstoreId\r\nuserName\r\nuserType\r\nroles{\r\n  id\r\n  name\r\n  description\r\n  permissions\r\n}\r\ncontact {\r\n    id\r\n  name\r\n  firstName\r\n  lastName\r\n  fullName\r\n  name\r\n  memberType\r\n  phones\r\n  addresses{\r\n    items{\r\n    key\r\n    addressType\r\n    city\r\n    firstName\r\n    lastName\r\n    regionId\r\n    regionName\r\n  }\r\n  }\r\n}\r\n}\r\n}",
														"variables": "\r\n{\r\n\"id\": \"{{userId1}}\",\r\n\"userName\": \"{{userName1}}\",\r\n\"email\": \"{{email}}\",\r\n\"loginProvider\":\"\",\r\n\"providerKey\": \"\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete users",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"deleteUsers\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.deleteUsers).to.not.empty;\r",
															"    pm.expect(jsonData.data.deleteUsers.succeeded).to.be.equal(true);\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\n    deleteUsers (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
														"variables": "{\n\"command\": {\n\"userNames\": [\n\"{{userName1}}\"\n]\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Default address [ID]",
									"item": [
										{
											"name": "Organization",
											"item": [
												{
													"name": "Create organization",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Organization created - set organizationId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"organizationId1\", jsonData.data.createOrganization.id);\r",
																	"    pm.collectionVariables.set(\"organizationName1\", jsonData.data.createOrganization.name);\r",
																	"\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const rnd = (len, chars='abcdefghijklmnopqrstuvwxyz0123456789') => [...Array(len)].map(() => chars.charAt(Math.floor(Math.random() * chars.length))).join('')\r",
																	"\r",
																	"\r",
																	"pm.collectionVariables.set(\"shippingAddressId1\", rnd(36))\r",
																	"pm.collectionVariables.set(\"shippingAddressId2\", rnd(36))\r",
																	"pm.collectionVariables.set(\"billingAddressId1\", rnd(36))\r",
																	"pm.collectionVariables.set(\"billingAddressId2\", rnd(36))\r",
																	"pm.collectionVariables.set(\"BillingAndShippingId1\", rnd(36))\r",
																	"\r",
																	"\r",
																	"console.log(pm.collectionVariables.get(\"shippingAddressId1\"))\r",
																	"console.log(pm.collectionVariables.get(\"shippingAddressId2\"))\r",
																	"console.log(pm.collectionVariables.get(\"billingAddressId1\"))\r",
																	"console.log(pm.collectionVariables.get(\"billingAddressId2\"))\r",
																	"console.log(pm.collectionVariables.get(\"BillingAndShippingId1\"))\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createOrganization ($command: InputCreateOrganizationType!) {\ncreateOrganization (command: $command) {\nid\nname\n\n}\n}\n",
																"variables": "{\n\"command\": {\n\"name\": \"{{$randomCompanyName}}\"\n\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Set isDefault=true for shipAddress_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"objectType\": \"VirtoCommerce.CustomerModule.Core.Model.Organization\",\r\n    \"name\": \"{{organizationName1}}\",\r\n    \"memberType\": \"Organization\",\r\n    \"addresses\": [\r\n        {\r\n            \"addressType\": \"Shipping\",\r\n            \"key\": \"{{shippingAddressId1}}\",\r\n            \"id\": \"{{shippingAddressId1}}\",\r\n            \"name\": \"HU, Buda, Budapest, 2323, Avenue\",\r\n            \"countryCode\": \"HU\",\r\n            \"countryName\": \"Hungary\",\r\n            \"city\": \"Budapest\",\r\n            \"postalCode\": \"2389\",\r\n            \"line1\": \"2323, Avenue\",\r\n            \"regionId\": \"Buda\",\r\n            \"regionName\": \"Buda\",\r\n            \"firstName\": \"User\",\r\n            \"lastName\": \"Woodward\",\r\n            \"email\": \"testqa1@gmail.com\",\r\n            \"isDefault\": false\r\n        },\r\n        {\r\n            \"addressType\": \"Shipping\",\r\n            \"key\": \"{{shippingAddressId2}}\",\r\n            \"id\": \"{{shippingAddressId2}}\",\r\n            \"name\": \"Tester Woody, Street 15\",\r\n            \"countryCode\": \"De\",\r\n            \"countryName\": \"Germany\",\r\n            \"city\": \"Berlin\",\r\n            \"postalCode\": \"8789\",\r\n            \"line1\": \"Street 15\",\r\n            \"regionId\": \"Munchin\",\r\n            \"regionName\": \"Bavaria\",\r\n            \"firstName\": \"Tester\",\r\n            \"lastName\": \"Woody\",\r\n            \"email\": \"testqa1@gmail.com\",\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"Organization\",\r\n    \"seoInfos\": [],\r\n    \"createdDate\": \"2022-07-13T07:01:05.1437724Z\",\r\n    \"modifiedDate\": \"2022-07-13T07:01:05.1437724Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{organizationId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/members",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"members"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get default shipAddress_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C317749 Default address = true for billAddress_2, billAddress_1 existed\", function () {\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"shippingAddressId1\"));\r",
																	"pm.expect(jsonData.data.organization.defaultShippingAddress.id).to.eql(pm.collectionVariables.get(\"shippingAddressId2\"));\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query organization {\r\n  organization(id: \"{{organizationId1}}\") {\r\n    id\r\n    name\r\n    defaultShippingAddress{\r\n      id\r\n      isDefault\r\n    }\r\n\r\n     addresses{\r\n      items{\r\n        isDefault\r\n        id\r\n        key\r\n        city\r\n        countryName\r\n        email\r\n        firstName\r\n        lastName\r\n        line1\r\n        line2\r\n        name\r\n        organization\r\n        postalCode\r\n        regionId\r\n        addressType\r\n      }\r\n    }\r\n       }\r\n  }",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Set isDefault = true for billAddress_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"objectType\": \"VirtoCommerce.CustomerModule.Core.Model.Organization\",\r\n    \"name\": \"{{organizationName1}}\",\r\n    \"memberType\": \"Organization\",\r\n    \"addresses\": [\r\n        {\r\n            \"addressType\": \"Billing\",\r\n            \"key\": \"{{billingAddressId1}}\",\r\n            \"id\": \"{{billingAddressId1}}\",\r\n            \"name\": \"HU, Buda, Budapest, 2323, Avenue\",\r\n            \"countryCode\": \"HU\",\r\n            \"countryName\": \"Hungary\",\r\n            \"city\": \"Budapest\",\r\n            \"postalCode\": \"2389\",\r\n            \"line1\": \"2323, Avenue\",\r\n            \"regionId\": \"Buda\",\r\n            \"regionName\": \"Buda\",\r\n            \"firstName\": \"User\",\r\n            \"lastName\": \"Woodward\",\r\n            \"email\": \"testqa1@gmail.com\",\r\n            \"isDefault\": false\r\n        },\r\n        {\r\n            \"addressType\": \"Billing\",\r\n            \"key\": \"{{billingAddressId2}}\",\r\n            \"id\": \"{{billingAddressId2}}\",\r\n            \"name\": \"Tester Woody, Street 15\",\r\n            \"countryCode\": \"De\",\r\n            \"countryName\": \"Germany\",\r\n            \"city\": \"Berlin\",\r\n            \"postalCode\": \"8789\",\r\n            \"line1\": \"Street 15\",\r\n            \"regionId\": \"Munchin\",\r\n            \"regionName\": \"Bavaria\",\r\n            \"firstName\": \"Tester\",\r\n            \"lastName\": \"Woody\",\r\n            \"email\": \"testqa1@gmail.com\",\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"dynamicProperties\": [],\r\n    \"seoObjectType\": \"Organization\",\r\n    \"seoInfos\": [],\r\n    \"createdDate\": \"2022-07-13T07:01:05.1437724Z\",\r\n    \"modifiedDate\": \"2022-07-13T09:06:30.9729662Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{organizationId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/members",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"members"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get default billAddress_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C317763 Default address = true for billAddress_2, billAddress_1 existed\", function () {\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"billingAddressId1\"));\r",
																	"pm.expect(jsonData.data.organization.defaultBillingAddress.id).to.eql(pm.collectionVariables.get(\"billingAddressId2\"));\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query organization {\r\n  organization(id: \"{{organizationId1}}\") {\r\n    id\r\n    name\r\n    defaultShippingAddress{\r\n      id\r\n      isDefault\r\n    }\r\n    defaultBillingAddress{\r\n      id\r\n      isDefault\r\n    }\r\n     addresses{\r\n      items{\r\n        isDefault\r\n        id\r\n        key\r\n        city\r\n        countryName\r\n        email\r\n        firstName\r\n        lastName\r\n        line1\r\n        line2\r\n        name\r\n        organization\r\n        postalCode\r\n        regionId\r\n        addressType\r\n      }\r\n    }\r\n       }\r\n  }",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add billing&shipping address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"objectType\": \"VirtoCommerce.CustomerModule.Core.Model.Organization\",\r\n    \"name\": \"{{organizationName1}}\",\r\n    \"memberType\": \"Organization\",\r\n    \"addresses\": [\r\n        {\r\n            \"addressType\": \"BillingAndShipping\",\r\n            \"key\": \"{{BillingAndShippingId1}}\",\r\n            \"id\": \"{{BillingAndShippingId1}}\",\r\n            \"name\": \"HU, Buda, Budapest, 2323, Avenue\",\r\n            \"countryCode\": \"HU\",\r\n            \"countryName\": \"Hungary\",\r\n            \"city\": \"Budapest\",\r\n            \"postalCode\": \"2389\",\r\n            \"line1\": \"2323, Avenue\",\r\n            \"regionId\": \"Buda\",\r\n            \"regionName\": \"Buda\",\r\n            \"firstName\": \"User\",\r\n            \"lastName\": \"Woodward\",\r\n            \"email\": \"testqa1@gmail.com\"\r\n        }\r\n    ],\r\n    \"dynamicProperties\": [],\r\n    \"seoObjectType\": \"Organization\",\r\n    \"seoInfos\": [],\r\n    \"createdDate\": \"2022-07-13T07:01:05.1437724Z\",\r\n    \"modifiedDate\": \"2022-07-13T09:06:30.9729662Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{organizationId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/members",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"members"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get billing&shipping",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C317770 Default address = false for Billing&Shipping_1\", function () {\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.organization.addresses.items[0].isDefault).to.eql(false);\r",
																	"pm.expect(jsonData.data.organization.addresses.items[0].addressType).to.eql(3);\r",
																	"pm.expect(jsonData.data.organization.addresses.items[0].id).to.eql(pm.collectionVariables.get(\"BillingAndShippingId1\"));\r",
																	"})\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query organization {\r\n  organization(id: \"{{organizationId1}}\") {\r\n    id\r\n    name\r\n    businessCategory\r\n    description\r\n    outerId\r\n    emails\r\n    groups\r\n    addresses{\r\n      items{\r\n        isDefault\r\n        id\r\n        key\r\n        city\r\n        countryName\r\n        email\r\n        firstName\r\n        lastName\r\n        line1\r\n        line2\r\n        name\r\n        organization\r\n        postalCode\r\n        regionId\r\n        addressType\r\n      }\r\n    }\r\n       }\r\n  }",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete organization",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/organizations?ids={{organizationId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"organizations"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{organizationId1}}"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Contact",
											"item": [
												{
													"name": "Create contact",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
																	"    pm.collectionVariables.set(\"contactName1\", jsonData.data.createContact.name);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const rnd = (len, chars='abcdefghijklmnopqrstuvwxyz0123456789') => [...Array(len)].map(() => chars.charAt(Math.floor(Math.random() * chars.length))).join('')\r",
																	"\r",
																	"\r",
																	"pm.collectionVariables.set(\"shippingAddressId1\", rnd(36))\r",
																	"pm.collectionVariables.set(\"shippingAddressId2\", rnd(36))\r",
																	"pm.collectionVariables.set(\"billingAddressId1\", rnd(36))\r",
																	"pm.collectionVariables.set(\"billingAddressId2\", rnd(36))\r",
																	"pm.collectionVariables.set(\"BillingAndShippingId1\", rnd(36))\r",
																	"\r",
																	"\r",
																	"console.log(pm.collectionVariables.get(\"shippingAddressId1\"))\r",
																	"console.log(pm.collectionVariables.get(\"shippingAddressId2\"))\r",
																	"console.log(pm.collectionVariables.get(\"billingAddressId1\"))\r",
																	"console.log(pm.collectionVariables.get(\"billingAddressId2\"))\r",
																	"console.log(pm.collectionVariables.get(\"BillingAndShippingId1\"))\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\r\ncreateContact (command: $command) {\r\nfullName\r\nid\r\n  firstName\r\nlastName\r\nname\r\n addresses{\r\n  items{\r\n    id\r\n    key\r\n    isDefault\r\n    city\r\n    countryCode\r\n    countryName\r\n    email\r\n    firstName\r\n    lastName\r\n    line1\r\n    line2\r\n    postalCode\r\n    regionId\r\n    regionName\r\n    zip\r\n    addressType\r\n  }\r\n}\r\n}\r\n}",
																"variables": "{\r\n\"command\": {\r\n\"name\": \"{{$randomFirstName}}\",\r\n\"memberType\": \"Contact\",\r\n\"fullName\": \"{{$randomUserName}}\",\r\n\"firstName\": \"{{$randomFirstName}}\",\r\n\"lastName\": \"{{$randomLastName}}\"\r\n}\r\n}\r\n\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Set IsDefault = true for shipAddress_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"fullName\": \"{{contactName1}}\",\r\n    \"firstName\": \"{{contactName1}}\",\r\n    \"lastName\": \"{{contactName1}}\",\r\n    \"organizations\": [],\r\n    \"associatedOrganizations\": [],\r\n    \"isAnonymized\": false,\r\n    \"objectType\": \"VirtoCommerce.CustomerModule.Core.Model.Contact\",\r\n    \"securityAccounts\": [],\r\n    \"name\": \"{{contactName1}}\",\r\n    \"memberType\": \"Contact\",\r\n    \"addresses\": [\r\n        {\r\n            \"addressType\": \"Shipping\",\r\n            \"key\": \"{{shippingAddressId1}}\",\r\n            \"name\": \"HU, Buda, Budapest, 2323, Avenue\",\r\n            \"countryCode\": \"HU\",\r\n            \"countryName\": \"Hungary\",\r\n            \"city\": \"Budapest\",\r\n            \"postalCode\": \"2389\",\r\n            \"line1\": \"2323, Avenue\",\r\n            \"regionId\": \"Buda\",\r\n            \"regionName\": \"Buda\",\r\n            \"firstName\": \"User\",\r\n            \"lastName\": \"Woodward\",\r\n            \"email\": \"testqa1@gmail.com\",\r\n            \"isDefault\":false\r\n        },\r\n        {\r\n            \"addressType\": \"Shipping\",\r\n            \"key\": \"{{shippingAddressId2}}\",\r\n            \"name\": \"Steven Woodward 1888, colgate dr Thousand oaks California 91360 United States\",\r\n            \"countryCode\": \"VUT\",\r\n            \"countryName\": \"United States\",\r\n            \"city\": \"1Thousand oaks 25\",\r\n            \"postalCode\": \"91360\",\r\n            \"line1\": \"1888, colgate dr\",\r\n            \"regionId\": \"CA\",\r\n            \"regionName\": \"California\",\r\n            \"firstName\": \"Steven\",\r\n            \"lastName\": \"Woodward\",\r\n            \"email\": \"alivemenone@gmail.com\",\r\n            \"isDefault\":true\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"Contact\",\r\n    \"createdDate\": \"2022-07-12T12:15:08.1724101Z\",\r\n    \"modifiedDate\": \"2022-07-12T12:15:08.1724101Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{contactId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/members",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"members"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get default shipAddress_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C317751 Default address = true for shipAddress_2, shipAddress_1 existed\", function () {\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"shippingAddressId1\"));\r",
																	"pm.expect(jsonData.data.contact.defaultShippingAddress.id).to.eql(pm.collectionVariables.get(\"shippingAddressId2\"));\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact{\r\n  contact(id:\"{{contactId1}}\"){\r\n      name\r\n  firstName\r\n    lastName\r\n    id\r\n    memberType\r\n      defaultShippingAddress{\r\n      id\r\n      isDefault\r\n    }\r\n    addresses{\r\n      items{\r\n        isDefault\r\n        id\r\n        key\r\n        city\r\n        countryCode\r\n        lastName\r\n        firstName\r\n        line1\r\n        line2\r\n        name\r\n        organization\r\n        postalCode\r\n        regionName\r\n        postalCode\r\n        addressType\r\n        }\r\n    }\r\n}\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Set IsDefault = true for billAddress_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"fullName\": \"{{contactName1}}\",\r\n    \"firstName\": \"{{contactName1}}\",\r\n    \"lastName\": \"{{contactName1}}\",\r\n    \"organizations\": [],\r\n    \"associatedOrganizations\": [],\r\n    \"isAnonymized\": false,\r\n    \"objectType\": \"VirtoCommerce.CustomerModule.Core.Model.Contact\",\r\n    \"securityAccounts\": [],\r\n    \"name\": \"{{contactName1}}\",\r\n    \"memberType\": \"Contact\",\r\n    \"addresses\": [\r\n        {\r\n            \"addressType\": \"Billing\",\r\n            \"key\": \"{{billingAddressId1}}\",\r\n            \"name\": \"RU, Moskovskay, Moscow, Lenina 220\",\r\n            \"countryCode\": \"RU\",\r\n            \"countryName\": \"Russia\",\r\n            \"city\": \"Moscow\",\r\n            \"postalCode\": \"19086\",\r\n            \"line1\": \"Lenina 220\",\r\n            \"regionId\": \"MO\",\r\n            \"regionName\": \"Moskovskay\",\r\n            \"firstName\": \"Steven\",\r\n            \"lastName\": \"Woodward\",\r\n            \"email\": \"alivemenone@gmail.com\",\r\n            \"isDefault\": false\r\n        },\r\n        {\r\n            \"addressType\": \"Billing\",\r\n            \"key\": \"{{billingAddressId2}}\",\r\n            \"name\": \"User Woodward Vienna Austria, 2323 Avenue\",\r\n            \"countryCode\": \"AU\",\r\n            \"countryName\": \"Austria\",\r\n            \"city\": \"Vienna\",\r\n            \"postalCode\": \"998086\",\r\n            \"line1\": \"2323, Avenue\",\r\n            \"regionId\": \"Dudde\",\r\n            \"regionName\": \"Dudda\",\r\n            \"firstName\": \"User\",\r\n            \"lastName\": \"Woodward\",\r\n            \"email\": \"testqa1@gmail.com\",\r\n            \"isDefault\": true\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"Contact\",\r\n    \"seoInfos\": [],\r\n    \"createdDate\": \"2022-07-12T15:41:56.1948364Z\",\r\n    \"modifiedDate\": \"2022-07-12T15:42:02.2392083Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{contactId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/members",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"members"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get default billAddress_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C317782 Default address = true for billAddress_2, billAddress_1 existed\", function () {\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"billingAddressId1\"));\r",
																	"pm.expect(jsonData.data.contact.defaultBillingAddress.id).to.eql(pm.collectionVariables.get(\"billingAddressId2\"));\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact{\r\n  contact(id:\"{{contactId1}}\"){\r\n  firstName\r\n    lastName\r\n    id\r\n    memberType\r\n         defaultShippingAddress{\r\n      id\r\n      isDefault\r\n    }\r\n    defaultBillingAddress{\r\n      id\r\n      isDefault\r\n    }\r\n    addresses{\r\n      items{\r\n        isDefault\r\n        id\r\n        key\r\n        city\r\n        countryCode\r\n        lastName\r\n        firstName\r\n        line1\r\n        line2\r\n        name\r\n        organization\r\n        postalCode\r\n        regionName\r\n        postalCode\r\n        addressType\r\n        }\r\n    }\r\n}\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Billing&Shipping_2 address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"fullName\": \"{{contactName1}}\",\r\n    \"firstName\": \"{{contactName1}}\",\r\n    \"lastName\": \"{{contactName1}}\",\r\n    \"organizations\": [],\r\n    \"associatedOrganizations\": [],\r\n    \"isAnonymized\": false,\r\n    \"objectType\": \"VirtoCommerce.CustomerModule.Core.Model.Contact\",\r\n    \"securityAccounts\": [],\r\n    \"name\": \"{{contactName1}}\",\r\n    \"memberType\": \"Contact\",\r\n    \"addresses\": [\r\n        {\r\n            \"addressType\": \"BillingAndShipping\",\r\n            \"key\": \"{{BillingAndShippingId1}}\",\r\n            \"id\":\"{{BillingAndShippingId1}}\",\r\n            \"name\": \"User Woodward Vienna Austria, 2323 Avenue\",\r\n            \"countryCode\": \"DE\",\r\n            \"countryName\": \"Germany\",\r\n            \"city\": \"Berlin\",\r\n            \"postalCode\": \"54534\",\r\n            \"line1\": \"565 Street\",\r\n            \"regionId\": \"Berlinska\",\r\n            \"regionName\": \"Berlinska\",\r\n            \"firstName\": \"User\",\r\n            \"lastName\": \"Woodward\",\r\n            \"email\": \"testqa1@gmail.com\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"Contact\",\r\n    \"seoInfos\": [],\r\n    \"createdDate\": \"2022-07-12T16:25:00.4814736Z\",\r\n    \"modifiedDate\": \"2022-07-12T16:38:33.5184512Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{contactId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/members",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"members"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get billing&shipping address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C317783 Default address = false for Billing&Shipping_1\", function () {\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.contact.addresses.items[0].isDefault).to.eql(false);\r",
																	"pm.expect(jsonData.data.contact.addresses.items[0].addressType).to.eql(3);\r",
																	"pm.expect(jsonData.data.contact.addresses.items[0].id).to.eql(pm.collectionVariables.get(\"BillingAndShippingId1\"));\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact{\r\n  contact(id:\"{{contactId1}}\"){\r\n  firstName\r\n    lastName\r\n    id\r\n    memberType\r\n    addresses{\r\n      items{\r\n        isDefault\r\n        id\r\n        key\r\n        city\r\n        countryCode\r\n        lastName\r\n        firstName\r\n        line1\r\n        line2\r\n        name\r\n        organization\r\n        postalCode\r\n        regionName\r\n        postalCode\r\n        addressType\r\n        }\r\n    }\r\n}\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete contact",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check delete contact\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.deleteContact).to.eql(true);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "New Customer Registration [ID]",
									"item": [
										{
											"name": "Preparation",
											"item": [
												{
													"name": "Create store with default status for Customer and Company",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"{{storeId1}}\",\r\n   \"storeState\":\"Open\",\r\n   \"defaultLanguage\":\"en-US\",\r\n   \"defaultCurrency\":\"USD\",\r\n   \"catalog\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"creditCardSavePolicy\":false,\r\n   \"displayOutOfStock\":false,\r\n   \"url\":\"{{urlStoreFrontQA}}\",\r\n   \"email\":\"noreply@mail.com\",\r\n   \"additionalFulfillmentCenterIds\":[\r\n      \r\n   ],\r\n   \"returnsFulfillmentCenterIds\":[\r\n      \r\n   ],\r\n   \"languages\":[\r\n      \"en-US\"\r\n   ],\r\n   \"currencies\":[\r\n      \"USD\"\r\n   ],\r\n   \"trustedGroups\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"Store\",\r\n   \"seoInfos\":[\r\n      \r\n   ],\r\n   \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n   \"dynamicProperties\":[\r\n      \r\n   ],\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.TaxCalculationEnabled\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.AllowAnonymousUsers\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.IsSpa\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.EmailVerificationEnabled\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.EnablePriceRoundingForTotalsCalculation\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"Collapsed\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|SEO\",\r\n         \"name\":\"Stores.SeoLinksType\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            \"None\",\r\n            \"Short\",\r\n            \"Collapsed\",\r\n            \"Long\"\r\n         ],\r\n         \"defaultValue\":\"Collapsed\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"{{storeCompanyStatus}}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Customer|Statuses\",\r\n         \"name\":\"Customer.OrganizationDefaultStatus\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"{{storeCustomerStatus}}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Customer|Statuses\",\r\n         \"name\":\"Customer.ContactDefaultStatus\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders|Orders\",\r\n         \"name\":\"Order.CustomerOrderNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"PI{0:yyMMdd}-{1:D5}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders|Orders\",\r\n         \"name\":\"Order.PaymentInNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"PI{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"SH{0:yyMMdd}-{1:D5}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders|Orders\",\r\n         \"name\":\"Order.ShipmentNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"SH{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes|Quotes\",\r\n         \"name\":\"Quotes.QuoteRequestNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes|Quotes\",\r\n         \"name\":\"Quotes.EnableQuotes\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.EnableTracking\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleTagManagerId\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleAnalyticsTrackingId\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.CreateECommerceTransaction\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.ReverseECommerceTransaction\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Return\",\r\n         \"groupName\":\"Return|Return\",\r\n         \"name\":\"Return.ReturnNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions|Subscriptions\",\r\n         \"name\":\"Subscription.EnableSubscriptions\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions|Subscriptions\",\r\n         \"name\":\"Subscription.SubscriptionNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabled\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabledForAnonymous\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|Product Reviews\",\r\n         \"name\":\"CustomerReviews.CanSubmitReviewWhenHasOrder\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"Average\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews|General\",\r\n         \"name\":\"CustomerReviews.Calculation.Method\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            \"Average\",\r\n            \"Wilson\"\r\n         ],\r\n         \"defaultValue\":\"Average\",\r\n         \"isDictionary\":false\r\n      }\r\n   ],\r\n   \"typeName\":\"Store\",\r\n   \"createdDate\":\"2022-06-29T16:07:53.7777646Z\",\r\n   \"modifiedDate\":\"2022-06-29T16:10:15.923279Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{storeId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/stores",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"stores"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Main logic",
											"item": [
												{
													"name": "Customer registration",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C340953 customer registered\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.true;\r",
																	"    pm.expect(jsonData.data.requestRegistration.result.errors).to.be.empty;\r",
																	"});\r",
																	"pm.test(\"Check Customer status (contact and user)\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.requestRegistration.contact.status).to.be.eql(pm.collectionVariables.get(\"storeCustomerStatus\"));\r",
																	"    pm.expect(jsonData.data.requestRegistration.account.status).to.be.eql(pm.collectionVariables.get(\"storeCustomerStatus\"));\r",
																	"});\r",
																	"pm.test(\"Creator is 'frontend' (contact and user)\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.requestRegistration.contact.createdBy).to.be.eql(\"frontend\");\r",
																	"    pm.expect(jsonData.data.requestRegistration.account.createdBy).to.be.eql(\"frontend\");\r",
																	"\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Set all variables\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"\r",
																	"/* Contact information */\r",
																	"pm.collectionVariables.set(\"firstName1\",jsonData.data.requestRegistration.contact.firstName);\r",
																	"pm.collectionVariables.set(\"lastName1\",jsonData.data.requestRegistration.contact.lastName);\r",
																	"pm.collectionVariables.set(\"contactId1\",jsonData.data.requestRegistration.contact.id);\r",
																	"pm.collectionVariables.set(\"phoneNumber1\",jsonData.data.requestRegistration.contact.phoneNumber);\r",
																	"pm.collectionVariables.set(\"middleName1\",jsonData.data.requestRegistration.contact.middleName);\r",
																	"pm.collectionVariables.set(\"city1\",jsonData.data.requestRegistration.contact.address.city);\r",
																	"\r",
																	"\r",
																	"\r",
																	"/* User information */\r",
																	"pm.collectionVariables.set(\"userName1\",jsonData.data.requestRegistration.account.username);\r",
																	"pm.collectionVariables.set(\"userId1\",jsonData.data.requestRegistration.account.id);\r",
																	"pm.collectionVariables.set(\"customerEmail1\",jsonData.data.requestRegistration.account.email);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      middleName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n      birthdate\r\n     \r\n      address{\r\n          city\r\n          countryName\r\n          line1\r\n          regionName\r\n      }\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n        description\r\n        parameter\r\n        code\r\n    }\r\n}\r\n}\r\n}",
																"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId1}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\",\r\n      \"middleName\":\"{{$randomFirstName}}\",\r\n      \"birthdate\":\"{{date1}}\",\r\n      \"address\":{\r\n\"addressType\": 2,\r\n\"city\": \"{{$randomCity}}\",\r\n\"countryCode\": \"USA\",\r\n\"countryName\": \"United States\",\r\n\"email\": \"alivemenone@gmail.com\",\r\n\"firstName\": \"{{$randomFirstName}}\",\r\n\"lastName\": \"{{$randomLastName}}\",\r\n\"line1\": \"1888, colgate dr\",\r\n\"name\": \"Steven Woodward 1888, colgate dr Thousand oaks California 91360 United States\",\r\n\"postalCode\": \"91360\",\r\n\"regionId\": \"CA\",\r\n\"regionName\": \"California\"\r\n},\r\n\"dynamicProperties\": [\r\n         {\r\n          \"name\": \"CustomerModule_Contact_Decimal_0_0_0\",\r\n          \"value\": {{decimal1}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Html_0_0_0\",\r\n          \"value\": \"{{html1}}\"\r\n        },         \r\n            {\r\n          \"name\": \"CustomerModule_Contact_Integer_1_0_0\",\r\n          \"value\": {{int1}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Integer_1_0_0\",\r\n          \"value\": {{int2}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Integer_0_0_0\",\r\n          \"value\": {{int3}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Html_0_1_0\",\r\n          \"value\": \"{{html3}}\",\r\n          \"cultureName\":\"de-DE\"\r\n        },\r\n         {\r\n          \"name\": \"CustomerModule_Contact_Html_0_1_0\",\r\n          \"value\": \"{{html1}}\",\r\n          \"cultureName\":\"en-US\"\r\n        },\r\n         {\r\n          \"name\": \"CustomerModule_Contact_Html_0_1_0\",\r\n          \"value\": \"{{html2}}\",\r\n          \"cultureName\":\"fr-FR\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Boolean_0_0_0\",\r\n          \"value\": {{bool1}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_DateTime_0_0_0\",\r\n          \"value\": \"{{data1}}\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Decimal_1_0_0\",\r\n          \"value\": {{decimal2}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Decimal_1_0_0\",\r\n          \"value\": {{decimal3}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_LongText_0_0_0\",\r\n          \"value\": \"{{long1}}\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_ShortText_0_0_0\",\r\n          \"value\": \"{{short1}}\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_Image_0_0_0\",\r\n          \"value\": \"{{image}}\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_LongText_0_1_0\",\r\n          \"value\": \"{{long2}}\"\r\n        },              \r\n        {\r\n          \"name\": \"CustomerModule_Contact_ShortText_0_0_1\",\r\n          \"value\": \"{{short2}}\"          \r\n        },\r\n         {\r\n          \"name\": \"CustomerModule_Contact_ShortText_0_1_1\",\r\n          \"value\": \"{{short3}}\",\r\n\t\t\t\t\t\"cultureName\": \"en-US\"\r\n        },\r\n        {\r\n         \"name\": \"CustomerModule_Contact_ShortText_0_1_1\",\r\n          \"value\": \"{{short6}}\",\r\n\t\t\t\t\t\"cultureName\": \"de-DE\"\r\n        },        \r\n        {\r\n          \"name\": \"CustomerModule_Contact_ShortText_0_1_0\",\r\n          \"value\": \"{{short4}}\",\r\n\t\t\t\t\t\"cultureName\": \"en-US\"\r\n        },\r\n          {\r\n          \"name\": \"CustomerModule_Contact_ShortText_0_1_0\",\r\n          \"value\": \"{{short5}}\",\r\n\t\t\t\t\t\"cultureName\": \"fr-FR\"\r\n        },\r\n       {\r\n          \"name\": \"CustomerModule_Contact_ShortText_1_0_0\",\r\n          \"value\": \"{{short7}}\"\r\n        },\r\n {\r\n          \"name\": \"CustomerModule_Contact_ShortText_1_0_0\",\r\n          \"value\": \"{{short8}}\"\r\n},\r\n        {\r\n          \"name\": \"CustomerModule_Contact_ShortText_1_1_0\",\r\n          \"value\": \"{{short12}}\",\r\n\t\t\t\t\t\"cultureName\": \"en-US\"\r\n        },\r\n    {\r\n          \"name\": \"CustomerModule_Contact_ShortText_1_1_0\",\r\n          \"value\": \"{{short13}}\",\r\n\t\t\t\t\t\"cultureName\": \"fr-FR\"\r\n        },\r\n    {\r\n          \"name\": \"CustomerModule_Contact_ShortText_1_1_0\",\r\n          \"value\": \"{{short14}}\",\r\n\t\t\t\t\t\"cultureName\": \"en-US\"\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Contact_ShortText_1_1_1\",\r\n          \"value\": \"{{short15}}\",\r\n\t\t    \"cultureName\": \"en-US\"\r\n        }\r\n  \t]\r\n      \r\n      \r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{userPassword1}}\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n  }\r\n  }\r\n\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index contact",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{contactId1}}\"]}]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check created contact and user",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C340942 check created user and contact\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.contact.id).to.be.eql(pm.collectionVariables.get(\"contactId1\"));\r",
																	"    pm.expect(jsonData.data.contact.firstName).to.be.eql(pm.collectionVariables.get(\"firstName1\"));\r",
																	"    pm.expect(jsonData.data.contact.lastName).to.be.eql(pm.collectionVariables.get(\"lastName1\"));\r",
																	"    pm.expect(jsonData.data.contact.phones[0]).to.be.eql(pm.collectionVariables.get(\"phoneNumber1\"))\r",
																	"    pm.expect(jsonData.data.contact.birthDate).to.be.eql(pm.collectionVariables.get(\"date1\"))\r",
																	"    pm.expect(jsonData.data.contact.middleName).to.be.eql(pm.collectionVariables.get(\"middleName1\"))\r",
																	"\r",
																	"    pm.expect(jsonData.data.contact.securityAccounts[0].id).to.be.eql(pm.collectionVariables.get(\"userId1\"));\r",
																	"    pm.expect(jsonData.data.contact.securityAccounts[0].userName).to.be.eql(pm.collectionVariables.get(\"userName1\"));\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342061 check email\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.contact.emails[0]).to.be.eql(pm.collectionVariables.get(\"customerEmail1\"));\r",
																	"    pm.expect(jsonData.data.contact.securityAccounts[0].email).to.be.eql(pm.collectionVariables.get(\"customerEmail1\"));\r",
																	"});\r",
																	"pm.test(\"C343369 check address\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.contact.addresses.items[0].city).to.be.eql(pm.collectionVariables.get(\"city1\"))\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C341491 check contact status\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.contact.status).to.be.eql(pm.collectionVariables.get(\"storeCustomerStatus\"));\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C343368 check dynamic properties\", function(){\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C341029 check user creator\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.contact.securityAccounts[0].createdBy).to.be.eql(\"frontend\");\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C341490 check user storeId\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.contact.securityAccounts[0].storeId).to.be.eql(pm.collectionVariables.get(\"storeId1\"));\r",
																	"});\r",
																	"\r",
																	"\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 3000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact {\r\ncontact (id: \"{{contactId1}}\") {\r\n    firstName\r\n    lastName\r\n    id\r\n    emails\r\n    status\r\n    phones\r\n    birthDate\r\n    middleName\r\n    addresses{\r\n        items{\r\n            city\r\n        }\r\n        }\r\n    securityAccounts{\r\n        id\r\n        userName\r\n        createdBy\r\n        email\r\n        storeId\r\n    }\r\n    dynamicProperties{\r\n        name\r\n        value\r\n    }\r\n}\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get user token",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    \r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C341032 Get user token\", function () {\r",
																	"   \r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.access_token).to.be.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {
															"content-type": true
														}
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "grand_type",
																"value": "",
																"type": "text",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=password&scope=offline_access&username={{userName1}}&password={{userPassword1}}",
															"options": {
																"raw": {
																	"language": "text"
																}
															}
														},
														"url": {
															"raw": "{{url}}/connect/token",
															"host": [
																"{{url}}"
															],
															"path": [
																"connect",
																"token"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check email notification",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C342105 registration notification sent\", function () {\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"customerEmail1\"));\r",
																	"\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"notificationType\": \"RegistrationEmailNotification\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/notifications/journal",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"notifications",
																"journal"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Validation",
											"item": [
												{
													"name": "Owner",
													"item": [
														{
															"name": "Empty firstName",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"\r",
																			"pm.test(\"C340937 error 'empty First Name' \", function(){\r",
																			"var jsonData = pm.response.json();\r",
																			"\r",
																			"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																			"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																			"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																			"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"'First Name' must not be empty.\");\r",
																			"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"NotEmptyValidator\");\r",
																			"\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n        description\r\n        parameter\r\n        code\r\n    }\r\n    }\r\n\r\n}\r\n}",
																		"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n  }\r\n  }\r\n\r\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Empty lastName",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"\r",
																			"pm.test(\"C340938 error 'empty Last Name'\", function(){\r",
																			"var jsonData = pm.response.json();\r",
																			"\r",
																			"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																			"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																			"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																			"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"'Last Name' must not be empty.\");\r",
																			"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"NotEmptyValidator\");\r",
																			"\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          parameter\r\n          code\r\n      }\r\n    }\r\n\r\n}\r\n}",
																		"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomfirstName}}\",\r\n      \"lastName\": \"\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n  }\r\n  }\r\n\r\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "Auth",
													"item": [
														{
															"name": "Username",
															"item": [
																{
																	"name": "Empty",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C340939 error 'NotEmptyValidator: 'User Name' must not be empty' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"'User Name' must not be empty.\");\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"NotEmptyValidator\");\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          parameter\r\n          code\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																},
																{
																	"name": "Duplicated",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C341018 error 'DuplicateUserName: Username is already taken' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.not.empty;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"DuplicateUserName\");\r",
																					"\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description   \r\n          code\r\n          parameter\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{userName1}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																},
																{
																	"name": "Invalid format: \".\"",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"Customer is not registered, Incorrect userName \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.not.empty;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"Incorrect username\");\r",
																					"\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		},
																		{
																			"listen": "prerequest",
																			"script": {
																				"exec": [
																					"postman.setNextRequest();"
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          code\r\n          parameter\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \".\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																}
															]
														},
														{
															"name": "Password",
															"item": [
																{
																	"name": "Empty",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C340941 error 'NotEmptyValidator: 'Password' must not be empty' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"'Password' must not be empty.\");\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"NotEmptyValidator\");\r",
																					"\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          code\r\n          parameter\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																},
																{
																	"name": "Invalid format: Without A-Z",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C341019 error 'PasswordRequiresUpper' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"Passwords must have at least one uppercase ('A'-'Z').\");\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"PasswordRequiresUpper\");\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          parameter\r\n          code\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"password\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																},
																{
																	"name": "Invalid format: Without a-z",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C341823 error 'PasswordRequiresLower' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"Passwords must have at least one lowercase ('a'-'z').\");\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"PasswordRequiresLower\");\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          parameter\r\n          code\r\n          description\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"PASSWORD\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																},
																{
																	"name": "Invalid format: TooShort",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C341824 error 'PasswordTooShort' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"PasswordTooShort\");\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].parameter).to.be.not.empty;\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors {\r\n          description\r\n          code\r\n          parameter\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"Short\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																}
															]
														},
														{
															"name": "Email",
															"item": [
																{
																	"name": "Empty",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C340949 error 'NotEmptyValidator: 'Email' must not be empty' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"\r",
																					"pm.expect(pm.response.text()).to.include(\"'Email' must not be empty.\");\r",
																					"pm.expect(pm.response.text()).to.include(\"Invalid email format\");\r",
																					"pm.expect(pm.response.text()).to.include(\"NotEmptyValidator\");\r",
																					"pm.expect(pm.response.text()).to.include(\"PredicateValidator\");  \r",
																					"\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          code\r\n          parameter\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																},
																{
																	"name": "Duplicated",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C341026 error 'DuplicateEmail: Email is already taken' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.not.empty;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"DuplicateEmail\");\r",
																					"\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          code\r\n          parameter\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"{{customerEmail1}}\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																},
																{
																	"name": "Invalid format: without \"@\"",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C341027 error 'PredicateValidator: Invalid email format' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"Invalid email format\");\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"PredicateValidator\");\r",
																					"\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          code\r\n          parameter\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"text\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																},
																{
																	"name": "Invalid format: only \"@\"",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C341826 error 'PredicateValidator: Invalid email format' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"Invalid email format\");\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"PredicateValidator\");\r",
																					"\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          code\r\n          parameter\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"@\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																},
																{
																	"name": "Invalid format: \"text@\"",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C341827 error 'PredicateValidator: Invalid email format' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"Invalid email format\");\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"PredicateValidator\");\r",
																					"\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          code\r\n          parameter\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"text@\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																},
																{
																	"name": "Invalid format: \"@text\"",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C341828 error 'PredicateValidator: Invalid email format' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"Invalid email format\");\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"PredicateValidator\");\r",
																					"\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          code\r\n          parameter\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"@text\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																},
																{
																	"name": "Invalid format: \"text@.text\"",
																	"event": [
																		{
																			"listen": "test",
																			"script": {
																				"exec": [
																					"\r",
																					"pm.test(\"C341829 error 'PredicateValidator: Invalid email format' \", function(){\r",
																					"var jsonData = pm.response.json();\r",
																					"\r",
																					"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"Invalid email format\");\r",
																					"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"PredicateValidator\");\r",
																					"\r",
																					"});\r",
																					""
																				],
																				"type": "text/javascript"
																			}
																		}
																	],
																	"request": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "graphql",
																			"graphql": {
																				"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          code\r\n          parameter\r\n      }\r\n    }\r\n\r\n}\r\n}",
																				"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"{{storeId}}\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"text@.text\"\r\n  }\r\n  }\r\n\r\n}"
																			}
																		},
																		"url": {
																			"raw": "{{url}}/graphql",
																			"host": [
																				"{{url}}"
																			],
																			"path": [
																				"graphql"
																			]
																		}
																	},
																	"response": []
																}
															]
														}
													]
												},
												{
													"name": "SroreId",
													"item": [
														{
															"name": "Empty",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"\r",
																			"pm.test(\"C347140 error 'Store  has not been found' \", function(){\r",
																			"var jsonData = pm.response.json();\r",
																			"\r",
																			"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																			"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																			"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																			"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"Store  has not been found\");\r",
																			"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"Store not found\");\r",
																			"\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n   requestRegistration(command:$command){\r\n    contact{\r\n      firstName\r\n      lastName\r\n      id\r\n      status\r\n      createdBy\r\n      phoneNumber\r\n    }\r\n\r\naccount{\r\n  id\r\n  username\r\n  email\r\n  status\r\n  createdBy\r\n}\r\nresult{\r\n      succeeded\r\n      errors{\r\n          description\r\n          code\r\n          parameter\r\n      }\r\n    }\r\n\r\n}\r\n}",
																		"variables": "{\r\n\"command\": {\r\n  \"storeId\":\"\",\r\n  \"contact\":{\r\n      \"firstName\": \"{{$randomFirstName}}\",\r\n      \"lastName\": \"{{$randomLastName}}\",\r\n      \"phoneNumber\":\"{{$randomPhoneNumber}}\"\r\n  },\r\n  \"account\": {\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n  }\r\n  }\r\n\r\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														}
													]
												}
											]
										},
										{
											"name": "Delete store, contact and user",
											"item": [
												{
													"name": "Delete user",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"deleteUsers\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.deleteUsers).to.not.empty;\r",
																	"    pm.expect(jsonData.data.deleteUsers.succeeded).to.be.equal(true);\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\n    deleteUsers (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
																"variables": "{\n\"command\": {\n\"userNames\": [\n\"{{userName1}}\"\n]\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete contact",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Check delete contact\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.deleteContact).to.eql(true);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete store",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/stores?ids={{storeId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"stores"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{storeId1}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{AdminToken}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "New Company Registration [ID]",
									"item": [
										{
											"name": "Main logic",
											"item": [
												{
													"name": "Create store with default status for Customer and Company",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"{{storeId1}}\",\r\n   \"storeState\":\"Open\",\r\n   \"defaultLanguage\":\"en-US\",\r\n   \"defaultCurrency\":\"USD\",\r\n   \"catalog\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"creditCardSavePolicy\":false,\r\n   \"displayOutOfStock\":false,\r\n   \"url\":\"{{urlStoreFrontQA}}\",\r\n   \"email\":\"noreply@mail.com\",\r\n   \"additionalFulfillmentCenterIds\":[\r\n      \r\n   ],\r\n   \"returnsFulfillmentCenterIds\":[\r\n      \r\n   ],\r\n   \"languages\":[\r\n      \"en-US\"\r\n   ],\r\n   \"currencies\":[\r\n      \"USD\"\r\n   ],\r\n   \"trustedGroups\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"Store\",\r\n   \"seoInfos\":[\r\n      \r\n   ],\r\n   \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n   \"dynamicProperties\":[\r\n      \r\n   ],\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.TaxCalculationEnabled\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.AllowAnonymousUsers\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.IsSpa\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.EmailVerificationEnabled\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.EnablePriceRoundingForTotalsCalculation\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"Collapsed\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|SEO\",\r\n         \"name\":\"Stores.SeoLinksType\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            \"None\",\r\n            \"Short\",\r\n            \"Collapsed\",\r\n            \"Long\"\r\n         ],\r\n         \"defaultValue\":\"Collapsed\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"{{storeCompanyStatus}}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Customer|Statuses\",\r\n         \"name\":\"Customer.OrganizationDefaultStatus\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"{{storeCustomerStatus}}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Customer|Statuses\",\r\n         \"name\":\"Customer.ContactDefaultStatus\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes|Quotes\",\r\n         \"name\":\"Quotes.EnableQuotes\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.EnableTracking\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleTagManagerId\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleAnalyticsTrackingId\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.CreateECommerceTransaction\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.ReverseECommerceTransaction\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Return\",\r\n         \"groupName\":\"Return|Return\",\r\n         \"name\":\"Return.ReturnNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions|Subscriptions\",\r\n         \"name\":\"Subscription.EnableSubscriptions\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions|Subscriptions\",\r\n         \"name\":\"Subscription.SubscriptionNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabled\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabledForAnonymous\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|Product Reviews\",\r\n         \"name\":\"CustomerReviews.CanSubmitReviewWhenHasOrder\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"12345\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"Average\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews|General\",\r\n         \"name\":\"CustomerReviews.Calculation.Method\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            \"Average\",\r\n            \"Wilson\"\r\n         ],\r\n         \"defaultValue\":\"Average\",\r\n         \"isDictionary\":false\r\n      }\r\n   ],\r\n   \"typeName\":\"Store\",\r\n   \"createdDate\":\"2022-06-29T16:07:53.7777646Z\",\r\n   \"modifiedDate\":\"2022-06-29T16:10:15.923279Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{storeId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/stores",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"stores"
															]
														}
													},
													"response": []
												},
												{
													"name": "Company registration with email in address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C340934 company registered\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.true;\r",
																	"    pm.expect(jsonData.data.requestRegistration.result.errors).to.be.empty;\r",
																	"    pm.expect(jsonData.data.requestRegistration.organization).to.be.not.empty;\r",
																	"    pm.expect(jsonData.data.requestRegistration.contact).to.be.not.empty;\r",
																	"    pm.expect(jsonData.data.requestRegistration.account).to.be.not.empty;\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Check status (organization, contact and user)\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.requestRegistration.contact.status).to.be.eql(pm.collectionVariables.get(\"storeCustomerStatus\"));\r",
																	"    pm.expect(jsonData.data.requestRegistration.account.status).to.be.eql(pm.collectionVariables.get(\"storeCustomerStatus\"));\r",
																	"    pm.expect(jsonData.data.requestRegistration.organization.status).to.be.eql(pm.collectionVariables.get(\"storeCompanyStatus\"));\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Creator is 'frontend' (organization, contact and user)\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.requestRegistration.contact.createdBy).to.be.eql(\"frontend\");\r",
																	"    pm.expect(jsonData.data.requestRegistration.account.createdBy).to.be.eql(\"frontend\");\r",
																	"    pm.expect(jsonData.data.requestRegistration.organization.createdBy).to.be.eql(\"frontend\");\r",
																	"\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Set all variables\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"\r",
																	"/* Contact information */\r",
																	"pm.collectionVariables.set(\"contactId1\",jsonData.data.requestRegistration.contact.id);\r",
																	"\r",
																	"/* User information */\r",
																	"pm.collectionVariables.set(\"userName1\",jsonData.data.requestRegistration.account.username);\r",
																	"pm.collectionVariables.set(\"userId1\",jsonData.data.requestRegistration.account.id);\r",
																	"pm.collectionVariables.set(\"customerEmail1\",jsonData.data.requestRegistration.account.email);\r",
																	"\r",
																	"/*Company information*/\r",
																	"pm.collectionVariables.set(\"organizationName1\",jsonData.data.requestRegistration.organization.name);\r",
																	"pm.collectionVariables.set(\"organizationId1\",jsonData.data.requestRegistration.organization.id);\r",
																	"pm.collectionVariables.set(\"organizationDescription1\",jsonData.data.requestRegistration.organization.description);\r",
																	"pm.collectionVariables.set(\"companyEmail1\",jsonData.data.requestRegistration.organization.address.email);\r",
																	"pm.collectionVariables.set(\"city1\",jsonData.data.requestRegistration.organization.address.city);\r",
																	"\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n    requestRegistration(command:$command){\r\n        organization{\r\n            name\r\n            id\r\n            description\r\n            status\r\n            createdBy\r\n            address{\r\n                city\r\n                countryName\r\n                email\r\n            }\r\n            dynamicProperties{\r\n                name\r\n                value\r\n            }\r\n            }\r\n            \r\n            contact{\r\n            firstName\r\n            lastName\r\n            id\r\n            status\r\n            createdBy\r\n        }\r\n\r\n        account{\r\n            id\r\n            username\r\n            email\r\n            status\r\n            createdBy\r\n            \r\n            }\r\n\r\n        \r\n\r\n        result{\r\n            succeeded\r\n            errors{\r\n                description\r\n                code\r\n                parameter\r\n            }\r\n        }\r\n    \r\n  }\r\n}\r\n",
																"variables": "{\r\n\"command\": {\r\n    \"storeId\":\"{{storeId1}}\",\r\n    \"organization\": {\r\n        \"name\": \"{{$randomCompanyName}}\",\r\n        \"description\": \"{{comment}}\",\r\n        \"address\": {\r\n            \"city\": \"{{$randomCity}}\",\r\n            \"countryCode\":\"{{$randomCountryCode}}\",\r\n            \"email\":\"{{$randomEmail}}\",\r\n            \"countryName\":\"{{$randomCountry}}\",\r\n            \"firstName\":\"first121\",\r\n            \"lastName\":\"las4244t\",\r\n            \"line1\":\"line1\",\r\n            \"postalCode\":\"123654\"\r\n    \r\n        },\r\n        \"dynamicProperties\": [\r\n         {\r\n          \"name\": \"CustomerModule_Organization_Decimal_0_0_0\",\r\n          \"value\":{{decimal1}}\r\n        },\r\n        {\r\n          \"name\": \"CustomerModule_Organization_Html_0_0_0\",\r\n          \"value\": \"{{html1}}\"\r\n        }, \r\n        {\r\n          \"name\": \"CustomerModule_Organization_Integer_0_0_0\",\r\n          \"value\":{{int1}}\r\n        },          \r\n            {\r\n          \"name\": \"CustomerModule_Organization_Integer_1_0_0\",\r\n          \"value\":{{int2}}\r\n        },\r\n            \r\n        {\r\n            \"name\":\"CustomerModule_Organization_Boolean_0_0_0\",\r\n            \"value\":{{bool1}}\r\n        },\r\n        {\r\n            \"name\":\"CustomerModule_Organization_DateTime_0_0_0\",\r\n            \"value\":\"{{data1}}\"\r\n        },\r\n        {\r\n            \"name\":\"CustomerModule_Organization_ShortText_0_0_0\",\r\n            \"value\":\"{{short1}}\"\r\n        },\r\n        {\r\n            \"name\":\"CustomerModule_Organization_ShortText_0_0_0\",\r\n            \"value\":\"{{long1}}\"\r\n        },\r\n        {\r\n            \"name\":\"CustomerModule_Organization_Image_0_0_0\",\r\n            \"value\":\"{{image}}\"\r\n        }\r\n  \t]\r\n    },\r\n    \"contact\": {\r\n        \"firstName\": \"{{$randomFirstName}}\",\r\n        \"lastName\": \"{{$randomLastName}}\"\r\n        },\r\n    \"account\": {\r\n        \"username\": \"{{$randomUserName}}\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"password\":\"{{$randomPassword}}\"\r\n        }\r\n    }\r\n  }\r\n\r\n\r\n  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index Contact, Company",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{contactId1}}\", \"{{organizationId1}}\"]}]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check  created company",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C341492 check created company\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.organization.id).to.be.eql(pm.collectionVariables.get(\"organizationId1\"));\r",
																	"    pm.expect(jsonData.data.organization.name).to.be.eql(pm.collectionVariables.get(\"organizationName1\"));\r",
																	"    pm.expect(jsonData.data.organization.ownerId).to.be.eql(pm.collectionVariables.get(\"contactId1\"));\r",
																	"    pm.expect(jsonData.data.organization.description).to.be.eql(pm.collectionVariables.get(\"comment\"));\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C343367 check addresses\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.organization.addresses.items[0].city).to.be.eql(pm.collectionVariables.get(\"city1\"));\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C343366 Check dynamic properties\", function(){\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
																	";\r",
																	"   \r",
																	"}); \r",
																	"\r",
																	"\r",
																	"pm.test(\"C341851 check email\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.organization.emails[0]).to.be.eql(pm.collectionVariables.get(\"companyEmail1\"));\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C341497 check organization status\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.organization.status).to.be.eql(pm.collectionVariables.get(\"storeCompanyStatus\"));\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 3000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query organization ($id: String!, $userId: String) {\n    organization (id: $id, userId: $userId) {\n        id\n        ownerId\n        description\n        name\n        emails\n        status\n        addresses{\n            items{\n                city\n                countryName\n                }\n        \n        }\n        dynamicProperties{\n            name\n            value\n            valueType\n        }\n    }\n}",
																"variables": "{\n  \"id\": \"{{organizationId1}}\"\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check created contact and user",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343339 check created user and contact\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    /*check contact*/\r",
																	"    pm.expect(jsonData.data.contact.id).to.be.eql(pm.collectionVariables.get(\"contactId1\"));\r",
																	"    pm.expect(jsonData.data.contact.emails[0]).to.be.eql(pm.collectionVariables.get(\"customerEmail1\"));\r",
																	"    pm.expect(jsonData.data.contact.status).to.be.eql(pm.collectionVariables.get(\"storeCustomerStatus\"));\r",
																	"\r",
																	"    /*check user*/\r",
																	"    pm.expect(jsonData.data.contact.securityAccounts[0].id).to.be.eql(pm.collectionVariables.get(\"userId1\"));\r",
																	"    pm.expect(jsonData.data.contact.securityAccounts[0].email).to.be.eql(pm.collectionVariables.get(\"customerEmail1\"));\r",
																	"    pm.expect(jsonData.data.contact.securityAccounts[0].storeId).to.be.eql(pm.collectionVariables.get(\"storeId1\"));\r",
																	"    pm.expect(jsonData.data.contact.securityAccounts[0].createdBy).to.be.eql(\"frontend\");\r",
																	"\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 3000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact {\r\ncontact (id: \"{{contactId1}}\") {\r\n    firstName\r\n    lastName\r\n    id\r\n    emails\r\n    status\r\n    phones\r\n    addresses{\r\n        totalCount\r\n        }\r\n    securityAccounts{\r\n        id\r\n        userName\r\n        createdBy\r\n        email\r\n        storeId\r\n        roles{name id}\r\n    }\r\n}\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check email notification (Company)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"C341485 registration notification sent\", function () {\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"companyEmail1\"));\r",
																	"\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"notificationType\": \"RegisterCompanyEmailNotification\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/notifications/journal",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"notifications",
																"journal"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete user",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"deleteUsers\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.deleteUsers).to.not.empty;\r",
																	"    pm.expect(jsonData.data.deleteUsers.succeeded).to.be.equal(true);\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\n    deleteUsers (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
																"variables": "{\n\"command\": {\n\"userNames\": [\n\"{{userName1}}\"\n]\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete contact",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check delete contact\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.deleteContact).to.eql(true);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete organization",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/organizations?ids={{organizationId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"organizations"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{organizationId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Company registration without email in address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Company registered\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.true;\r",
																	"    pm.expect(jsonData.data.requestRegistration.result.errors).to.be.empty;\r",
																	"    pm.expect(jsonData.data.requestRegistration.organization).to.be.not.empty;\r",
																	"    pm.expect(jsonData.data.requestRegistration.contact).to.be.not.empty;\r",
																	"    pm.expect(jsonData.data.requestRegistration.account).to.be.not.empty;\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Set all variables\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"\r",
																	"/* Contact information */\r",
																	"pm.collectionVariables.set(\"contactId1\",jsonData.data.requestRegistration.contact.id);\r",
																	"\r",
																	"/* User information */\r",
																	"pm.collectionVariables.set(\"userName1\",jsonData.data.requestRegistration.account.username);\r",
																	"pm.collectionVariables.set(\"userId1\",jsonData.data.requestRegistration.account.id);\r",
																	"pm.collectionVariables.set(\"customerEmail1\",jsonData.data.requestRegistration.account.email);\r",
																	"\r",
																	"/*Company information*/\r",
																	"pm.collectionVariables.set(\"organizationName1\",jsonData.data.requestRegistration.organization.name);\r",
																	"pm.collectionVariables.set(\"organizationId1\",jsonData.data.requestRegistration.organization.id);\r",
																	"pm.collectionVariables.set(\"organizationDescription1\",jsonData.data.requestRegistration.organization.description);\r",
																	"pm.collectionVariables.set(\"companyEmail1\",jsonData.data.requestRegistration.account.email);\r",
																	"\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n    requestRegistration(command:$command){\r\n        organization{\r\n            name\r\n            id\r\n            description\r\n            status\r\n            createdBy\r\n            address{\r\n                city\r\n                countryName\r\n                email\r\n            }\r\n            dynamicProperties{\r\n                name\r\n                value\r\n            }\r\n            }\r\n            \r\n            contact{\r\n            firstName\r\n            lastName\r\n            id\r\n            status\r\n            createdBy\r\n        }\r\n\r\n        account{\r\n            id\r\n            username\r\n            email\r\n            status\r\n            createdBy\r\n            }\r\n\r\n        \r\n\r\n        result{\r\n            succeeded\r\n            errors{\r\n                parameter\r\n                description\r\n                code\r\n            }\r\n        }\r\n    \r\n  }\r\n}\r\n",
																"variables": "{\r\n\"command\": {\r\n    \"storeId\":\"{{storeId1}}\",\r\n    \"organization\": {\r\n        \"name\": \"{{$randomCompanyName}}\",\r\n        \"description\": \"{{comment}}\",\r\n        \"address\": {\r\n            \"city\": \"{{$randomCity}}\",\r\n            \"countryCode\":\"{{$randomCountryCode}}\",\r\n            \"countryName\":\"{{$randomCountry}}\",\r\n            \"firstName\":\"first121\",\r\n            \"lastName\":\"las4244t\",\r\n            \"line1\":\"line1\",\r\n            \"postalCode\":\"123654\"\r\n    \r\n        }\r\n    },\r\n    \"contact\": {\r\n        \"firstName\": \"{{$randomFirstName}}\",\r\n        \"lastName\": \"{{$randomLastName}}\"\r\n        },\r\n    \"account\": {\r\n        \"username\": \"{{$randomUserName}}\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"password\":\"{{$randomPassword}}\"\r\n        }\r\n    }\r\n  }\r\n\r\n\r\n  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index Contact, Company Copy",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{contactId1}}\", \"{{organizationId1}}\"]}]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check email notification (Company)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"C343365 registration notification sent\", function () {\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"companyEmail1\"));\r",
																	"\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 3000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"notificationType\": \"RegisterCompanyEmailNotification\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/notifications/journal",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"notifications",
																"journal"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Validation",
											"item": [
												{
													"name": "Organization Name",
													"item": [
														{
															"name": "Empty",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"\r",
																			"pm.test(\"C340936 error 'empty organization Name' \", function(){\r",
																			"var jsonData = pm.response.json();\r",
																			"\r",
																			"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																			"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																			"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																			"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"'Name' must not be empty.\");\r",
																			"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"NotEmptyValidator\");\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n    requestRegistration(command:$command){\r\n        organization{\r\n            name\r\n            id\r\n            description\r\n            status\r\n            createdBy\r\n            }\r\n            \r\n            contact{\r\n            firstName\r\n            lastName\r\n            id\r\n            status\r\n            createdBy\r\n        }\r\n\r\n        account{\r\n            id\r\n            username\r\n            email\r\n            status\r\n            createdBy\r\n            }\r\n\r\n        \r\n\r\n        result{\r\n            succeeded\r\n            errors{\r\n                description\r\n                code\r\n                parameter\r\n            }\r\n        }\r\n  }\r\n}\r\n",
																		"variables": "{\r\n\"command\": {\r\n    \"storeId\":\"{{storeId1}}\",\r\n    \"organization\": {\r\n        \"name\": \"\",\r\n        \"description\": \"{{long2}}\"\r\n        },\r\n    \"contact\": {\r\n        \"firstName\": \"{{$randomFirstName}}\",\r\n        \"lastName\": \"{{$randomLastName}}\"\r\n        },\r\n    \"account\": {\r\n        \"username\": \"{{$randomUserName}}\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"password\":\"{{$randomPassword}}\"\r\n        }\r\n    }\r\n  }\r\n\r\n\r\n  "
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "StoreId",
													"item": [
														{
															"name": "Empty",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"\r",
																			"pm.test(\"C340935 error 'Store  has not been found' \", function(){\r",
																			"var jsonData = pm.response.json();\r",
																			"\r",
																			"pm.expect(jsonData.data.requestRegistration.contact).to.be.null;\r",
																			"pm.expect(jsonData.data.requestRegistration.account).to.be.null;\r",
																			"pm.expect(jsonData.data.requestRegistration.result.succeeded).to.be.false;\r",
																			"pm.expect(jsonData.data.requestRegistration.result.errors[0].description).to.be.eql(\"Store  has not been found\");\r",
																			"pm.expect(jsonData.data.requestRegistration.result.errors[0].code).to.be.eql(\"Store not found\");\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n    requestRegistration(command:$command){\r\n        organization{\r\n            name\r\n            id\r\n            description\r\n            status\r\n            createdBy\r\n            }\r\n            \r\n            contact{\r\n            firstName\r\n            lastName\r\n            id\r\n            status\r\n            createdBy\r\n        }\r\n\r\n        account{\r\n            id\r\n            username\r\n            email\r\n            status\r\n            createdBy\r\n            }\r\n\r\n        \r\n\r\n        result{\r\n            succeeded\r\n            errors{\r\n                description\r\n                code\r\n                parameter\r\n            }\r\n        }\r\n  }\r\n}\r\n",
																		"variables": "{\r\n\"command\": {\r\n    \"storeId\":\"\",\r\n    \"organization\": {\r\n        \"name\": \"{{$randomCompanyName}}\",\r\n        \"description\": \"{{long2}}\"\r\n        },\r\n    \"contact\": {\r\n        \"firstName\": \"{{$randomFirstName}}\",\r\n        \"lastName\": \"{{$randomLastName}}\"\r\n        },\r\n    \"account\": {\r\n        \"username\": \"{{$randomUserName}}\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"password\":\"{{$randomPassword}}\"\r\n        }\r\n    }\r\n  }\r\n\r\n\r\n  "
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														}
													]
												}
											]
										},
										{
											"name": "Delete store, organization, contact and user",
											"item": [
												{
													"name": "Delete user",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"deleteUsers\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.deleteUsers).to.not.empty;\r",
																	"    pm.expect(jsonData.data.deleteUsers.succeeded).to.be.equal(true);\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\n    deleteUsers (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
																"variables": "{\n\"command\": {\n\"userNames\": [\n\"{{userName1}}\"\n]\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete contact",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check delete contact\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.deleteContact).to.eql(true);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete store",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/stores?ids={{storeId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"stores"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{storeId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete organization",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/organizations?ids={{organizationId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"organizations"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{organizationId1}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{AdminToken}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{AdminToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Auth token 2 [ID]",
							"item": [
								{
									"name": "Create contact",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Contact created\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.collectionVariables.set(\"contactId3\", jsonData.data.createContact.id);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableCookies": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
												"variables": "{\n\"command\": {\n\"name\": \"Contact2\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact2\",\n\"firstName\": \"Contact2\",\n\"lastName\": \"Contact2\"\n}\n}\n\n"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Correct token > Run query",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"C302001 Correct token > Run query\", function () {\r",
													"    var data = pm.response.json();\r",
													"    pm.expect(data.data.contact).to.be.not.null;\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableCookies": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query contact ( $id: String!) {\r\n    contact (id: $id) {\r\n  id\r\n    dynamicProperties\r\n    {\r\n      dictionaryItem\r\n      {\r\n       id\r\n      label\r\n      }\r\n      name\r\n      value\r\n    }\r\n  }\r\n    }\r\n",
												"variables": "{\r\n  \"id\": \"{{contactId3}}\"\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Correct token > Run mutation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"C302002 Correct token > Run mutation\", function () {\r",
													"    var data = pm.response.json();\r",
													"    pm.expect(data.data.deleteContact).to.be.true;\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n",
												"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId3}}\"\r\n  }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{AdminToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "X-catalog",
					"item": [
						{
							"name": "GetToken [ID]",
							"item": [
								{
									"name": "Get admin token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    \r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Set admin token\", function () {\r",
													"   \r",
													"    var jsonData = pm.response.json();\r",
													"    pm.collectionVariables.set(\"AdminToken\", jsonData.access_token);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "grand_type",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=password&scope=offline_access&username=admin&password=store",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{url}}/connect/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"connect",
												"token"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Breadcrumb [ID]",
							"item": [
								{
									"name": "Products",
									"item": [
										{
											"name": "Create product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Bread1\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create variation_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"code\":\"BYR-41043129\",\r\n   \"name\":\"Bread11\",\r\n   \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"titularItemId\":\"{{ProductId1}}\",\r\n   \"mainProductId\":\"{{ProductId1}}\",\r\n   \"isBuyable\":true,\r\n   \"isActive\":true,\r\n   \"trackInventory\":true,\r\n   \"maxQuantity\":0,\r\n   \"minQuantity\":1000,\r\n   \"productType\":\"Physical\",\r\n   \"startDate\":\"2022-03-30T14:11:34.3568415Z\",\r\n   \"priority\":0,\r\n   \"properties\":[\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"a_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"96caee57-18ec-41ff-8717-d11f92679b0a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"bool_property\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f074ee61-3a49-4971-b428-55fe40dc8b79\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"Brand\",\r\n         \"required\":true,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Marke\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Brand\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"43d14478-d142-4a65-956f-0a308d0c4ee8\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"FilterTestName\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Test\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2c70f36d-c415-4e62-98e4-140a3ee76886\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"08d7b55a-371f-4ae0-9bd2-1ac12deefbdb\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"e9f8c654-8b47-4135-ae74-21eced2626b2\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property_category\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"510df555-532c-4750-99d2-c8b2fe105314\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property_integer\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f6f0d71e-8b02-4c97-95fd-c295a7e18ddd\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property_no_requored\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"8031d71a-bae4-410d-a771-13a647364a1c\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"propertyproduct1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"9832b9f9-be3f-4906-8747-a0fe2b40c827\"\r\n      }\r\n   ],\r\n   \"images\":[\r\n      \r\n   ],\r\n   \"assets\":[\r\n      \r\n   ],\r\n   \"links\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"CatalogProduct\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"semanticUrl\":\"bread11\",\r\n         \"objectId\":\"605dd30f-9a9b-488d-af94-ad7ddaf69cf0\",\r\n         \"objectType\":\"CatalogProduct\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\",\r\n         \"id\":\"8dd50d3f-8db0-40ea-bf52-deb5073984c1\"\r\n      }\r\n   ],\r\n   \"reviews\":[\r\n      \r\n   ],\r\n   \"associations\":[\r\n      \r\n   ],\r\n   \"referencedAssociations\":[\r\n      \r\n   ],\r\n   \"outlines\":[\r\n      {\r\n         \"items\":[\r\n            {\r\n               \"id\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n               \"seoObjectType\":\"Catalog\",\r\n               \"name\":\"Electronics\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"605dd30f-9a9b-488d-af94-ad7ddaf69cf0\",\r\n               \"seoObjectType\":\"CatalogProduct\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"bread11\",\r\n                     \"objectId\":\"605dd30f-9a9b-488d-af94-ad7ddaf69cf0\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"8dd50d3f-8db0-40ea-bf52-deb5073984c1\"\r\n                  }\r\n               ],\r\n               \"name\":\"Bread11\",\r\n               \"hasVirtualParent\":false\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"createdDate\":\"2022-03-30T14:11:34.3609666Z\",\r\n   \"modifiedDate\":\"2022-03-30T14:11:34.3609666Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{variationId1}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId2\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId2\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct2\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code2\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304561\",\r\n    \"name\": \"Bread2\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create variation_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"code\":\"PQW-27615071\",\r\n   \"name\":\"Bread22\",\r\n   \"catalogId\":\"{{catalogQA}}\",\r\n   \"categoryId\":\"{{categoryQA}}\",\r\n   \"outline\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n   \"path\":\"Cell phones\",\r\n   \"titularItemId\":\"{{ProductId2}}\",\r\n   \"mainProductId\":\"{{ProductId2}}\",\r\n   \"isBuyable\":true,\r\n   \"isActive\":true,\r\n   \"trackInventory\":true,\r\n   \"maxQuantity\":0,\r\n   \"minQuantity\":1000,\r\n   \"productType\":\"Physical\",\r\n   \"startDate\":\"2022-03-30T14:37:47.8328736Z\",\r\n   \"priority\":0,\r\n   \"properties\":[\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"a_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"96caee57-18ec-41ff-8717-d11f92679b0a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"bool_property\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f074ee61-3a49-4971-b428-55fe40dc8b79\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"Brand\",\r\n         \"required\":true,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Marke\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Brand\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"43d14478-d142-4a65-956f-0a308d0c4ee8\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Color\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Color\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Farber\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"87fd1cec-79c2-4652-83b4-36e241ede571\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Deep\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Deep\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a5e64e80-2484-496a-aff5-c8df9c75fbbe\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Display_size\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Bildschirmgröße\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Display size\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fa4a86b5-d85b-464b-b27c-00f316a979e7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"FilterTestName\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Test\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2c70f36d-c415-4e62-98e4-140a3ee76886\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Front_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7ae290e2-b198-42b0-ae63-26537281d53b\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Internal_Storage_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1e94acae-f338-44a3-8216-194c01260628\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Memory_Card_Slot\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"3309e819-a77a-437c-915d-28450d55bab6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"08d7b55a-371f-4ae0-9bd2-1ac12deefbdb\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"e9f8c654-8b47-4135-ae74-21eced2626b2\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property_category\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"510df555-532c-4750-99d2-c8b2fe105314\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property_integer\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f6f0d71e-8b02-4c97-95fd-c295a7e18ddd\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property_no_requored\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"8031d71a-bae4-410d-a771-13a647364a1c\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"NFC\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"29007dd4-2f23-417b-902c-8d6565615eea\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Operating_system\",\r\n         \"required\":true,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f5ac5fae-b80b-4f88-8042-e7f89c998eff\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Pixels_Per_Inch_ppi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"0e3029bd-dc69-4617-9163-78ac53ee8a6e\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Processor_Core_GHz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"85daf769-12c7-4135-9e8a-a0bcf74db4c3\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"propertyproduct1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"9832b9f9-be3f-4906-8747-a0fe2b40c827\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"RAM_Memory_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f06daf73-efd3-4b6d-9143-bf08a0715991\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Rear_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ee496813-1a59-4707-9816-85e639c55534\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"SIM_Card_Slots\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"552a29f0-fb63-4ea2-ba12-293cd8c9410c\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Two_SIM_cards\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"b2e01868-4545-4159-8936-5f21a338cc2d\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Video_Recording\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2d8f8a03-9c7d-464f-96b8-959e60e91214\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Waterproof\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a897f2bd-bbbf-4efb-9a8e-000d1568bd96\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Weight_oz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"13e822a6-9a07-4889-88df-52a3e7eef488\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Year_Released\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6283167f-5f8f-4210-9612-790d9b2eefa0\"\r\n      }\r\n   ],\r\n   \"images\":[\r\n      \r\n   ],\r\n   \"assets\":[\r\n      \r\n   ],\r\n   \"links\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"CatalogProduct\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"semanticUrl\":\"bread22\",\r\n         \"objectId\":\"12bd8f05-33d8-4d67-a3c5-350d3293e68b\",\r\n         \"objectType\":\"CatalogProduct\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\",\r\n         \"id\":\"d43870e4-b75c-4f04-9752-05ebe8519e89\"\r\n      }\r\n   ],\r\n   \"reviews\":[\r\n      \r\n   ],\r\n   \"associations\":[\r\n      \r\n   ],\r\n   \"referencedAssociations\":[\r\n      \r\n   ],\r\n   \"outlines\":[\r\n      {\r\n         \"items\":[\r\n            {\r\n               \"id\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n               \"seoObjectType\":\"Catalog\",\r\n               \"name\":\"Electronics\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n               \"seoObjectType\":\"Category\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"cell-phones\",\r\n                     \"objectId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                     \"objectType\":\"Category\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"73642cc7f2e44d92af13e94c79c73456\"\r\n                  }\r\n               ],\r\n               \"name\":\"Cell phones\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"12bd8f05-33d8-4d67-a3c5-350d3293e68b\",\r\n               \"seoObjectType\":\"CatalogProduct\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"bread22\",\r\n                     \"objectId\":\"12bd8f05-33d8-4d67-a3c5-350d3293e68b\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"d43870e4-b75c-4f04-9752-05ebe8519e89\"\r\n                  }\r\n               ],\r\n               \"name\":\"Bread22\",\r\n               \"hasVirtualParent\":false\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"createdDate\":\"2022-03-30T14:37:47.8429256Z\",\r\n   \"modifiedDate\":\"2022-03-30T14:37:47.8429256Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{variationId2}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId3\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId3\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct3\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code3\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304562\",\r\n    \"name\": \"Bread3\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"e51b5f9eea094a44939c11d4d4fa3bb1\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create variation_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"code\":\"EUB-85579779\",\r\n   \"name\":\"Bread33\",\r\n   \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"categoryId\":\"e51b5f9eea094a44939c11d4d4fa3bb1\",\r\n   \"outline\":\"45d3fc9a913d4610a5c7d0470558c4b2/e51b5f9eea094a44939c11d4d4fa3bb1\",\r\n   \"path\":\"Camcorders/Aerial Imaging & Drones\",\r\n   \"titularItemId\":\"{{ProductId3}}\",\r\n   \"mainProductId\":\"{{ProductId3}}\",\r\n   \"isBuyable\":true,\r\n   \"isActive\":true,\r\n   \"trackInventory\":true,\r\n   \"maxQuantity\":0,\r\n   \"minQuantity\":1000,\r\n   \"productType\":\"Physical\",\r\n   \"startDate\":\"2022-03-30T14:48:16.1686492Z\",\r\n   \"priority\":0,\r\n   \"properties\":[\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"a_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"96caee57-18ec-41ff-8717-d11f92679b0a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"bool_property\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f074ee61-3a49-4971-b428-55fe40dc8b79\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"Brand\",\r\n         \"required\":true,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Marke\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Brand\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"43d14478-d142-4a65-956f-0a308d0c4ee8\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"e51b5f9eea094a44939c11d4d4fa3bb1\",\r\n         \"name\":\"Camera\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"d3ff5a6b-488b-4767-bcc1-d3daf45dbd61\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"e51b5f9eea094a44939c11d4d4fa3bb1\",\r\n         \"name\":\"Control_Range_m\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"8d3ee2b9-831e-4848-975f-2b8d96baca56\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"e51b5f9eea094a44939c11d4d4fa3bb1\",\r\n         \"name\":\"Drone_Type\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7142ca1c-7fd3-4140-8c94-c26131a446c3\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"FilterTestName\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Test\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2c70f36d-c415-4e62-98e4-140a3ee76886\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"e51b5f9eea094a44939c11d4d4fa3bb1\",\r\n         \"name\":\"Flight_Time_min\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"34dba1c9-03cc-42e5-aa58-f1de40cd8556\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"08d7b55a-371f-4ae0-9bd2-1ac12deefbdb\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"e9f8c654-8b47-4135-ae74-21eced2626b2\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property_category\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"510df555-532c-4750-99d2-c8b2fe105314\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property_integer\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f6f0d71e-8b02-4c97-95fd-c295a7e18ddd\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property_no_requored\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"8031d71a-bae4-410d-a771-13a647364a1c\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"propertyproduct1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"9832b9f9-be3f-4906-8747-a0fe2b40c827\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"e51b5f9eea094a44939c11d4d4fa3bb1\",\r\n         \"name\":\"Skill_Level\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a7a70d23-65d5-42f7-b991-92f4cefdc7b6\"\r\n      }\r\n   ],\r\n   \"images\":[\r\n      \r\n   ],\r\n   \"assets\":[\r\n      \r\n   ],\r\n   \"links\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"CatalogProduct\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"semanticUrl\":\"bread33\",\r\n         \"objectId\":\"d5f53536-66e2-47aa-a6d2-ac7b668575a7\",\r\n         \"objectType\":\"CatalogProduct\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\",\r\n         \"id\":\"e5de51ea-c426-4066-94dc-b390ee3c2bb5\"\r\n      }\r\n   ],\r\n   \"reviews\":[\r\n      \r\n   ],\r\n   \"associations\":[\r\n      \r\n   ],\r\n   \"referencedAssociations\":[\r\n      \r\n   ],\r\n   \"outlines\":[\r\n      {\r\n         \"items\":[\r\n            {\r\n               \"id\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n               \"seoObjectType\":\"Catalog\",\r\n               \"name\":\"Electronics\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n               \"seoObjectType\":\"Category\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"camcorders\",\r\n                     \"objectId\":\"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n                     \"objectType\":\"Category\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"ddf4dd0c093740f5a7b5023b34f4bdbe\"\r\n                  }\r\n               ],\r\n               \"name\":\"Camcorders\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"e51b5f9eea094a44939c11d4d4fa3bb1\",\r\n               \"seoObjectType\":\"Category\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"aerial-imaging-drones\",\r\n                     \"objectId\":\"e51b5f9eea094a44939c11d4d4fa3bb1\",\r\n                     \"objectType\":\"Category\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"42673c31224e46c4b51b4c026401e8f3\"\r\n                  }\r\n               ],\r\n               \"name\":\"Aerial Imaging & Drones\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"d5f53536-66e2-47aa-a6d2-ac7b668575a7\",\r\n               \"seoObjectType\":\"CatalogProduct\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"bread33\",\r\n                     \"objectId\":\"d5f53536-66e2-47aa-a6d2-ac7b668575a7\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"e5de51ea-c426-4066-94dc-b390ee3c2bb5\"\r\n                  }\r\n               ],\r\n               \"name\":\"Bread33\",\r\n               \"hasVirtualParent\":false\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"items\":[\r\n            {\r\n               \"id\":\"1662f5e03af04275aa5d2653357d20e4\",\r\n               \"seoObjectType\":\"Catalog\",\r\n               \"name\":\"Electronics virtual\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"64b5ba1277ab4649a6caf20f4e6f17c1\",\r\n               \"seoObjectType\":\"Category\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"drones\",\r\n                     \"objectId\":\"64b5ba1277ab4649a6caf20f4e6f17c1\",\r\n                     \"objectType\":\"Category\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"a1ba68a0dd67479abd19871aa8973866\"\r\n                  }\r\n               ],\r\n               \"name\":\"Drones\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"e51b5f9eea094a44939c11d4d4fa3bb1\",\r\n               \"seoObjectType\":\"Category\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"aerial-imaging-drones\",\r\n                     \"objectId\":\"e51b5f9eea094a44939c11d4d4fa3bb1\",\r\n                     \"objectType\":\"Category\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"42673c31224e46c4b51b4c026401e8f3\"\r\n                  }\r\n               ],\r\n               \"name\":\"Aerial Imaging & Drones\",\r\n               \"hasVirtualParent\":true\r\n            },\r\n            {\r\n               \"id\":\"d5f53536-66e2-47aa-a6d2-ac7b668575a7\",\r\n               \"seoObjectType\":\"CatalogProduct\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"bread33\",\r\n                     \"objectId\":\"d5f53536-66e2-47aa-a6d2-ac7b668575a7\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"e5de51ea-c426-4066-94dc-b390ee3c2bb5\"\r\n                  }\r\n               ],\r\n               \"name\":\"Bread33\",\r\n               \"hasVirtualParent\":false\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"createdDate\":\"2022-03-30T14:48:16.1738855Z\",\r\n   \"modifiedDate\":\"2022-03-30T14:48:16.1738855Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{variationId3}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId1}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId1}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId2}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code2}}\",\r\n    \"name\": \"Product2\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId2}}\",\r\n      \"list\": {{ProductPrice2}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId2}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId2}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId3}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code3}}\",\r\n    \"name\": \"Product3\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product3\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product3\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product3\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId3}}\",\r\n      \"list\": {{ProductPrice3}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId3}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId3}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index products",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check Index\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId1}}\", \"{{ProductId2}}\",\"{{ProductId3}}\", \"{{variationId1}}\", \"{{variationId2}}\", \"{{variationId3}}\"\r\n        ]\r\n    }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Breadcrumb",
									"item": [
										{
											"name": "Product does not contains category",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C279165 Product does not contains category\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.product.breadcrumbs).length(1);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 3000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": " query { product(id: \"{{ProductId1}}\", cultureName:\"{{cultureName}}\",storeId: \"{{storeId}}\") { id name code breadcrumbs {title seoPath typeName} variations{ id code } description { id languageCode reviewType content } descriptions{ id languageCode reviewType content }\r\nproperties{\r\nname\r\nvalue\r\nlabel\r\n}\r\nimages {\r\nurl\r\nrelativeUrl\r\ncultureName\r\n}\r\nseoInfo {\r\nname\r\nsemanticUrl\r\nmetaKeywords\r\nmetaDescription\r\n}\r\n }\r\n} ",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Product contain one category",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C279168 Product contain one category\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.product.breadcrumbs).length(2);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": " query { product(id: \"{{ProductId2}}\", cultureName:\"{{cultureName}}\",storeId: \"{{storeId}}\") \r\n { id name code breadcrumbs {title seoPath typeName} variations{ id code } description { id languageCode reviewType content } descriptions{ id languageCode reviewType content }\r\nproperties{\r\nname\r\nvalue\r\nlabel\r\n}\r\nimages {\r\nurl\r\nrelativeUrl\r\ncultureName\r\n}\r\nseoInfo {\r\nname\r\nsemanticUrl\r\nmetaKeywords\r\nmetaDescription\r\n}\r\nprice {\r\npricelistId\r\nlist {\r\namount\r\n}\r\nsale {\r\namount\r\n}\r\ndiscountAmount {\r\namount\r\n}\r\n}\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Product contains several nested categories",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C279169 Product contains several nested categories\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.product.breadcrumbs).length(3); \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": " query { product(id: \"{{ProductId3}}\", cultureName:\"{{cultureName}}\",storeId: \"{{storeId}}\") { id name code breadcrumbs {title seoPath typeName} variations{ id code } description { id languageCode reviewType content } descriptions{ id languageCode reviewType content }\r\nproperties{\r\nname\r\nvalue\r\nlabel\r\n}\r\nimages {\r\nurl\r\nrelativeUrl\r\ncultureName\r\n}\r\nseoInfo {\r\nname\r\nsemanticUrl\r\nmetaKeywords\r\nmetaDescription\r\n}\r\nprice {\r\npricelistId\r\nlist {\r\namount\r\n}\r\nsale {\r\namount\r\n}\r\ndiscountAmount {\r\namount\r\n}\r\n}\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Variation. Product does not contains category",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C279172 Product does not contains category\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.product.breadcrumbs).length(1);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": " query { product(id: \"{{variationId1}}\", cultureName:\"{{cultureName}}\",storeId: \"{{storeId}}\") { id name code breadcrumbs {title seoPath typeName} variations{ id code } description { id languageCode reviewType content } descriptions{ id languageCode reviewType content }\r\nproperties{\r\nname\r\nvalue\r\nlabel\r\n}\r\nimages {\r\nurl\r\nrelativeUrl\r\ncultureName\r\n}\r\nseoInfo {\r\nname\r\nsemanticUrl\r\nmetaKeywords\r\nmetaDescription\r\n}\r\nprice {\r\npricelistId\r\nlist {\r\namount\r\n}\r\nsale {\r\namount\r\n}\r\ndiscountAmount {\r\namount\r\n}\r\n}\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Variation. Product contain one category",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C279171 Variation. Product contain one category\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.product.breadcrumbs).length(2);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": " query { product(id: \"{{variationId2}}\", cultureName:\"{{cultureName}}\",storeId: \"{{storeId}}\") { id name code breadcrumbs {title seoPath typeName} variations{ id code } description { id languageCode reviewType content } descriptions{ id languageCode reviewType content }\r\nproperties{\r\nname\r\nvalue\r\nlabel\r\n}\r\nimages {\r\nurl\r\nrelativeUrl\r\ncultureName\r\n}\r\nseoInfo {\r\nname\r\nsemanticUrl\r\nmetaKeywords\r\nmetaDescription\r\n}\r\nprice {\r\npricelistId\r\nlist {\r\namount\r\n}\r\nsale {\r\namount\r\n}\r\ndiscountAmount {\r\namount\r\n}\r\n}\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Variation. Parent product contains several nested categories",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C279170 Variation. Parent product contains several nested categories\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.product.breadcrumbs).length(3);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": " query { product(id: \"{{variationId3}}\", cultureName:\"{{cultureName}}\",storeId: \"{{storeId}}\") { id name code breadcrumbs {title seoPath typeName} variations{ id code } description { id languageCode reviewType content } descriptions{ id languageCode reviewType content }\r\nproperties{\r\nname\r\nvalue\r\nlabel\r\n}\r\nimages {\r\nurl\r\nrelativeUrl\r\ncultureName\r\n}\r\nseoInfo {\r\nname\r\nsemanticUrl\r\nmetaKeywords\r\nmetaDescription\r\n}\r\nprice {\r\npricelistId\r\nlist {\r\namount\r\n}\r\nsale {\r\namount\r\n}\r\ndiscountAmount {\r\namount\r\n}\r\n}\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Clear all",
									"item": [
										{
											"name": "Delete product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId2}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId3}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId3}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{AdminToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Catalog [ID]",
							"item": [
								{
									"name": "Sort products",
									"item": [
										{
											"name": "Create product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 5000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"0000000000000000000\",\r\n    \"name\": \"111\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"priority\": -1,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId2\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct2\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code2\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"zzzzzzzzzzzzzzzzzzzzzlast_product\",\r\n    \"name\": \"zzzzzzzzzzzzzzzzzzzzzlast_product\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"startDate\": \"0002-01-01T00:00:00Z\",\r\n    \"priority\": 10,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"1991-11-11T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to product_1",
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"productId\":\"{{ProductId1}}\",\r\n   \"product\":{\r\n      \"code\":\"{{Code1}}\",\r\n      \"name\":\"{{Nameofproduct1}}\",\r\n      \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n      \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n      \"outline\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n      \"path\":\"Cell phones\",\r\n      \"isBuyable\":true,\r\n      \"isActive\":true,\r\n      \"trackInventory\":true,\r\n      \"maxQuantity\":0,\r\n      \"minQuantity\":0,\r\n      \"productType\":\"Physical\",\r\n      \"startDate\":\"2021-10-20T15:18:03.2697789Z\",\r\n      \"priority\":-1,\r\n      \"properties\":[\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Brand\",\r\n            \"required\":true,\r\n            \"dictionary\":true,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"Marke\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"name\":\"Brand-en\",\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"43d14478-d142-4a65-956f-0a308d0c4ee8\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Brand2\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"name\":\"german\",\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"7d7be8bc-db74-49ae-ba92-11a3914e43dc\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"brand3\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"e7c98d04-4298-4cf6-a2c0-75768f5031ca\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"brand4_multilingual\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"brand4_multilingualen\",\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"name\":\"brand4_multilingualde\",\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"08512d04-1721-49fe-9b1b-c552311c7ef6\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Catalog_long\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"LongText\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"8a0ad192-ccbf-4c8d-9155-d3cd6d1d3d77\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"category_decimal\",\r\n            \"required\":false,\r\n            \"dictionary\":true,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Category\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"6e9f37df-3caa-42b0-b556-3b5162793800\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Category_long\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"LongText\",\r\n            \"type\":\"Category\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"86727f51-816b-425a-9754-bf0333ba23d4\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Color\",\r\n            \"required\":false,\r\n            \"dictionary\":true,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"Color\",\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"name\":\"Farber\",\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"87fd1cec-79c2-4652-83b4-36e241ede571\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"dictionary\",\r\n            \"required\":false,\r\n            \"dictionary\":true,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"de\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"name\":\"en\",\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"fe55902d-b298-4aef-9e18-5f0ebfaf8978\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Display_size\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"Bildschirmgröße\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"name\":\"Display size\",\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"fa4a86b5-d85b-464b-b27c-00f316a979e7\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Font_camera\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Boolean\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"f88029fb-2bb2-475d-99bd-23db67f3b98a\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Front_camera_MP\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"7ae290e2-b198-42b0-ae63-26537281d53b\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Full_name\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Category\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"ddf9e753-db37-4385-b7c6-92f485b74185\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Inger_multi\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Integer\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"af036906-3643-4f0b-9c27-505de22234cb\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"int1\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Integer\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"570a5567-7442-4202-b77f-d6e572a6bd91\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Internal_Storage_GB\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"1e94acae-f338-44a3-8216-194c01260628\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Memory_Card_Slot\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Boolean\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"3309e819-a77a-437c-915d-28450d55bab6\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Multi_int312\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Integer\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"1daa49e9-0ccd-4fe7-9323-84559a85a775\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"multiInt_product\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Integer\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"2341b9c1-7c80-42b4-b33d-22277e4c3a93\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Multilanguage\",\r\n            \"required\":false,\r\n            \"dictionary\":true,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"66c1b244-21a6-44b0-9cb1-2f6d9b206a57\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"multilingual\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"ac335397-6f6c-4ccd-8a28-6b10a5a4e841\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"multint_variation\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Integer\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"bbe3bd7f-3880-42b1-ba6e-ed0402d0c871\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Multint1\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Integer\",\r\n            \"type\":\"Category\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"lab1\",\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"name\":\"lab2\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"name\":\"lab3\",\r\n                  \"languageCode\":\"fr-FR\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"ef21c905-4c1d-4856-87ce-8da49d3e1147\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"multivalue\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"559e6cd9-923e-4178-8d2e-3183394a09e5\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"multivalue_multiligual_property1\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"labelde\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"name\":\"labelen\",\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"b1be3e6c-63a2-46f9-98b1-a4d11eee19f1\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"new_property234\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"qww\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"name\":\"qw\",\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"7c48c81c-e7f2-49fe-b79f-5d938e81acd1\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"NFC\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Boolean\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"29007dd4-2f23-417b-902c-8d6565615eea\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Operating_system\",\r\n            \"required\":true,\r\n            \"dictionary\":true,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"f5ac5fae-b80b-4f88-8042-e7f89c998eff\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Pixels_Per_Inch_ppi\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"0e3029bd-dc69-4617-9163-78ac53ee8a6e\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Processor_Core_GHz\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"85daf769-12c7-4135-9e8a-a0bcf74db4c3\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"RAM_Memory_GB\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"f06daf73-efd3-4b6d-9143-bf08a0715991\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Rear_camera_MP\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"ee496813-1a59-4707-9816-85e639c55534\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"SIM_Card_Slots\",\r\n            \"required\":false,\r\n            \"dictionary\":true,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"552a29f0-fb63-4ea2-ba12-293cd8c9410c\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"test11\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"749bf945-0f15-45cc-8b98-68cf6d58500a\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"testprop\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"a617db33-096f-4bd1-8727-ac15302b15e6\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Two_SIM_cards\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Boolean\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"b2e01868-4545-4159-8936-5f21a338cc2d\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Type_of_product\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"Produkttyp\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"name\":\"Type_of_product\",\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"name\":\"Type de produit\",\r\n                  \"languageCode\":\"fr-FR\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"300a6918-58bb-403a-8f1b-0a3ac38b05d9\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Video_Recording\",\r\n            \"required\":false,\r\n            \"dictionary\":true,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"2d8f8a03-9c7d-464f-96b8-959e60e91214\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Waterproof\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Boolean\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"a897f2bd-bbbf-4efb-9a8e-000d1568bd96\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Weight_oz\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"13e822a6-9a07-4889-88df-52a3e7eef488\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Year_Released\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"6283167f-5f8f-4210-9612-790d9b2eefa0\"\r\n         }\r\n      ],\r\n      \"images\":[\r\n         \r\n      ],\r\n      \"assets\":[\r\n         \r\n      ],\r\n      \"links\":[\r\n         \r\n      ],\r\n      \"seoObjectType\":\"CatalogProduct\",\r\n      \"seoInfos\":[\r\n         {\r\n            \"semanticUrl\":\"{{Nameofproduct1}}\",\r\n            \"objectId\":\"{{ProductId1}}\",\r\n            \"objectType\":\"CatalogProduct\",\r\n            \"isActive\":true,\r\n            \"languageCode\":\"en-US\",\r\n            \"id\":\"3102cd2f-ad52-4892-be11-1aed4211053f\"\r\n         }\r\n      ],\r\n      \"reviews\":[\r\n         \r\n      ],\r\n      \"associations\":[\r\n         \r\n      ],\r\n      \"referencedAssociations\":[\r\n         \r\n      ],\r\n      \"outlines\":[\r\n         {\r\n            \"items\":[\r\n               {\r\n                  \"id\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n                  \"seoObjectType\":\"Catalog\",\r\n                  \"name\":\"Electronics\",\r\n                  \"hasVirtualParent\":false\r\n               },\r\n               {\r\n                  \"id\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                  \"seoObjectType\":\"Category\",\r\n                  \"seoInfos\":[\r\n                     {\r\n                        \"semanticUrl\":\"cell-phones\",\r\n                        \"objectId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                        \"objectType\":\"Category\",\r\n                        \"isActive\":true,\r\n                        \"languageCode\":\"en-US\",\r\n                        \"id\":\"73642cc7f2e44d92af13e94c79c73456\"\r\n                     }\r\n                  ],\r\n                  \"name\":\"Cell phones\",\r\n                  \"hasVirtualParent\":false\r\n               },\r\n               {\r\n                  \"id\":\"{{ProductId1}}\",\r\n                  \"seoObjectType\":\"CatalogProduct\",\r\n                  \"seoInfos\":[\r\n                     {\r\n                        \"semanticUrl\":\"{{Nameofproduct1}}\",\r\n                        \"objectId\":\"{{ProductId1}}\",\r\n                        \"objectType\":\"CatalogProduct\",\r\n                        \"isActive\":true,\r\n                        \"languageCode\":\"en-US\",\r\n                        \"id\":\"3102cd2f-ad52-4892-be11-1aed4211053f\"\r\n                     }\r\n                  ],\r\n                  \"name\":\"{{Nameofproduct1}}\",\r\n                  \"hasVirtualParent\":false\r\n               }\r\n            ]\r\n         }\r\n      ],\r\n      \"isInherited\":false,\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\",\r\n      \"id\":\"{{ProductId1}}\",\r\n      \"_priority\":-1\r\n   },\r\n   \"prices\":[\r\n      {\r\n         \"productId\":\"{{ProductId1}}\",\r\n         \"list\":0,\r\n         \"minQuantity\":1,\r\n         \"currency\":\"USD\",\r\n         \"pricelistId\":\"934da94516a74f9ab4ec001343ac928a\",\r\n         \"name\":\"ElectronicsUSD\",\r\n         \"catalog\":\"Electronics virtual, Electronics\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId1}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId1}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to product_2",
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"productId\":\"{{ProductId2}}\",\r\n   \"product\":{\r\n      \"code\":\"{{Code2}}\",\r\n      \"name\":\"{{Nameofproduct2}}\",\r\n      \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n      \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n      \"outline\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n      \"path\":\"Cell phones\",\r\n      \"isBuyable\":true,\r\n      \"isActive\":true,\r\n      \"trackInventory\":true,\r\n      \"maxQuantity\":0,\r\n      \"minQuantity\":0,\r\n      \"productType\":\"Physical\",\r\n      \"startDate\":\"2021-10-20T15:31:44.811377Z\",\r\n      \"priority\":10,\r\n      \"properties\":[\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Brand\",\r\n            \"required\":true,\r\n            \"dictionary\":true,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"Marke\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"name\":\"Brand-en\",\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"43d14478-d142-4a65-956f-0a308d0c4ee8\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Brand2\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"name\":\"german\",\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"7d7be8bc-db74-49ae-ba92-11a3914e43dc\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"brand3\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"e7c98d04-4298-4cf6-a2c0-75768f5031ca\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"brand4_multilingual\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"brand4_multilingualen\",\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"name\":\"brand4_multilingualde\",\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"08512d04-1721-49fe-9b1b-c552311c7ef6\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Catalog_long\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"LongText\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"8a0ad192-ccbf-4c8d-9155-d3cd6d1d3d77\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"category_decimal\",\r\n            \"required\":false,\r\n            \"dictionary\":true,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Category\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"6e9f37df-3caa-42b0-b556-3b5162793800\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Category_long\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"LongText\",\r\n            \"type\":\"Category\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"86727f51-816b-425a-9754-bf0333ba23d4\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Color\",\r\n            \"required\":false,\r\n            \"dictionary\":true,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"Color\",\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"name\":\"Farber\",\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"87fd1cec-79c2-4652-83b4-36e241ede571\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"dictionary\",\r\n            \"required\":false,\r\n            \"dictionary\":true,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"de\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"name\":\"en\",\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"fe55902d-b298-4aef-9e18-5f0ebfaf8978\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Display_size\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"Bildschirmgröße\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"name\":\"Display size\",\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"fa4a86b5-d85b-464b-b27c-00f316a979e7\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Font_camera\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Boolean\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"f88029fb-2bb2-475d-99bd-23db67f3b98a\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Front_camera_MP\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"7ae290e2-b198-42b0-ae63-26537281d53b\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Full_name\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Category\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"ddf9e753-db37-4385-b7c6-92f485b74185\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Inger_multi\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Integer\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"af036906-3643-4f0b-9c27-505de22234cb\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"int1\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Integer\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"570a5567-7442-4202-b77f-d6e572a6bd91\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Internal_Storage_GB\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"1e94acae-f338-44a3-8216-194c01260628\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Memory_Card_Slot\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Boolean\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"3309e819-a77a-437c-915d-28450d55bab6\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Multi_int312\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Integer\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"1daa49e9-0ccd-4fe7-9323-84559a85a775\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"multiInt_product\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Integer\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"2341b9c1-7c80-42b4-b33d-22277e4c3a93\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Multilanguage\",\r\n            \"required\":false,\r\n            \"dictionary\":true,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"66c1b244-21a6-44b0-9cb1-2f6d9b206a57\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"multilingual\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"ac335397-6f6c-4ccd-8a28-6b10a5a4e841\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"multint_variation\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Integer\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"fr-FR\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"bbe3bd7f-3880-42b1-ba6e-ed0402d0c871\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Multint1\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Integer\",\r\n            \"type\":\"Category\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"lab1\",\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"name\":\"lab2\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"name\":\"lab3\",\r\n                  \"languageCode\":\"fr-FR\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"ef21c905-4c1d-4856-87ce-8da49d3e1147\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"multivalue\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"559e6cd9-923e-4178-8d2e-3183394a09e5\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"multivalue_multiligual_property1\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"labelde\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"name\":\"labelen\",\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"b1be3e6c-63a2-46f9-98b1-a4d11eee19f1\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"new_property234\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"qww\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"name\":\"qw\",\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"7c48c81c-e7f2-49fe-b79f-5d938e81acd1\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"NFC\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Boolean\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"29007dd4-2f23-417b-902c-8d6565615eea\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Operating_system\",\r\n            \"required\":true,\r\n            \"dictionary\":true,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"f5ac5fae-b80b-4f88-8042-e7f89c998eff\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Pixels_Per_Inch_ppi\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"0e3029bd-dc69-4617-9163-78ac53ee8a6e\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Processor_Core_GHz\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"85daf769-12c7-4135-9e8a-a0bcf74db4c3\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"RAM_Memory_GB\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"f06daf73-efd3-4b6d-9143-bf08a0715991\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Rear_camera_MP\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"ee496813-1a59-4707-9816-85e639c55534\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"SIM_Card_Slots\",\r\n            \"required\":false,\r\n            \"dictionary\":true,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"552a29f0-fb63-4ea2-ba12-293cd8c9410c\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"test11\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"749bf945-0f15-45cc-8b98-68cf6d58500a\"\r\n         },\r\n         {\r\n            \"isReadOnly\":true,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"testprop\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Catalog\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"a617db33-096f-4bd1-8727-ac15302b15e6\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Two_SIM_cards\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Boolean\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"b2e01868-4545-4159-8936-5f21a338cc2d\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\":\"Type_of_product\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":true,\r\n            \"multilanguage\":true,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Variation\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"name\":\"Produkttyp\",\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"name\":\"Type_of_product\",\r\n                  \"languageCode\":\"en-US\"\r\n               },\r\n               {\r\n                  \"name\":\"Type de produit\",\r\n                  \"languageCode\":\"fr-FR\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"300a6918-58bb-403a-8f1b-0a3ac38b05d9\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Video_Recording\",\r\n            \"required\":false,\r\n            \"dictionary\":true,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"ShortText\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"2d8f8a03-9c7d-464f-96b8-959e60e91214\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Waterproof\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Boolean\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"a897f2bd-bbbf-4efb-9a8e-000d1568bd96\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Weight_oz\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"13e822a6-9a07-4889-88df-52a3e7eef488\"\r\n         },\r\n         {\r\n            \"isReadOnly\":false,\r\n            \"isManageable\":true,\r\n            \"isNew\":false,\r\n            \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n            \"name\":\"Year_Released\",\r\n            \"required\":false,\r\n            \"dictionary\":false,\r\n            \"multivalue\":false,\r\n            \"multilanguage\":false,\r\n            \"hidden\":false,\r\n            \"valueType\":\"Number\",\r\n            \"type\":\"Product\",\r\n            \"values\":[\r\n               \r\n            ],\r\n            \"attributes\":[\r\n               \r\n            ],\r\n            \"displayNames\":[\r\n               {\r\n                  \"languageCode\":\"de-DE\"\r\n               },\r\n               {\r\n                  \"languageCode\":\"en-US\"\r\n               }\r\n            ],\r\n            \"validationRules\":[\r\n               \r\n            ],\r\n            \"isInherited\":true,\r\n            \"id\":\"6283167f-5f8f-4210-9612-790d9b2eefa0\"\r\n         }\r\n      ],\r\n      \"images\":[\r\n         \r\n      ],\r\n      \"assets\":[\r\n         \r\n      ],\r\n      \"links\":[\r\n         \r\n      ],\r\n      \"seoObjectType\":\"CatalogProduct\",\r\n      \"seoInfos\":[\r\n         {\r\n            \"semanticUrl\":\"{{Nameofproduct2}}\",\r\n            \"objectId\":\"{{ProductId2}}\",\r\n            \"objectType\":\"CatalogProduct\",\r\n            \"isActive\":true,\r\n            \"languageCode\":\"en-US\",\r\n            \"id\":\"7c9c3399-2d01-4736-8c2b-33faef03cfae\"\r\n         }\r\n      ],\r\n      \"reviews\":[\r\n         \r\n      ],\r\n      \"associations\":[\r\n         \r\n      ],\r\n      \"referencedAssociations\":[\r\n         \r\n      ],\r\n      \"outlines\":[\r\n         {\r\n            \"items\":[\r\n               {\r\n                  \"id\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n                  \"seoObjectType\":\"Catalog\",\r\n                  \"name\":\"Electronics\",\r\n                  \"hasVirtualParent\":false\r\n               },\r\n               {\r\n                  \"id\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                  \"seoObjectType\":\"Category\",\r\n                  \"seoInfos\":[\r\n                     {\r\n                        \"semanticUrl\":\"cell-phones\",\r\n                        \"objectId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                        \"objectType\":\"Category\",\r\n                        \"isActive\":true,\r\n                        \"languageCode\":\"en-US\",\r\n                        \"id\":\"73642cc7f2e44d92af13e94c79c73456\"\r\n                     }\r\n                  ],\r\n                  \"name\":\"Cell phones\",\r\n                  \"hasVirtualParent\":false\r\n               },\r\n               {\r\n                  \"id\":\"{{ProductId2}}\",\r\n                  \"seoObjectType\":\"CatalogProduct\",\r\n                  \"seoInfos\":[\r\n                     {\r\n                        \"semanticUrl\":\"{{Nameofproduct2}}\",\r\n                        \"objectId\":\"{{ProductId2}}\",\r\n                        \"objectType\":\"CatalogProduct\",\r\n                        \"isActive\":true,\r\n                        \"languageCode\":\"en-US\",\r\n                        \"id\":\"7c9c3399-2d01-4736-8c2b-33faef03cfae\"\r\n                     }\r\n                  ],\r\n                  \"name\":\"{{Nameofproduct2}}\",\r\n                  \"hasVirtualParent\":false\r\n               }\r\n            ]\r\n         }\r\n      ],\r\n      \"isInherited\":false,\r\n      \"createdDate\":\"1991-11-11T00:00:00Z\",\r\n      \"modifiedDate\":\"1991-11-11T00:00:00Z\",\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\",\r\n      \"id\":\"{{ProductId2}}\",\r\n      \"_priority\":10\r\n   },\r\n   \"prices\":[\r\n      {\r\n         \"productId\":\"{{ProductId2}}\",\r\n         \"list\":9999999999,\r\n         \"minQuantity\":1,\r\n         \"currency\":\"USD\",\r\n         \"pricelistId\":\"934da94516a74f9ab4ec001343ac928a\",\r\n         \"name\":\"ElectronicsUSD\",\r\n         \"catalog\":\"Electronics virtual, Electronics\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId2}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId2}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index products",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check Index\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId1}}\",\"{{ProductId2}}\"\r\n        ]\r\n    }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										},
										{
											"name": "Products sort by name:asc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C265324 first product = 1first_product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.products.items[0].name).to.eql(pm.collectionVariables.get(\"Nameofproduct1\"));\r",
															"\r",
															" \r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 5000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\nproducts(\nquery: \"\"\nstoreId: \"{{storeId}}\"\nsort:\"name:asc\"\nfirst: 20\n) {\ntotalCount\nitems {\nid\nname\n\n}}}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"storeId\": \"{{storeId}}\",\n  \"currencyCode\": \"{{currencyCode}}\",\n  \"filter\": \"{{filter}}\",\n  \"fuzzy\": true,\n  \"fuzzyLevel\": 0,\n  \"facet\": \"\",\n  \"sort\": \"name:asc\",\n  \"productIds\": [ \n  ]\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Products sort by name:desc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C265324 first product = zlast_product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.products.items[0].name).to.eql(pm.collectionVariables.get(\"Nameofproduct2\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\nproducts(\nquery: \"\"\nstoreId: \"{{storeId}}\"\nsort:\"name:desc\"\nfirst: 20\n) {\ntotalCount\nitems {\nid\nname\n\n}}}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"storeId\": \"{{storeId}}\",\n  \"userId\": \"{{userId}}\",\n  \"currencyCode\": \"{{currencyCode}}\",\n  \"filter\": \"{{filter}}\",\n  \"fuzzy\": true,\n  \"fuzzyLevel\": 0,\n  \"facet\": \"\",\n  \"sort\": \"name:desc\",\n  \"productIds\": [ \n  ]\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Products sort by price:asc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C265337 first product = 0\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"   pm.expect(jsonData.data.products.items[0].price.list.amount).to.equal(0);\r",
															"\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\nproducts(\nquery: \"\"\nstoreId: \"{{storeId}}\"\nsort:\"price:asc\"\nfirst: 60\n) {\ntotalCount\nitems {\nid\nname\n price\n {\n     list\n {\n     amount\n     currency{\n         code\n     }\n     }}\n\n}}}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"storeId\": \"{{storeId}}\",\n  \"userId\": \"{{userId}}\",\n  \"currencyCode\": \"{{currencyCode}}\",\n  \"filter\": \"{{filter}}\",\n  \"fuzzy\": true,\n  \"fuzzyLevel\": 0,\n  \"facet\": \"\",\n  \"sort\": \"price:asc\",\n  \"productIds\": [ \n  ]\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Products sort by price:desc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C265337 first product = xFold CINEMA X12 RTF U7, amount =  23638.0\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.products.items[0].name).to.eql(pm.collectionVariables.get(\"Nameofproduct2\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\nproducts(\nquery: \"\"\nstoreId: \"{{storeId}}\"\nsort:\"price:desc\"\nfirst: 60\n) {\ntotalCount\nitems {\nid\nname\n price\n {\n     list\n {\n     amount\n     currency{code}\n     }}\n\n}}}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"storeId\": \"{{storeId}}\",\n  \"userId\": \"{{userId}}\",\n  \"currencyCode\": \"EUR\",\n  \"filter\": \"{{filter}}\",\n  \"fuzzy\": true,\n  \"fuzzyLevel\": 0,\n  \"facet\": \"\",\n  \"sort\": \"price:desc\",\n  \"productIds\": [ \n  ]\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Products sort by createdDate:asc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C265338 first product = 1first_product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.products.items[0].name).to.eql(pm.collectionVariables.get(\"Nameofproduct2\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\nproducts(\n\nstoreId: \"{{storeId}}\",\nsort:\"createdDate:asc\"\n\n) {\ntotalCount\nitems {\nid\ncode\nname\n}\n}\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Products sort by createdDate:desc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C265338 first product = zlast_product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.products.items[0].name).to.eql(pm.collectionVariables.get(\"Nameofproduct1\"));\r",
															"  \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\nproducts(\nstoreId: \"{{storeId}}\"\nsort:\"createdDate:desc\"\n){\ntotalCount\nitems {\nid\ncode\nname\n}\n}\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Products sort by priority:asc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C265336 first product = 1first_product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.products.items[0].name).to.eql(pm.collectionVariables.get(\"Nameofproduct1\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\nproducts(\nquery: \"\"\nstoreId: \"{{storeId}}\"\nsort:\"priority:asc\"\nfirst: 20\n) {\ntotalCount\nitems {\nid\ncode\nname\n}\n}\n}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"storeId\": \"{{storeId}}\",\n  \"userId\": \"{{userId}}\",\n  \"currencyCode\": \"{{currencyCode}}\",\n  \"filter\": \"{{filter}}\",\n  \"fuzzy\": true,\n  \"fuzzyLevel\": 0,\n  \"facet\": \"\",\n  \"sort\": \"priority:asc\",\n  \"productIds\": [ \n  ]\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Products sort by priority:desc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C265336 first product = zlast_product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.products.items[0].name).to.eql(pm.collectionVariables.get(\"Nameofproduct2\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\nproducts(\nquery: \"\"\nstoreId: \"{{storeId}}\"\nsort:\"priority:desc\"\nfirst: 20\n) {\ntotalCount\nitems {\nid\ncode\nname\n}\n}\n}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"storeId\": \"{{storeId}}\",\n  \"userId\": \"{{userId}}\",\n  \"currencyCode\": \"{{currencyCode}}\",\n  \"filter\": \"{{filter}}\",\n  \"fuzzy\": true,\n  \"fuzzyLevel\": 0,\n  \"facet\": \"\",\n  \"productIds\": [ \n  ]\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Products sort by sku:asc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C265335 first product = 1first_product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.products.items[0].name).to.eql(pm.collectionVariables.get(\"Nameofproduct1\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\nproducts(\nquery: \"\"\nstoreId: \"{{storeId}}\"\nsort:\"sku:asc\"\nfirst: 20\n) {\ntotalCount\nitems {\nid\ncode\nname\n}\n}\n}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"storeId\": \"{{storeId}}\",\n  \"userId\": \"{{userId}}\",\n  \"currencyCode\": \"{{currencyCode}}\",\n  \"filter\": \"{{filter}}\",\n  \"fuzzy\": true,\n  \"fuzzyLevel\": 0,\n  \"facet\": \"\",\n  \"sort\": \"sku:asc\",\n  \"productIds\": [ \n  ]\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Products sort by sku:desc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C265335 first product = zlast_product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															" pm.expect(jsonData.data.products.items[0].name).to.eql(pm.collectionVariables.get(\"Nameofproduct2\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\nproducts(\nquery: \"\"\nstoreId: \"{{storeId}}\"\nsort:\"sku:desc\"\nfirst: 20\n) {\ntotalCount\nitems {\nid\ncode\nname\n}\n}\n}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"storeId\": \"{{storeId}}\",\n  \"userId\": \"{{userId}}\",\n  \"currencyCode\": \"{{currencyCode}}\",\n  \"filter\": \"{{filter}}\",\n  \"fuzzy\": true,\n  \"fuzzyLevel\": 0,\n  \"facet\": \"\",\n  \"sort\": \"sku:desc\",\n  \"productIds\": [ \n  ]\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId2}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Add properties",
									"item": [
										{
											"name": "Add property with dictionary type to catalog",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"isReadOnly\": false,\r\n    \"isManageable\": true,\r\n    \"isNew\": true,\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"name\": \"xapi_dictionary\",\r\n    \"required\": false,\r\n    \"dictionary\": true,\r\n    \"multivalue\": false,\r\n    \"multilanguage\": false,\r\n    \"hidden\": false,\r\n    \"valueType\": \"ShortText\",\r\n    \"type\": \"Catalog\",\r\n    \"values\": [],\r\n    \"attributes\": [],\r\n    \"displayNames\": [\r\n        {\r\n            \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n            \"languageCode\": \"de-DE\"\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"id\": \"{{propertyId}}\",\r\n    \"dictionaryValues\": []\r\n    \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/properties?id={{propertyId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "id",
															"value": "{{propertyId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Add values to dictionary property",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"isNew\": true,\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"alias\": \"B\",\r\n        \"sortOrder\": \"1\",\r\n        \"localizedValues\": [\r\n            {\r\n                \"languageCode\": \"en-US\",\r\n                \"value\": \"B\"\r\n            }\r\n        ],\r\n        \"id\": \"a764d720-f0cb-4bf7-8808-ef7209ce8465\"\r\n    },\r\n    {\r\n        \"isNew\": true,\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"alias\": \"A\",\r\n        \"sortOrder\": \"0\",\r\n        \"localizedValues\": [\r\n            {\r\n                \"languageCode\": \"en-US\",\r\n                \"value\": \"A\"\r\n            }\r\n        ],\r\n        \"id\": \"39cfc4ea-7846-443a-a0ed-2b6211ff5cec\"\r\n    }\r\n    ]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/dictionaryitems",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"dictionaryitems"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Multivalue with Decimal type to category",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"isReadOnly\": false,\r\n    \"isManageable\": true,\r\n    \"isNew\": true,\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"{{categoryId2}}\",\r\n    \"name\": \"xapi_multivalue_Decimal\",\r\n    \"required\": false,\r\n    \"dictionary\": false,\r\n    \"multivalue\": true,\r\n    \"multilanguage\": false,\r\n    \"hidden\": false,\r\n    \"valueType\": \"Number\",\r\n    \"type\": \"Category\",\r\n    \"values\": [\r\n        {\r\n      \"propertyName\": \"xapi_multivalue\",\r\n      \"propertyId\": \"{{propertyId2}}\",\r\n      \"languageCode\": \"en-US\",\r\n      \"valueType\": \"Number\",\r\n       \"value\": {}      \r\n        }\r\n            \r\n      ],\r\n    \"attributes\": [],\r\n    \"displayNames\": [\r\n        {\r\n            \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n            \"languageCode\": \"de-DE\"\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"id\": \"{{propertyId2}}\",\r\n    \"dictionaryValues\": []\r\n        }",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/properties?id={{propertyId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "id",
															"value": "{{propertyId2}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Multivalue property with integer type to category",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"isReadOnly\": false,\r\n    \"isManageable\": true,\r\n    \"isNew\": true,\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"{{categoryId2}}\",\r\n    \"name\": \"xapi_multivalue_integer\",\r\n    \"required\": false,\r\n    \"dictionary\": false,\r\n    \"multivalue\": true,\r\n    \"multilanguage\": false,\r\n    \"hidden\": false,\r\n    \"valueType\": \"Integer\",\r\n    \"type\": \"Category\",\r\n    \"values\": [\r\n        {\r\n      \"propertyName\": \"xapi_multivalue_integer\",\r\n      \"propertyId\": \"{{propertyId7}}\",\r\n      \"languageCode\": \"en-US\",\r\n      \"valueType\": \"Integer\",\r\n       \"value\": {}      \r\n        }\r\n            \r\n      ],\r\n    \"attributes\": [],\r\n    \"displayNames\": [\r\n        {\r\n            \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n            \"languageCode\": \"de-DE\"\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"id\": \"{{propertyId7}}\",\r\n    \"dictionaryValues\": []\r\n        }",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/properties?id={{propertyId7}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "id",
															"value": "{{propertyId7}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Multivalue property with integer type to product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"isReadOnly\": false,\r\n    \"isManageable\": true,\r\n    \"isNew\": true,\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"{{categoryId2}}\",\r\n    \"name\": \"xapi_multivalue_integer2\",\r\n    \"required\": false,\r\n    \"dictionary\": false,\r\n    \"multivalue\": true,\r\n    \"multilanguage\": false,\r\n    \"hidden\": false,\r\n    \"valueType\": \"Integer\",\r\n    \"type\": \"Product\",\r\n    \"values\": [\r\n        {\r\n      \"propertyName\": \"xapi_multivalue_integer2\",\r\n      \"propertyId\": \"{{propertyId8}}\",\r\n      \"languageCode\": \"en-US\",\r\n      \"valueType\": \"Integer\",\r\n       \"value\": {}      \r\n        }\r\n            \r\n      ],\r\n    \"attributes\": [],\r\n    \"displayNames\": [\r\n        {\r\n            \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n            \"languageCode\": \"de-DE\"\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"id\": \"{{propertyId8}}\",\r\n    \"dictionaryValues\": []\r\n        }",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/properties?id={{propertyId8}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "id",
															"value": "{{propertyId8}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Multivalue property with integer type to Variation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"isReadOnly\": false,\r\n    \"isManageable\": true,\r\n    \"isNew\": true,\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"{{categoryId2}}\",\r\n    \"name\": \"xapi_multivalue_integer3\",\r\n    \"required\": false,\r\n    \"dictionary\": false,\r\n    \"multivalue\": true,\r\n    \"multilanguage\": false,\r\n    \"hidden\": false,\r\n    \"valueType\": \"Integer\",\r\n    \"type\": \"Variation\",\r\n    \"values\": [\r\n        {\r\n      \"propertyName\": \"xapi_multivalue_integer3\",\r\n      \"propertyId\": \"{{propertyId9}}\",\r\n      \"languageCode\": \"en-US\",\r\n      \"valueType\": \"Integer\",\r\n       \"value\": {}      \r\n        }\r\n            \r\n      ],\r\n    \"attributes\": [],\r\n    \"displayNames\": [\r\n        {\r\n            \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n            \"languageCode\": \"de-DE\"\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"id\": \"{{propertyId9}}\",\r\n    \"dictionaryValues\": []\r\n        }",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/properties?id={{propertyId9}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "id",
															"value": "{{propertyId9}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Multilanguage property to category",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"isReadOnly\": false,\r\n    \"isManageable\": true,\r\n    \"isNew\": false,\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n    \"name\": \"xapi_multilanguage\",\r\n    \"required\": false,\r\n    \"dictionary\": false,\r\n    \"multivalue\": false,\r\n    \"multilanguage\": true,\r\n    \"hidden\": false,\r\n    \"valueType\": \"ShortText\",\r\n    \"type\": \"Category\",\r\n    \"values\": [],\r\n    \"attributes\": [],\r\n    \"displayNames\": [\r\n        {\r\n            \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n            \"languageCode\": \"de-DE\"\r\n        }\r\n    ],\r\n    \"validationRules\": [],\r\n    \"isInherited\": false,\r\n    \"id\": \"2728a0e3-a83d-470c-9483-a1cb66d09126\",\r\n    \"dictionaryValues\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/properties?id={{propertyId3}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "id",
															"value": "{{propertyId3}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Add dictionary&multilanguage to product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"isReadOnly\": false,\r\n    \"isManageable\": true,\r\n    \"isNew\": true,\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"name\": \"Dictionary_multilang\",\r\n    \"required\": false,\r\n    \"dictionary\": true,\r\n    \"multivalue\": false,\r\n    \"multilanguage\": true,\r\n    \"hidden\": false,\r\n    \"valueType\": \"ShortText\",\r\n    \"type\": \"Product\",\r\n    \"values\": [],\r\n    \"attributes\": [],\r\n    \"displayNames\": [\r\n        {\r\n            \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n            \"languageCode\": \"de-DE\"\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"id\": \"dc84c1a9-3737-45a6-ad7f-5140e1b55718\",\r\n    \"dictionaryValues\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/properties?id={{propertyId4}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "id",
															"value": "{{propertyId4}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Add values to dictionary",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"values\": [],\r\n        \"isNew\": true,\r\n        \"propertyId\": \"dc84c1a9-3737-45a6-ad7f-5140e1b55718\",\r\n        \"alias\": \"a\",\r\n        \"sortOrder\": \"1\",\r\n        \"en-US\": \"a-en\",\r\n        \"de-DE\": \"a-de\",\r\n        \"localizedValues\": [\r\n            {\r\n                \"languageCode\": \"en-US\",\r\n                \"value\": \"a-en\"\r\n            },\r\n            {\r\n                \"languageCode\": \"de-DE\",\r\n                \"value\": \"a-de\"\r\n            }\r\n        ]\r\n    },\r\n            {\r\n            \"values\": [],\r\n            \"isNew\": true,\r\n            \"propertyId\": \"dc84c1a9-3737-45a6-ad7f-5140e1b55718\",\r\n            \"alias\": \"b\",\r\n            \"sortOrder\": \"2\",\r\n            \"en-US\": \"b-en\",\r\n            \"de-DE\": \"b-de\",\r\n            \"localizedValues\": [\r\n                {\r\n                    \"languageCode\": \"en-US\",\r\n                    \"value\": \"b-en\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\",\r\n                    \"value\": \"b-de\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/dictionaryitems",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"dictionaryitems"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add multivalue&multilanguage type",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"isReadOnly\": false,\r\n    \"isManageable\": true,\r\n    \"isNew\": true,\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n    \"name\": \"xapi_multivalue_multilang\",\r\n    \"required\": false,\r\n    \"dictionary\": false,\r\n    \"multivalue\": true,\r\n    \"multilanguage\": true,\r\n    \"hidden\": false,\r\n    \"valueType\": \"ShortText\",\r\n    \"type\": \"Category\",\r\n    \"values\": [],\r\n    \"attributes\": [],\r\n    \"displayNames\": [\r\n        {\r\n            \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n            \"languageCode\": \"de-DE\"\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"id\": \"4d74e9c3-51fc-4105-8808-068c9bba9e2f\",\r\n    \"dictionaryValues\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/properties?id={{propertyId5}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "id",
															"value": "{{propertyId5}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Add dictionary&multivalue&multilanguage type",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"isReadOnly\": false,\r\n    \"isManageable\": true,\r\n    \"isNew\": true,\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n    \"name\": \"xapi_dictionary_multivalue_multilang\",\r\n    \"required\": false,\r\n    \"dictionary\": true,\r\n    \"multivalue\": true,\r\n    \"multilanguage\": true,\r\n    \"hidden\": false,\r\n    \"valueType\": \"ShortText\",\r\n    \"type\": \"Category\",\r\n    \"values\": [],\r\n    \"attributes\": [],\r\n    \"displayNames\": [\r\n        {\r\n            \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n            \"languageCode\": \"de-DE\"\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"id\": \"89890fa1-6b01-45a6-ad8a-4622231cbfcf\",\r\n    \"dictionaryValues\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/properties?id={{propertyId6}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "id",
															"value": "{{propertyId6}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get properties",
									"item": [
										{
											"name": "Get properties with dictionary, cultureName, name and types",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C301982 get properties with dictionary,cultureName, name and types\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.properties.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\nproperties (storeId:\"{{storeId}}\", cultureName:\"{{cultureName}}\", filter:\"keyword:\", types:[PRODUCT, VARIATION])\r\n{\r\n  items\r\n  {\r\n    name\r\n    type\r\n    id\r\n    multivalue\r\n    propertyDictItems\r\n    {\r\n     totalCount\r\n      items\r\n      {\r\n        value\r\n      }\r\n    }\r\n  }\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get one property with dictionary items for specific culture",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C301983 get one property with dictionary items for specific culture\", function () {\r",
															"    var data = pm.response.json();\r",
															"    \r",
															"    pm.expect(data.data.property.propertyDictItems.items[0].value).to.equal(\"A\");\r",
															"    pm.expect(data.data.property.propertyDictItems.items[1].value).to.equal(\"B\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"   \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\nproperty (id:\"{{propertyId}}\", cultureName:\"{{cultureName}}\")\r\n{\r\npropertyDictItems\r\n{\r\nitems\r\n{\r\nvalue\r\n}\r\n}\r\n}\r\n} \r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get properties for specific category",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C301984 get properties for specific category\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.properties.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\nproperties (storeId:\"{{storeId}}\", filter:\"categoryId:{{categoryId2}}\")\r\n{\r\n  items\r\n  {\r\n    name\r\n    type\r\n    id\r\n    multivalue\r\n    \r\n    propertyDictItems\r\n    {\r\n     totalCount\r\n      items\r\n      {\r\n        value\r\n      }\r\n    }\r\n  }\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get properties for category",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C301988 get properties for category\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.category.properties).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\n  category (storeId:\"{{storeId}}\" id:\"{{categoryId2}}\", cultureName:\"de-DE\")\r\n  {\r\n    name\r\n    properties\r\n    {\r\n      name\r\n      value\r\n    }\r\n  }\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Set values for Multivalue_decimal type",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check values for multivalue_decimal type\", function () {\r",
															"\r",
															"pm.expect(pm.response.text()).to.include(\"xapi_multivalue_Decimal\");\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal3\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal2\"));\r",
															"  \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"parentId\": \"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n    \"code\": \"f7a8c\",\r\n    \"name\": \"Consumer camcorders\",\r\n    \"outline\": \"45d3fc9a913d4610a5c7d0470558c4b2/{{categoryId2}}\",\r\n    \"path\": \"Camcorders/Consumer camcorders\",\r\n    \"isVirtual\": false,\r\n    \"level\": 1,\r\n    \"priority\": 0,\r\n    \"isActive\": true,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\": \"a_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": true,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"787c3910-1585-4c99-bbd1-b9f7daa7d77e\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\": \"Brand\",\r\n            \"required\": true,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"name\": \"Marke\",\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"name\": \"Brand\",\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"43d14478-d142-4a65-956f-0a308d0c4ee8\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"Camcorder_Type\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Category\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"4af9a56f-fcf2-4a2d-b5bb-8b979ae38f9b\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\": \"csv_multilang\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"5db25a73-2c4b-42a9-9a63-91f87862568c\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"Features\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"1b91897a-19d4-41d9-97db-9b3b2bd3637b\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"LCD_Display_Size\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"dd90bcce-e838-4465-a61a-9bdec2844591\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"Media_Storage\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Category\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"db7111be-1deb-4ef2-be68-43e1f28a3f57\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\": \"multilang_1\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"name\": \"en\",\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"name\": \"de\",\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"name\": \"fr\",\r\n                    \"languageCode\": \"fr-FR\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"ad055523-413d-446e-afee-89651c3dcb96\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\": \"new_property\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"GeoPoint\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"name\": \"33\",\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"name\": \"22\",\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [\r\n                {\r\n                    \"isUnique\": false,\r\n                    \"regExp\": \"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n                    \"propertyId\": \"f7dd4622-a0a6-45b9-a41b-3fdfba10b4ab\",\r\n                    \"id\": \"1eeca5cc-3d23-4532-9402-2cfb239ab96d\"\r\n                }\r\n            ],\r\n            \"validationRule\": {\r\n                \"isUnique\": false,\r\n                \"regExp\": \"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n                \"propertyId\": \"f7dd4622-a0a6-45b9-a41b-3fdfba10b4ab\",\r\n                \"id\": \"1eeca5cc-3d23-4532-9402-2cfb239ab96d\"\r\n            },\r\n            \"isInherited\": true,\r\n            \"id\": \"f7dd4622-a0a6-45b9-a41b-3fdfba10b4ab\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"Optical_Zoom\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Number\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"7baae6dd-3d53-4c6f-b116-2b6ebfa06790\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"Sensor_Size\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"dc0ebafe-567e-4132-8eb5-a9b695eb09c6\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"Video_Resolution\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"1da6664f-9e0e-433a-98f3-ca0cae6440b6\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\": \"xapi_dictionary\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"d21b2008-c5be-4050-a74f-355b0d7012f4\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"xapi_multivalue_Decimal\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Number\",\r\n            \"type\": \"Category\",\r\n            \"values\": [\r\n                {\r\n                    \"value\": \"{{decimal3}}\",\r\n                    \"isInherited\": false\r\n                },\r\n                {\r\n                    \"value\": \"{{decimal2}}\"\r\n                }\r\n            ],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"{{propertyId2}}\"\r\n        }\r\n    ],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"Category\",\r\n    \"seoInfos\": [\r\n        {\r\n            \"semanticUrl\": \"consumer-camcorders\",\r\n            \"objectId\": \"{{categoryId2}}\",\r\n            \"objectType\": \"Category\",\r\n            \"isActive\": true,\r\n            \"languageCode\": \"en-US\",\r\n            \"id\": \"de04cdb70d0145ea8b6c68e22e054cf2\"\r\n        }\r\n    ],\r\n    \"descriptions\": [],\r\n    \"imgSrc\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/f7a8c/1023206.jpg\",\r\n    \"images\": [\r\n        {\r\n            \"relativeUrl\": \"catalog/f7a8c/1023206.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/f7a8c/1023206.jpg\",\r\n            \"sortOrder\": 0,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1023206.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1023206.jpg\",\r\n                    \"semanticUrl\": \"catalog/f7a8c/1023206.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"dadd60f8d2b3498383f72b37814aef12\"\r\n        }\r\n    ],\r\n    \"outlines\": [\r\n        {\r\n            \"items\": [\r\n                {\r\n                    \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n                    \"seoObjectType\": \"Catalog\",\r\n                    \"name\": \"Electronics\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [],\r\n                    \"name\": \"Camcorders\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"{{categoryId2}}\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [\r\n                        {\r\n                            \"semanticUrl\": \"consumer-camcorders\",\r\n                            \"objectId\": \"{{categoryId2}}\",\r\n                            \"objectType\": \"Category\",\r\n                            \"isActive\": true,\r\n                            \"languageCode\": \"en-US\",\r\n                            \"id\": \"de04cdb70d0145ea8b6c68e22e054cf2\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"Consumer camcorders\",\r\n                    \"hasVirtualParent\": false\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2015-10-06T22:39:19.097Z\",\r\n    \"modifiedDate\": \"2022-03-29T15:35:23.5312856Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{categoryId2}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"categories"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get property with Multilvalue_Decimal type",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C301993 Check property with Multilvalue type\", function () {\r",
															"    var data = pm.response.json();\r",
															"pm.expect(pm.response.text()).to.include(\"xapi_multivalue_Decimal\");\r",
															"pm.expect(data.errors).to.be.undefined;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\n  category (storeId:\"{{storeId}}\" id:\"{{categoryId2}}\", cultureName:\"{{cultureName}}\")\r\n  {\r\n    name\r\n    properties\r\n    {\r\n      name\r\n      value\r\n    }\r\n  }\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Set values for Multivalue_integer type",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check values for Multivalue integer type\", function () {\r",
															"\r",
															"pm.expect(pm.response.text()).to.include(\"xapi_multivalue_integer\");\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));  \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"parentId\": \"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n    \"code\": \"f7a8c\",\r\n    \"name\": \"Consumer camcorders\",\r\n    \"outline\": \"45d3fc9a913d4610a5c7d0470558c4b2/{{categoryId2}}\",\r\n    \"path\": \"Camcorders/Consumer camcorders\",\r\n    \"isVirtual\": false,\r\n    \"level\": 1,\r\n    \"priority\": 0,\r\n    \"isActive\": true,\r\n    \"properties\": [\r\n         {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n      \"categoryId\": \"{{categoryId2}}\",\r\n      \"name\": \"xapi_multivalue_integer\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": true,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Integer\",\r\n      \"type\": \"Category\",\r\n      \"values\": [\r\n        {\r\n          \"value\": {{int1}},\r\n          \"isInherited\": false\r\n        },\r\n        {\r\n          \"value\": {{int2}}\r\n        },\r\n        {\r\n          \"value\": {{int3}}\r\n        }\r\n      ],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": false,\r\n      \"id\": \"{{propertyId7}}\"\r\n    }\r\n                \r\n    ],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"Category\",\r\n    \"seoInfos\": [\r\n        {\r\n            \"semanticUrl\": \"consumer-camcorders\",\r\n            \"objectId\": \"{{categoryId2}}\",\r\n            \"objectType\": \"Category\",\r\n            \"isActive\": true,\r\n            \"languageCode\": \"en-US\",\r\n            \"id\": \"de04cdb70d0145ea8b6c68e22e054cf2\"\r\n        }\r\n    ],\r\n    \"descriptions\": [],\r\n    \"imgSrc\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/f7a8c/1023206.jpg\",\r\n    \"images\": [\r\n        {\r\n            \"relativeUrl\": \"catalog/f7a8c/1023206.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/f7a8c/1023206.jpg\",\r\n            \"sortOrder\": 0,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1023206.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1023206.jpg\",\r\n                    \"semanticUrl\": \"catalog/f7a8c/1023206.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"dadd60f8d2b3498383f72b37814aef12\"\r\n        }\r\n    ],\r\n    \"outlines\": [\r\n        {\r\n            \"items\": [\r\n                {\r\n                    \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n                    \"seoObjectType\": \"Catalog\",\r\n                    \"name\": \"Electronics\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [],\r\n                    \"name\": \"Camcorders\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"{{categoryId2}}\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [\r\n                        {\r\n                            \"semanticUrl\": \"consumer-camcorders\",\r\n                            \"objectId\": \"{{categoryId2}}\",\r\n                            \"objectType\": \"Category\",\r\n                            \"isActive\": true,\r\n                            \"languageCode\": \"en-US\",\r\n                            \"id\": \"de04cdb70d0145ea8b6c68e22e054cf2\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"Consumer camcorders\",\r\n                    \"hasVirtualParent\": false\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2015-10-06T22:39:19.097Z\",\r\n    \"modifiedDate\": \"2022-03-29T15:35:23.5312856Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{categoryId2}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"categories"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get property with multivalue integer type for category",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"T682176 Check property with multivalue integer type for category\", function () {\r",
															"    var data = pm.response.json();\r",
															"\r",
															"pm.expect(pm.response.text()).to.include(\"xapi_multivalue_integer\");\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\")); \r",
															"pm.expect(data.errors).to.be.undefined;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\n  category (storeId:\"{{storeId}}\" id:\"{{categoryId2}}\", cultureName:\"{{cultureName}}\")\r\n  {\r\n    name\r\n    properties\r\n    {\r\n      name\r\n      value\r\n    }\r\n  }\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Set values for Multivalue_integer type to Product$Variaton",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check values for Multivalue_integer type to Product$Variaton\", function () {\r",
															"\r",
															"pm.expect(pm.response.text()).to.include(\"xapi_multivalue_integer2\");\r",
															"pm.expect(pm.response.text()).to.include(\"xapi_multivalue_integer3\");\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));   \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"PAHCVX870\",\r\n    \"name\": \"Panasonic HC-VX870K 4K Ultra HD Camcorder\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n    \"outline\": \"45d3fc9a913d4610a5c7d0470558c4b2/53e239451c844442a3b2fe9aa82d95c8\",\r\n    \"path\": \"Camcorders/Consumer camcorders\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 1,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2015-08-14T13:07:10.46Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n     \r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n            \"name\": \"xapi_multivalue_integer2\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Integer\",\r\n            \"type\": \"Product\",\r\n            \"values\": [\r\n                {\r\n                    \"value\": {{int3_update}},\r\n                    \"isInherited\": false\r\n                },\r\n                {\r\n                    \"value\": {{int2_update}}\r\n                }\r\n            ],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"{{propertyId8}}\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n            \"name\": \"xapi_multivalue_integer3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Integer\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [\r\n                {\r\n                    \"value\": {{int1}},\r\n                    \"isInherited\": false\r\n                },\r\n                {\r\n                    \"value\": {{int_update}}\r\n                }\r\n            ],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"{{propertyId9}}\"\r\n        }\r\n    ],\r\n    \"imgSrc\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/PAHCVX870/1420483149000_1109406.jpg\",\r\n    \"images\": [\r\n        {\r\n            \"relativeUrl\": \"catalog/PAHCVX870/1420483149000_1109406.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/PAHCVX870/1420483149000_1109406.jpg\",\r\n            \"sortOrder\": 0,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1420483149000_1109406.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1420483149000_1109406.jpg\",\r\n                    \"semanticUrl\": \"catalog/PAHCVX870/1420483149000_1109406.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"9ecae97228b84b18a8a1acc383950946\"\r\n        },\r\n        {\r\n            \"relativeUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451986.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/PAHCVX870/1420483204000_IMG_451986.jpg\",\r\n            \"sortOrder\": 1,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1420483204000_IMG_451986.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1420483204000_IMG_451986.jpg\",\r\n                    \"semanticUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451986.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"f38526209b20453eb95ca8d4bf4900bf\"\r\n        },\r\n        {\r\n            \"relativeUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451987.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/PAHCVX870/1420483204000_IMG_451987.jpg\",\r\n            \"sortOrder\": 2,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1420483204000_IMG_451987.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1420483204000_IMG_451987.jpg\",\r\n                    \"semanticUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451987.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"7a57498062e14553b66f90f173616ca9\"\r\n        },\r\n        {\r\n            \"relativeUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451988.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/PAHCVX870/1420483204000_IMG_451988.jpg\",\r\n            \"sortOrder\": 3,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1420483204000_IMG_451988.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1420483204000_IMG_451988.jpg\",\r\n                    \"semanticUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451988.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"ad76c13a5e634f6887e2e2ec91efa02a\"\r\n        },\r\n        {\r\n            \"relativeUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451989.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/PAHCVX870/1420483204000_IMG_451989.jpg\",\r\n            \"sortOrder\": 4,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1420483204000_IMG_451989.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1420483204000_IMG_451989.jpg\",\r\n                    \"semanticUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451989.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"5ffc834e60b341cea08d59e0ec49dc49\"\r\n        },\r\n        {\r\n            \"relativeUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451990.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/PAHCVX870/1420483204000_IMG_451990.jpg\",\r\n            \"sortOrder\": 5,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1420483204000_IMG_451990.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1420483204000_IMG_451990.jpg\",\r\n                    \"semanticUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451990.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"a4e60184243946d994e1ef0ff503c6aa\"\r\n        },\r\n        {\r\n            \"relativeUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451991.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/PAHCVX870/1420483204000_IMG_451991.jpg\",\r\n            \"sortOrder\": 6,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1420483204000_IMG_451991.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1420483204000_IMG_451991.jpg\",\r\n                    \"semanticUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451991.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"040da2ceefa440319c8961d26fa10ee5\"\r\n        },\r\n        {\r\n            \"relativeUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451992.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/PAHCVX870/1420483204000_IMG_451992.jpg\",\r\n            \"sortOrder\": 7,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1420483204000_IMG_451992.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1420483204000_IMG_451992.jpg\",\r\n                    \"semanticUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451992.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"2667fd27345c4592bd47ca84b77b05c6\"\r\n        },\r\n        {\r\n            \"relativeUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451993.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/PAHCVX870/1420483204000_IMG_451993.jpg\",\r\n            \"sortOrder\": 8,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1420483204000_IMG_451993.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1420483204000_IMG_451993.jpg\",\r\n                    \"semanticUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451993.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"c4db43c8a4944aaca6464158837ab2fc\"\r\n        },\r\n        {\r\n            \"relativeUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451994.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/PAHCVX870/1420483204000_IMG_451994.jpg\",\r\n            \"sortOrder\": 9,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1420483204000_IMG_451994.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1420483204000_IMG_451994.jpg\",\r\n                    \"semanticUrl\": \"catalog/PAHCVX870/1420483204000_IMG_451994.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"8bd47e7283eb4849996318263347856d\"\r\n        }\r\n    ],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n        {\r\n            \"semanticUrl\": \"panasonic-hc-vx870k-4k-ultra-hd-camcorder\",\r\n            \"objectId\": \"b4a2edc523db4114a5e8ccbff5747667\",\r\n            \"objectType\": \"CatalogProduct\",\r\n            \"isActive\": true,\r\n            \"languageCode\": \"en-US\",\r\n            \"id\": \"c9b109921206419ca3501021d3604c18\"\r\n        }\r\n    ],\r\n    \"reviews\": [\r\n        {\r\n            \"content\": \"<ul class=\\\"top-section-list\\\">&#10;<li class=\\\"top-section-list-item\\\">4K Ultra HD Video and 25.9MP Stills</li>&#10;<li class=\\\"top-section-list-item\\\">1/2.3&#34; Back-Illuminated MOS Sensor</li>&#10;<li class=\\\"top-section-list-item\\\">20x Optical Zoom / 50x Intelligent Zoom</li>&#10;<li class=\\\"top-section-list-item\\\">HYBRID OIS 5-Axis Image Stabilization</li>&#10;<li class=\\\"top-section-list-item\\\">1080p Slow Motion Video up to 240 fps</li>&#10;<li class=\\\"top-section-list-item\\\">HDR (High Dynamic Range) Video Recording</li>&#10;<li class=\\\"top-section-list-item\\\">Capture 4K Frame Grabs from Video</li>&#10;<li class=\\\"top-section-list-item\\\">Twin Cam with Wi-Fi and NFC Connectivity</li>&#10;<li class=\\\"top-section-list-item\\\">IR Night Mode</li>&#10;</ul>\",\r\n            \"reviewType\": \"QuickReview\",\r\n            \"languageCode\": \"en-US\",\r\n            \"isInherited\": false,\r\n            \"id\": \"70a40ba3b6754d6a93d0273e259ff8cf\"\r\n        },\r\n        {\r\n            \"content\": \"<table class=\\\"specTable\\\" border=\\\"1\\\">&#10;<tbody>&#10;<tr>&#10;<th class=\\\"specHeader Header\\\" colspan=\\\"2\\\">&#10;<a class=\\\"c27 fs22\\\">Camera</a>&#10;</th>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Sensor </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 1x 18.91 Megapixel 1/2.3&#34;  MOS Sensor </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Backside Illumination </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> Yes </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Pixel Gross </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 18,910,000 </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Effective Pixels </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;8.3 @ Video 16:9&#10;<br/>&#10;6.1 @ Video 16:9&#10;<br/>&#10;8.3 @ Photo 16:9&#10;<br/>&#10;7 @ Photo 3:2&#10;<br/>&#10;6.2 @ Photo 4:3&#10;</td>&#10;</tr>&#10;</tbody>&#10;</table>&#10;<table class=\\\"specTable\\\" border=\\\"1\\\">&#10;<tbody>&#10;<tr>&#10;<th class=\\\"specHeader Header\\\" colspan=\\\"2\\\">&#10;<a class=\\\"c27 fs22\\\">Optics</a>&#10;</th>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Focal Length </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 4.08 - 81.6 mm </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> 35mm Equivalent Focal Length </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;30.8 - 626 @ Aspect Ratio: 16:9 4K&#10;<br/>&#10;37 - 752 @ Aspect Ratio: 16:9 Full HD-Level Shot Function Off or Normal&#10;<br/>&#10;30.8 - 626 @ Aspect Ratio: 16:9 Photo&#10;<br/>&#10;34.5 - 690.3 @ Aspect Ratio: 3:2 Photo&#10;<br/>&#10;37.6 - 752.8 @ Aspect Ratio: 4:3 Photo&#10;</td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Maximum Aperture </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> f/ 1.8 - f/ 3.6 </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Zoom </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;Optical: 20x&#10;<br/>&#10;Intelligent: 25x 4K&#10;<br/>&#10;Intelligent: 40x (in HD)&#10;<br/>&#10;Digital: 60x&#10;<br/>&#10;Digital: 1500x&#10;</td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Filter Size </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 49 mm </td>&#10;</tr>&#10;</tbody>&#10;</table>&#10;<table class=\\\"specTable\\\" border=\\\"1\\\">&#10;<tbody>&#10;<tr>&#10;<th class=\\\"specHeader Header\\\" colspan=\\\"2\\\">&#10;<a class=\\\"c27 fs22\\\">Recording</a>&#10;</th>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> System </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> NTSC </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Recording Media </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> SD/SDHC/SDXC   </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Video Format </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;<u>&#10;<b>UltraHD</b>&#10;</u>&#10;<br/>&#10;<b>MP4</b>&#10;<br/>&#10;3840 x 2160p / 30 fps (72 Mbps)&#10;<br/>&#10;<u>&#10;<b>High Definition</b>&#10;</u>&#10;<br/>&#10;<b>MP4</b>&#10;<br/>&#10;1920 x 1080p / 60 fps (50 Mbps)&#10;<br/>&#10;1920 x 1080p / 60 fps (28 Mbps)&#10;<br/>&#10;1280 x 720p / 60 fps (9 Mbps)&#10;<br/>&#10;<u></u>&#10;<b>AVCHD Progressive</b>&#10;<br/>&#10;1920 x 1080p / 60 fps (28 Mbps)&#10;<br/>&#10;<u></u>&#10;<b>AVCHD</b>&#10;<br/>&#10;1920 x 1080i / 60 fps (24 Mbps)&#10;<br/>&#10;1920 x 1080i / 60 fps (17 Mbps)&#10;<br/>&#10;1920 x 1080i / 60 fps (13 Mbps)&#10;<br/>&#10;1920 x 1080i / 60 fps (5 Mbps)&#10;<br/>&#10;<u></u>&#10;<b>iFrame</b>&#10;<br/>&#10;960 x 540p / 30 fps (28 Mbps)&#10;</td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Aspect Ratio </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 16:9 </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Slow Motion Mode </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 120 fps recorded @ 1920 x 1080p </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Still Image Resolution </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;JPEG: 25.9 Megapixel, 6784 x 3816 (16:9)&#10;<br/>&#10;JPEG: 14 Megapixel, 4992 x 2808 (16:9)&#10;<br/>&#10;JPEG: 2.1 Megapixel, 1920 x 1080 (16:9)&#10;<br/>&#10;JPEG: 20 Megapixel, 5472 x 3684 (3:2)&#10;<br/>&#10;JPEG: 10.6 Megapixel, 3984 x 2656 (3:2)&#10;<br/>&#10;JPEG: 2.0 Megapixel, 1728 x 1152 (3:2)&#10;<br/>&#10;JPEG: 20.4 Megapixel, 5216 x 3912 (4:3)&#10;<br/>&#10;JPEG: 10.9 Megapixel, 3808 x 2856 (4:3)&#10;<br/>&#10;JPEG: .3 Megapixel, 640 x 480&#10;</td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Channels </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 5.1-Channel </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Audio Format </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;AAC&#10;<br/>&#10;Dolby Digital 2ch&#10;<br/>&#10;Dolby Digital 5.1&#10;</td>&#10;</tr>&#10;</tbody>&#10;</table>&#10;<table class=\\\"specTable\\\" border=\\\"1\\\">&#10;<tbody>&#10;<tr>&#10;<th class=\\\"specHeader Header\\\" colspan=\\\"2\\\">&#10;<a class=\\\"c27 fs22\\\">Display</a>&#10;</th>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Display Type </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> LCD </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Touchscreen </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> Yes </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Screen Size </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 3&#34; </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Pixel Count </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 460,800 </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Rotation </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;Opening Angle: 90&#176;&#10;<br/>&#10;Turning Angle: 270&#176;&#10;</td>&#10;</tr>&#10;</tbody>&#10;</table>&#10;<table class=\\\"specTable\\\" border=\\\"1\\\">&#10;<tbody>&#10;<tr>&#10;<th class=\\\"specHeader Header\\\" colspan=\\\"2\\\">&#10;<a class=\\\"c27 fs22\\\">Exposure Control</a>&#10;</th>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Shutter Speed </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 1/30-1/8000 sec </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Shooting Modes </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;Auto&#10;<br/>&#10;Low Light&#10;<br/>&#10;M (Manual)&#10;<br/>&#10;Miniature Effect&#10;<br/>&#10;Night&#10;<br/>&#10;Time-Lapse Movie&#10;</td>&#10;</tr>&#10;</tbody>&#10;</table>&#10;<table class=\\\"specTable\\\" border=\\\"1\\\">&#10;<tbody>&#10;<tr>&#10;<th class=\\\"specHeader Header\\\" colspan=\\\"2\\\">&#10;<a class=\\\"c27 fs22\\\">Features</a>&#10;</th>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Image Stabilization </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> Optical &amp; Digital </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Scene Modes </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> Preset: Yes </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Lux </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;1400 (Standard Illumination)&#10;<br/>&#10;2 (Low Light Scene Mode)&#10;<br/>&#10;1 (Night Mode (Color))&#10;<br/>&#10;0 (Night Mode)&#10;</td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> White Balance Modes </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;Auto&#10;<br/>&#10;Cloudy&#10;<br/>&#10;Custom&#10;<br/>&#10;Daylight&#10;<br/>&#10;Indoor 1&#10;<br/>&#10;Indoor 2&#10;</td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Creative Effects </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> Yes </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Built-in Mic </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> Yes </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Built-in Speaker </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> Yes </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Built-in Light/Flash </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;Light - Yes&#10;<br/>&#10;Flash - Yes&#10;</td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Wi-Fi </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> Yes, 802.11b/g/n </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Accessory Shoe </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 1x Cold </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Tripod Mount </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 1/4&#34; - 20 </td>&#10;</tr>&#10;</tbody>&#10;</table>&#10;<table class=\\\"specTable\\\" border=\\\"1\\\">&#10;<tbody>&#10;<tr>&#10;<th class=\\\"specHeader Header\\\" colspan=\\\"2\\\">&#10;<a class=\\\"c27 fs22\\\">Input/Output Connectors</a>&#10;</th>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Outputs </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;1x HDMI D (Micro)&#10;<br/>&#10;1x A/V&#10;<br/>&#10;1x USB 2.0&#10;</td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Microphone Input </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> Yes </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Headphone Jack </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> Yes </td>&#10;</tr>&#10;</tbody>&#10;</table>&#10;<table class=\\\"specTable\\\" border=\\\"1\\\">&#10;<tbody>&#10;<tr>&#10;<th class=\\\"specHeader Header\\\" colspan=\\\"2\\\">&#10;<a class=\\\"c27 fs22\\\">General</a>&#10;</th>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Languages </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;English&#10;<br/>&#10;French&#10;<br/>&#10;Spanish&#10;<br/>&#10;Traditional Chinese&#10;</td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Battery </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;Rechargeable Battery Pack, 3.6 VDC, 1940 mAh,&#10;<br/>&#10;Providing up to 1 Hours per Charge&#10;</td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Charging Method </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;AC Adapter&#10;<br/>&#10;USB&#10;</td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Power Consumption </td>&#10;<td class=\\\"specDetail c28 fs14\\\">&#10;Recording:7.6 W&#10;<br/>&#10;Charging:7.7 W&#10;</td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Dimensions (WxHxD) </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 2.6 x 2.9 x 5.5&#34; / 65.0 x 73.0 x 139.0 mm </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Weight </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 12.45 oz / 353 g </td>&#10;</tr>&#10;</tbody>&#10;</table>&#10;<table class=\\\"specTable\\\" border=\\\"1\\\">&#10;<tbody>&#10;<tr>&#10;<th class=\\\"specHeader Header\\\" colspan=\\\"2\\\">&#10;<a class=\\\"c27 fs22\\\">Packaging Info</a>&#10;</th>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Package Weight </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 1.9 lb </td>&#10;</tr>&#10;<tr>&#10;<td class=\\\"specTopic c28 fs14 bold\\\"> Box Dimensions (LxWxH) </td>&#10;<td class=\\\"specDetail c28 fs14\\\"> 8.8 x 5.9 x 4.1&#34; </td>&#10;</tr>&#10;</tbody>&#10;</table>\",\r\n            \"reviewType\": \"FullReview\",\r\n            \"languageCode\": \"en-US\",\r\n            \"isInherited\": false,\r\n            \"id\": \"7cd43764c2264550b6cdaec6b1029cd8\"\r\n        },\r\n        {\r\n            \"content\": \"<p class=\\\"ov-desc\\\">&#10;Not only can you capture Ultra HD 4K (3840 x 2160) with the&#10;<b>HC-VX870 4K Ultra HD Camcorder</b>&#10;from&#10;<b>Panasonic</b>&#10;, but you can superimpose a secondary video image from your smartphone's camera via a Wi-Fi connection. In this way, covering two camera angles at once within a single recording becomes possible. Other notable features include a 20x optical zoom lens with a 29.5 to 626mm equivalent focal length - giving you a wide angle when zoomed out, a substantial amount of telephoto when zoomed in, and a lot to work with in between. For slowing fast action, the HC-VX870 captures 120 fps native slow-motion at 1080p resolution, which can be slowed down even further using in-camera interpolation - giving you a 240 fps final video.&#10;<br/>&#10;<br/>&#10;Through their lens design partnership with Leica, Panasonic incorporated a Leica Dicomar 20x optical zoom lens with four separate optical groups and a maximum aperture of f/1.8. To keep excessive image vibration to a minimum, for steadier handheld shooting, the HC-VX870K features Panasonic's HYBRID O.I.S.+, which combines optical and digital image stabilization to provide 5-axis correction. Adjustable settings allow you to find a stabilization mode most appropriate for the kind of shooting you are doing. From OFF for tripod work, to Normal for regular handheld work, all the way up to Strong for those times when things really get shaky.&#10;<br/>&#10;<br/>&#10;The HC-VX870's Wi-Fi does more than let you capture video from your phone's camera as a secondary camera angle. You can preview a live image on your mobile device using the Panasonic Image App and change camera settings. If the camera has Internet access, you can even upload web-friendly copies of videos and photos directly to social media websites. Plus, there's a Baby Monitor function which lets you use the camera like an IP surveillance camera, viewing a remote feed across the Internet.&#10;</p>&#10;<div class=\\\"sectionHeaders js-hiddenFeatures\\\">&#10;<dl>&#10;<dt class=\\\"c28 fs18 bold\\\"> Twin Camera Operation </dt>&#10;<dd class=\\\"c28\\\"> The HC-VX870 you can connect to your smartphone via Wi-Fi and use that as the secondary camera. With this functionality you can shoot from alternate distances or angles for a variety of picture-in-picture images. </dd>&#10;</dl>&#10;<dl>&#10;<dt class=\\\"c28 fs18 bold\\\"> HDR (High Dynamic Range) Movie Mode </dt>&#10;<dd class=\\\"c28\\\"> By combining two images taken with different exposure times, the HDR Movie function suppresses blown highlights and blocked shadows for crisper, clearer videos. With HDR you can maintain gradation in your images in difficult shooting situations, like when your subject is back-lit. </dd>&#10;</dl>&#10;<dl>&#10;<dt class=\\\"c28 fs18 bold\\\"> Baby Calendar / Stop-Motion Animation Assist </dt>&#10;<dd class=\\\"c28\\\"> Set the baby's name and birthday to display thumbnail images of scenes recorded on and around that date, making it easy to find the scenes you want. By moving the subject slightly and shooting still images, you can create a unique animated slideshow. Previously taken photos are displayed with an onion skin effect for easy layering. </dd>&#10;</dl>&#10;<dl>&#10;<dt class=\\\"c28 fs18 bold\\\"> Creative Control </dt>&#10;<dd class=\\\"c28\\\"> Built-in filter effects including Miniature, 8mm Movie, Silent Movie, and Time Lapse Recording let you match your video recordings to the shooting situation. </dd>&#10;</dl>&#10;<dl>&#10;<dt class=\\\"c28 fs18 bold\\\"> Full-HD Slow Motion Video </dt>&#10;<dd class=\\\"c28\\\"> The HC-VX870K records Full-HD (1920 x 1080) video at 120 fps. For a more dramatic slow motion effect the of the Crystal Engine's Intelligent Frame Creation interpolates frames to achieve an equivalent of 240 fps. You can easily switch to slow motion while recording with a simple touch on the LCD screen. </dd>&#10;</dl>&#10;<dl>&#10;<dt class=\\\"c28 fs18 bold\\\"> High-Speed Precision Autofocus </dt>&#10;<dd class=\\\"c28\\\"> The image sensor has a 60 fps readout enabling quick focusing speed, stability, and tracking performance. </dd>&#10;</dl>&#10;<dl>&#10;<dt class=\\\"c28 fs18 bold\\\"> Level Shot Function </dt>&#10;<dd class=\\\"c28\\\"> Level Shot automatically detects and corrects tilting in images. It can be adjusted to three different levels-OFF, Normal or Strong-depending on shooting conditions. </dd>&#10;</dl>&#10;<dl>&#10;<dt class=\\\"c28 fs18 bold\\\"> 5-Axis HYBRID OIS </dt>&#10;<dd class=\\\"c28\\\"> Stabilized on 5 axes (pan, tilt, and roll axes, plus horizontal and vertical directions), the HYBRID OIS suppresses blurring in your videos when not using a tripod or other stabilizer. </dd>&#10;</dl>&#10;<dl>&#10;<dt class=\\\"c28 fs18 bold\\\"> Multi-Manual Dial </dt>&#10;<dd class=\\\"c28\\\">&#10;Several in-camera functions can be controlled by the Multi-Manual Dial these features include:&#10;<ul>&#10;<li>Focus</li>&#10;<li>White Balance</li>&#10;<li>Shutter Speed</li>&#10;<li>Iris</li>&#10;<li>Sharpness</li>&#10;<li>Color Saturation</li>&#10;<li>Brightness</li>&#10;</ul>&#10;</dd>&#10;</dl>&#10;<dl>&#10;<dt class=\\\"c28 fs18 bold\\\"> Wi-Fi Functionality </dt>&#10;<dd class=\\\"c28\\\">&#10;<ul>&#10;<li>One-touch Connection - NFC lets you instantly connect a smartphone or tablet to the camcorder with just one touch. Even without an NFC phone, QR codes are provided to make Wi-Fi settings.</li>&#10;<li>Remote Shooting / Remote View - The &#34;Panasonic Image App&#34; lets you use a smartphone or tablet as a real-time remote to control the camcorder from a distance. View photos and video directly from the camcorder on a smartphone or tablet, and upload to a social networking site.</li>&#10;<li>Real-Time Broadcasting - You can live-stream events on USTREAM as they are being recorded in Full-HD resolution (requires a wireless access point).</li>&#10;<li>Baby Monitor - Check on the baby anytime from anywhere with a smartphone or tablet. Push Notification sends an instant alert when the audio sensor detects the baby waking or crying (requires a wireless access point).</li>&#10;<li>Home Monitoring - When you are away from home, your camcorder can record high-quality live video and you monitor and speak to your family or pets at home from your smartphone or tablet.</li>&#10;<li>Auto Transfer (Wireless PC Copy) - Images are transferred from your camcorder to your PC via the wireless access point at home.</li>&#10;<li>Highlight Playback and Easy Share - You can enjoy Highlight Playback with a smartphone or tablet right after shooting. Favorite scenes can be shared on SNS with simple drag and drop operation.</li>&#10;<li>Wireless TV Playback - An access point at home can be used to transfer data wirelessly to the TV or a tablet in the living room, or other rooms in the house (requires a wireless access point).</li>&#10;</ul>&#10;</dd>&#10;</dl>&#10;</div>&#10;\",\r\n            \"reviewType\": \"FullReview\",\r\n            \"languageCode\": \"en-US\",\r\n            \"isInherited\": false,\r\n            \"id\": \"f220289229914646ba004b42a72c69b0\"\r\n        }\r\n    ],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n        {\r\n            \"items\": [\r\n                {\r\n                    \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n                    \"seoObjectType\": \"Catalog\",\r\n                    \"name\": \"Electronics\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [],\r\n                    \"name\": \"Camcorders\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [\r\n                        {\r\n                            \"semanticUrl\": \"consumer-camcorders\",\r\n                            \"objectId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n                            \"objectType\": \"Category\",\r\n                            \"isActive\": true,\r\n                            \"languageCode\": \"en-US\",\r\n                            \"id\": \"de04cdb70d0145ea8b6c68e22e054cf2\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"Consumer camcorders\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"b4a2edc523db4114a5e8ccbff5747667\",\r\n                    \"seoObjectType\": \"CatalogProduct\",\r\n                    \"seoInfos\": [\r\n                        {\r\n                            \"semanticUrl\": \"panasonic-hc-vx870k-4k-ultra-hd-camcorder\",\r\n                            \"objectId\": \"b4a2edc523db4114a5e8ccbff5747667\",\r\n                            \"objectType\": \"CatalogProduct\",\r\n                            \"isActive\": true,\r\n                            \"languageCode\": \"en-US\",\r\n                            \"id\": \"c9b109921206419ca3501021d3604c18\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"Panasonic HC-VX870K 4K Ultra HD Camcorder\",\r\n                    \"hasVirtualParent\": false\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2015-10-06T22:39:29.843Z\",\r\n    \"modifiedDate\": \"2022-04-01T15:01:07.2672139Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"b4a2edc523db4114a5e8ccbff5747667\",\r\n    \"_priority\": 0\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Set values to multilanguage property",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Check values for multilanguage property\", function () {\r",
															"\r",
															"pm.expect(pm.response.text()).to.include(\"xapi_multilanguage\");\r",
															"pm.expect(pm.response.text()).to.include(\"lang-en\");\r",
															"pm.expect(pm.response.text()).to.include(\"lang-de\");\r",
															"  \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"parentId\": \"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n    \"code\": \"f7a8c\",\r\n    \"name\": \"Consumer camcorders\",\r\n    \"outline\": \"45d3fc9a913d4610a5c7d0470558c4b2/{{categoryId2}}\",\r\n    \"path\": \"Camcorders/Consumer camcorders\",\r\n    \"isVirtual\": false,\r\n    \"level\": 1,\r\n    \"priority\": 0,\r\n    \"isActive\": true,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\": \"a_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": true,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"787c3910-1585-4c99-bbd1-b9f7daa7d77e\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\": \"Brand\",\r\n            \"required\": true,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"name\": \"Marke\",\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"name\": \"Brand\",\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"43d14478-d142-4a65-956f-0a308d0c4ee8\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"Camcorder_Type\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Category\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"4af9a56f-fcf2-4a2d-b5bb-8b979ae38f9b\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\": \"csv_multilang\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"5db25a73-2c4b-42a9-9a63-91f87862568c\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"Features\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"1b91897a-19d4-41d9-97db-9b3b2bd3637b\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"LCD_Display_Size\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"dd90bcce-e838-4465-a61a-9bdec2844591\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"Media_Storage\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Category\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"db7111be-1deb-4ef2-be68-43e1f28a3f57\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\": \"multilang_1\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"name\": \"en\",\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"name\": \"de\",\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"name\": \"fr\",\r\n                    \"languageCode\": \"fr-FR\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"ad055523-413d-446e-afee-89651c3dcb96\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\": \"new_property\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"GeoPoint\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"name\": \"33\",\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"name\": \"22\",\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [\r\n                {\r\n                    \"isUnique\": false,\r\n                    \"regExp\": \"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n                    \"propertyId\": \"f7dd4622-a0a6-45b9-a41b-3fdfba10b4ab\",\r\n                    \"id\": \"1eeca5cc-3d23-4532-9402-2cfb239ab96d\"\r\n                }\r\n            ],\r\n            \"validationRule\": {\r\n                \"isUnique\": false,\r\n                \"regExp\": \"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n                \"propertyId\": \"f7dd4622-a0a6-45b9-a41b-3fdfba10b4ab\",\r\n                \"id\": \"1eeca5cc-3d23-4532-9402-2cfb239ab96d\"\r\n            },\r\n            \"isInherited\": true,\r\n            \"id\": \"f7dd4622-a0a6-45b9-a41b-3fdfba10b4ab\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"Optical_Zoom\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Number\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"7baae6dd-3d53-4c6f-b116-2b6ebfa06790\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"Sensor_Size\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"dc0ebafe-567e-4132-8eb5-a9b695eb09c6\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"Video_Resolution\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"1da6664f-9e0e-433a-98f3-ca0cae6440b6\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"name\": \"xapi_dictionary\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"d21b2008-c5be-4050-a74f-355b0d7012f4\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"xapi_multilanguage\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Category\",\r\n            \"values\": [\r\n                {\r\n                    \"value\": \"lang-en\",\r\n                    \"id\": null,\r\n                    \"languageCode\": \"en-US\",\r\n                    \"isInherited\": false\r\n                },\r\n                {\r\n                    \"value\": \"lang-de\",\r\n                    \"id\": null,\r\n                    \"languageCode\": \"de-DE\",\r\n                    \"isInherited\": false\r\n                }\r\n            ],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"2728a0e3-a83d-470c-9483-a1cb66d09126\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"{{categoryId2}}\",\r\n            \"name\": \"xapi_multivalue\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Category\",\r\n            \"values\": [\r\n                {\r\n                    \"propertyName\": \"xapi_multivalue\",\r\n                    \"valueType\": \"ShortText\",\r\n                    \"value\": \"textq\",\r\n                    \"propertyMultivalue\": false,\r\n                    \"isInherited\": false,\r\n                    \"id\": \"02fd6a0d-90c0-4ca4-8177-1ecfb5e9faef\"\r\n                },\r\n                {\r\n                    \"propertyName\": \"xapi_multivalue\",\r\n                    \"valueType\": \"ShortText\",\r\n                    \"value\": \"text2\",\r\n                    \"propertyMultivalue\": false,\r\n                    \"isInherited\": false,\r\n                    \"id\": \"14f17e00-dd3a-4351-ac2a-18cd408a3b7e\"\r\n                }\r\n            ],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"9a762d98-c039-4784-a7df-05a2cd9730a1\"\r\n        }\r\n    ],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"Category\",\r\n    \"seoInfos\": [\r\n        {\r\n            \"semanticUrl\": \"consumer-camcorders\",\r\n            \"objectId\": \"{{categoryId2}}\",\r\n            \"objectType\": \"Category\",\r\n            \"isActive\": true,\r\n            \"languageCode\": \"en-US\",\r\n            \"id\": \"de04cdb70d0145ea8b6c68e22e054cf2\"\r\n        }\r\n    ],\r\n    \"descriptions\": [],\r\n    \"imgSrc\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/f7a8c/1023206.jpg\",\r\n    \"images\": [\r\n        {\r\n            \"relativeUrl\": \"catalog/f7a8c/1023206.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/f7a8c/1023206.jpg\",\r\n            \"sortOrder\": 0,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1023206.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1023206.jpg\",\r\n                    \"semanticUrl\": \"catalog/f7a8c/1023206.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"dadd60f8d2b3498383f72b37814aef12\"\r\n        }\r\n    ],\r\n    \"outlines\": [\r\n        {\r\n            \"items\": [\r\n                {\r\n                    \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n                    \"seoObjectType\": \"Catalog\",\r\n                    \"name\": \"Electronics\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [],\r\n                    \"name\": \"Camcorders\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"{{categoryId2}}\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [\r\n                        {\r\n                            \"semanticUrl\": \"consumer-camcorders\",\r\n                            \"objectId\": \"{{categoryId2}}\",\r\n                            \"objectType\": \"Category\",\r\n                            \"isActive\": true,\r\n                            \"languageCode\": \"en-US\",\r\n                            \"id\": \"de04cdb70d0145ea8b6c68e22e054cf2\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"Consumer camcorders\",\r\n                    \"hasVirtualParent\": false\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2015-10-06T22:39:19.097Z\",\r\n    \"modifiedDate\": \"2022-03-31T09:40:56.1679648Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{categoryId2}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"categories"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get property with Multilanguage type",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C301995 get properties Multilanguage type\", function () {\r",
															"  \r",
															"pm.expect(pm.response.text()).to.include(\"xapi_multilanguage\");\r",
															"pm.expect(pm.response.text()).to.include(\"lang-en\");\r",
															"\r",
															"  \r",
															"});\r",
															"\r",
															"/*\r",
															"pm.test(\"Body matches string\", function () {\r",
															"    var text = JSON.stringify(pm.response.json());\r",
															"    pm.expect(text.to.include(\"\\\"multivalue\\\": false\"));\r",
															"});\r",
															"/*\r",
															"pm.test(\"Your test name\", function () {\r",
															"    var jsonData = JSON.stringify( pm.response.json());\r",
															"    var multivalueF = \"\\\"multivalue\\\": false\"\r",
															"    var jsonText = pm.response.text() \r",
															"    console.log(jsonData)\r",
															"    console.log(multivalueF)\r",
															"    pm.expect(jsonData.to.include(multivalueF))\r",
															"   \r",
															"});\r",
															"*/"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncategory (storeId:\"{{storeId}}\" id:\"{{categoryId2}}\", cultureName:\"{{cultureName}}\")\r\n{\r\nname\r\nproperties\r\n\r\n{\r\ntype\r\nname\r\nvalue\r\nmultivalue\r\n\r\n}\r\n}\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get property with dictionary and Multilanguage type",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C301986 Get property with dictionary and Multilanguage type\", function () {\r",
															"    var data = pm.response.json();\r",
															"pm.expect(pm.response.text()).to.include(\"Dictionary_multilang\");\r",
															"pm.expect(pm.response.text()).to.include(\"a-en\");\r",
															"pm.expect(data.errors).to.be.undefined;\r",
															"  });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\nproperties (storeId:\"{{storeId}}\", cultureName:\"{{cultureName}}\")\r\n{\r\n  items\r\n  {\r\n    name\r\n    type\r\n    id\r\n    multivalue\r\n    propertyDictItems\r\n    {\r\n     totalCount\r\n      items\r\n      {\r\n        value\r\n      }\r\n    }\r\n  }\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Set values to multivalue&multilang",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Check values for multivalue&multilang\", function () {\r",
															"\r",
															"pm.expect(pm.response.text()).to.include(\"xapi_multivalue_multilang\");\r",
															"pm.expect(pm.response.text()).to.include(\"lan1-en\");\r",
															"pm.expect(pm.response.text()).to.include(\"lan2-en\");\r",
															"pm.expect(pm.response.text()).to.include(\"de1\");\r",
															"pm.expect(pm.response.text()).to.include(\"de2\");\r",
															"  \r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"parentId\": \"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n    \"code\": \"f7a8c\",\r\n    \"name\": \"Consumer camcorders\",\r\n    \"outline\": \"45d3fc9a913d4610a5c7d0470558c4b2/53e239451c844442a3b2fe9aa82d95c8\",\r\n    \"path\": \"Camcorders/Consumer camcorders\",\r\n    \"isVirtual\": false,\r\n    \"level\": 1,\r\n    \"priority\": 0,\r\n    \"isActive\": true,\r\n    \"properties\": [\r\n        \r\n              {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n            \"name\": \"xapi_multilanguage\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Category\",\r\n            \"values\": [\r\n                {\r\n                    \"propertyName\": \"xapi_multilanguage\",\r\n                    \"languageCode\": \"de-DE\",\r\n                    \"valueType\": \"ShortText\",\r\n                    \"value\": \"lang-de\",\r\n                    \"propertyMultivalue\": false,\r\n                    \"isInherited\": false,\r\n                    \"id\": \"203e670c-4720-457a-9fe3-bd722581f1d8\"\r\n                },\r\n                {\r\n                    \"propertyName\": \"xapi_multilanguage\",\r\n                    \"languageCode\": \"en-US\",\r\n                    \"valueType\": \"ShortText\",\r\n                    \"value\": \"lang-en\",\r\n                    \"propertyMultivalue\": false,\r\n                    \"isInherited\": false,\r\n                    \"id\": \"8873c49a-6ad0-49c1-ace2-3402a3675a7f\"\r\n                }\r\n            ],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"2728a0e3-a83d-470c-9483-a1cb66d09126\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n            \"name\": \"xapi_multivalue\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Category\",\r\n            \"values\": [\r\n                {\r\n                    \"propertyName\": \"xapi_multivalue\",\r\n                    \"valueType\": \"ShortText\",\r\n                    \"value\": \"textq\",\r\n                    \"propertyMultivalue\": false,\r\n                    \"isInherited\": false,\r\n                    \"id\": \"02fd6a0d-90c0-4ca4-8177-1ecfb5e9faef\"\r\n                },\r\n                {\r\n                    \"propertyName\": \"xapi_multivalue\",\r\n                    \"valueType\": \"ShortText\",\r\n                    \"value\": \"text2\",\r\n                    \"propertyMultivalue\": false,\r\n                    \"isInherited\": false,\r\n                    \"id\": \"14f17e00-dd3a-4351-ac2a-18cd408a3b7e\"\r\n                }\r\n            ],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"9a762d98-c039-4784-a7df-05a2cd9730a1\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n            \"name\": \"xapi_multivalue_multilang\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Category\",\r\n            \"values\": [\r\n                {\r\n                    \"value\": \"lan1-en\",\r\n                    \"languageCode\": \"en-US\",\r\n                    \"isInherited\": false\r\n                },\r\n                {\r\n                    \"value\": \"lan2-en\",\r\n                    \"languageCode\": \"en-US\",\r\n                    \"isInherited\": false\r\n                },\r\n                {\r\n                    \"value\": \"de1\",\r\n                    \"languageCode\": \"de-DE\",\r\n                    \"isInherited\": false\r\n                },\r\n                {\r\n                    \"value\": \"de2\",\r\n                    \"languageCode\": \"de-DE\",\r\n                    \"isInherited\": false\r\n                }\r\n            ],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"4d74e9c3-51fc-4105-8808-068c9bba9e2f\"\r\n        }\r\n    ],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"Category\",\r\n    \"seoInfos\": [\r\n        {\r\n            \"semanticUrl\": \"consumer-camcorders\",\r\n            \"objectId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n            \"objectType\": \"Category\",\r\n            \"isActive\": true,\r\n            \"languageCode\": \"en-US\",\r\n            \"id\": \"de04cdb70d0145ea8b6c68e22e054cf2\"\r\n        }\r\n    ],\r\n    \"descriptions\": [],\r\n    \"imgSrc\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/f7a8c/1023206.jpg\",\r\n    \"images\": [\r\n        {\r\n            \"relativeUrl\": \"catalog/f7a8c/1023206.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/f7a8c/1023206.jpg\",\r\n            \"sortOrder\": 0,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1023206.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1023206.jpg\",\r\n                    \"semanticUrl\": \"catalog/f7a8c/1023206.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"dadd60f8d2b3498383f72b37814aef12\"\r\n        }\r\n    ],\r\n    \"outlines\": [\r\n        {\r\n            \"items\": [\r\n                {\r\n                    \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n                    \"seoObjectType\": \"Catalog\",\r\n                    \"name\": \"Electronics\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [],\r\n                    \"name\": \"Camcorders\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [\r\n                        {\r\n                            \"semanticUrl\": \"consumer-camcorders\",\r\n                            \"objectId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n                            \"objectType\": \"Category\",\r\n                            \"isActive\": true,\r\n                            \"languageCode\": \"en-US\",\r\n                            \"id\": \"de04cdb70d0145ea8b6c68e22e054cf2\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"Consumer camcorders\",\r\n                    \"hasVirtualParent\": false\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2015-10-06T22:39:19.097Z\",\r\n    \"modifiedDate\": \"2022-03-31T13:45:42.1374104Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"53e239451c844442a3b2fe9aa82d95c8\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"categories"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get property with Multilanguage and Multivalue type",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C301994 Get property with Multilanguage and Multivalue type\", function () {\r",
															"     \r",
															"pm.expect(pm.response.text()).to.include(\"xapi_multivalue_multilang\");\r",
															"pm.expect(pm.response.text()).to.include(\"lan1-en\");\r",
															"pm.expect(pm.response.text()).to.include(\"lan2-en\")\r",
															"\r",
															"  \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\n  category (storeId:\"{{storeId}}\" id:\"{{categoryId2}}\", cultureName:\"{{cultureName}}\")\r\n  {\r\n    name\r\n    properties\r\n    {\r\n      name\r\n      value\r\n    }\r\n  }\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Set values to dictionary&multivalue&multilanguage",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Check values for dictionary&multivalue&multilanguage\", function () {\r",
															"\r",
															"pm.expect(pm.response.text()).to.include(\"xapi_dictionary_multivalue_multilang\");\r",
															"pm.expect(pm.response.text()).to.include(\"V\");\r",
															"pm.expect(pm.response.text()).to.include(\"Q\");\r",
															"\r",
															"  \r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"parentId\": \"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n    \"code\": \"f7a8c\",\r\n    \"name\": \"Consumer camcorders\",\r\n    \"outline\": \"45d3fc9a913d4610a5c7d0470558c4b2/53e239451c844442a3b2fe9aa82d95c8\",\r\n    \"path\": \"Camcorders/Consumer camcorders\",\r\n    \"isVirtual\": false,\r\n    \"level\": 1,\r\n    \"priority\": 0,\r\n    \"isActive\": true,\r\n    \"properties\": [\r\n       \r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"categoryId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n            \"name\": \"xapi_dictionary_multivalue_multilang\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Category\",\r\n            \"values\": [\r\n                {\r\n                    \"alias\": \"V\",\r\n                     \"value\": \"V\",\r\n                    \"valueId\": \"759e17eb-de02-4466-af45-2348fd9b6ecf\",\r\n                    \"isInherited\": false\r\n                },\r\n                {\r\n                    \"alias\": \"Q\",\r\n                    \"value\": \"Q\",\r\n                    \"valueId\": \"3770deb9-7516-4f32-9b09-ee3c581914f7\",\r\n                    \"isInherited\": false\r\n                }\r\n            ],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": false,\r\n            \"id\": \"89890fa1-6b01-45a6-ad8a-4622231cbfcf\"\r\n        }\r\n        \r\n    ],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"Category\",\r\n    \"seoInfos\": [\r\n        {\r\n            \"semanticUrl\": \"consumer-camcorders\",\r\n            \"objectId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n            \"objectType\": \"Category\",\r\n            \"isActive\": true,\r\n            \"languageCode\": \"en-US\",\r\n            \"id\": \"de04cdb70d0145ea8b6c68e22e054cf2\"\r\n        }\r\n    ],\r\n    \"descriptions\": [],\r\n    \"imgSrc\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/f7a8c/1023206.jpg\",\r\n    \"images\": [\r\n        {\r\n            \"relativeUrl\": \"catalog/f7a8c/1023206.jpg\",\r\n            \"url\": \"https://regression-platform.qa.govirto.com/cms-content/assets/catalog/f7a8c/1023206.jpg\",\r\n            \"sortOrder\": 0,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"1023206.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1023206.jpg\",\r\n                    \"semanticUrl\": \"catalog/f7a8c/1023206.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ],\r\n            \"id\": \"dadd60f8d2b3498383f72b37814aef12\"\r\n        }\r\n    ],\r\n    \"outlines\": [\r\n        {\r\n            \"items\": [\r\n                {\r\n                    \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n                    \"seoObjectType\": \"Catalog\",\r\n                    \"name\": \"Electronics\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"45d3fc9a913d4610a5c7d0470558c4b2\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [],\r\n                    \"name\": \"Camcorders\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [\r\n                        {\r\n                            \"semanticUrl\": \"consumer-camcorders\",\r\n                            \"objectId\": \"53e239451c844442a3b2fe9aa82d95c8\",\r\n                            \"objectType\": \"Category\",\r\n                            \"isActive\": true,\r\n                            \"languageCode\": \"en-US\",\r\n                            \"id\": \"de04cdb70d0145ea8b6c68e22e054cf2\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"Consumer camcorders\",\r\n                    \"hasVirtualParent\": false\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2015-10-06T22:39:19.097Z\",\r\n    \"modifiedDate\": \"2022-03-31T14:04:21.7185015Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"53e239451c844442a3b2fe9aa82d95c8\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"categories"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Dictionary&Multivalue&Multilanguage type",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C301996 Get Dictionary&Multivalue&Multilanguage type\", function () {\r",
															"pm.expect(pm.response.text()).to.include(\"xapi_dictionary_multivalue_multilang\");\r",
															"pm.expect(pm.response.text()).to.include(\"V\");\r",
															"pm.expect(pm.response.text()).to.include(\"Q\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\n  category (storeId:\"{{storeId}}\" id:\"{{categoryId2}}\", cultureName:\"{{cultureName}}\")\r\n  {\r\n    name\r\n    properties\r\n    {\r\n      name\r\n      value\r\n    }\r\n  }\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get categories of the store by storeID",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C260931 Get categories of the store by storeID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"    \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\n    categories ( storeId:\"Electronics\", cultureName:\"fr-FR\") {\n      items\n    {\n      id\n      name\n      properties\n      {\n        id\n        value\n        multivalue\n        label\n        propertyDictItems\n        {\n          items\n          {\n            id\n            value\n          }\n        }\n      }}\n      }}",
														"variables": "{\n  \"after\": {{after}},\n  \"first\": {{first}},\n  \"storeId\": \"{{storeId}}\",\n  \"cultureName\": \"{{cultureName}}\",\n  \"userId\": \"{{userId}}\",\n  \"currencyCode\": \"{{currencyCode}}\",\n  \"filter\": \"{{filter}}\",\n  \"fuzzy\": true,\n  \"fuzzyLevel\": 0,\n  \"facet\": \"\",\n  \"sort\": \"\"\n }"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get specific item by item id and store id. Full information",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C260930 Get specific item by item id and store id\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.product).to.be.not.empty;\r",
															"    pm.expect(jsonData.data.product.id).to.be.equal(\"ac8da6c50cef42ad97d6f1effe2abaee\");\r",
															"    pm.expect(data.errors).to.be.undefined\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\nproduct(id: \"ac8da6c50cef42ad97d6f1effe2abaee\", cultureName: \"de-DE\",storeId: \"{{storeId}}\") {\nid\nname\ncode\nvariations{\nid\ncode\n}\ndescription {\nid\nlanguageCode\nreviewType\ncontent\n}\ndescriptions{\nid\nlanguageCode\nreviewType\ncontent\n}\n\nproperties{\nname\nvalue\nlabel\n}\nimages {\nurl\nrelativeUrl\ncultureName\n}\nassets {\nid\nname\ncultureName\n}\nseoInfo {\nname\nsemanticUrl\nmetaKeywords\nmetaDescription\n}\nprice {\npricelistId\nlist {\namount\n}\nsale {\namount\n}\ndiscountAmount {\namount\n}\n}\n}\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Product description",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261694 Description not empty\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.product.descriptions).to.be.not.empty;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\n  product(\n    id: \"{{ProductId}}\"\n    storeId: \"{{storeId}}\"\n    cultureName: \"{{cultureName}}\"\n    currencyCode: \"{{currencyCode}}\")\n    {\n    id\n    code\n    descriptions\n    {\n      content\n      reviewType\n      languageCode\n    }\n  }\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get concrete category by category id and store id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C260932 Check name of category\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.category.name).to.equal(\"Headphones\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\ncategory(id: \"{{categoryId}}\", storeId: \"{{storeId}}\") {\nname\ncode\n}\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Clear all",
									"item": [
										{
											"name": "Delete properties with dictionary items",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "doDeleteValues",
															"value": "true"
														},
														{
															"key": "id",
															"value": "{{propertyId}}"
														},
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Multivalue_decimal",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "doDeleteValues",
															"value": "true"
														},
														{
															"key": "id",
															"value": "{{propertyId2}}"
														},
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Multivalue_int",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId7}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "doDeleteValues",
															"value": "true"
														},
														{
															"key": "",
															"value": "",
															"disabled": true
														},
														{
															"key": "id",
															"value": "{{propertyId7}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Multivalue_int2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId8}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "doDeleteValues",
															"value": "true"
														},
														{
															"key": "",
															"value": "",
															"disabled": true
														},
														{
															"key": "id",
															"value": "{{propertyId8}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Multivalue_int3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId9}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "doDeleteValues",
															"value": "true"
														},
														{
															"key": "",
															"value": "",
															"disabled": true
														},
														{
															"key": "id",
															"value": "{{propertyId9}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Multilanguage property",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId3}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "doDeleteValues",
															"value": "true"
														},
														{
															"key": "ids",
															"value": "",
															"disabled": true
														},
														{
															"key": "id",
															"value": "{{propertyId3}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete properties with dictionary&multilang",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId4}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "doDeleteValues",
															"value": "true"
														},
														{
															"key": "id",
															"value": "{{propertyId4}}"
														},
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete properties with multivalue&multilanguage type",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId5}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "doDeleteValues",
															"value": "true"
														},
														{
															"key": "id",
															"value": "{{propertyId5}}"
														},
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete properties with dictionary&multivalue&multilang",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId6}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"properties"
													],
													"query": [
														{
															"key": "doDeleteValues",
															"value": "true"
														},
														{
															"key": "id",
															"value": "{{propertyId6}}"
														},
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{AdminToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Product [ID]",
							"item": [
								{
									"name": "Key product properties [ID]",
									"item": [
										{
											"name": "Preparation",
											"item": [
												{
													"name": "Create product_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Set ProductId1\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
																	"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
																	"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Product1\",\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":0,\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index product_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Check Index\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId1}}\"\r\n        ]\r\n    }\r\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add product dynamic property with attribute to Electronics catalog Property_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000);\r",
																	"\r",
																	"\r",
																	"const rnd = (len, chars='abcdefghijklmnopqrstuvwxyz0123456789') => [...Array(len)].map(() => chars.charAt(Math.floor(Math.random() * chars.length))).join('')\r",
																	"pm.collectionVariables.set(\"propertyId1\", rnd(36))"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"isReadOnly\":false,\r\n   \"isManageable\":true,\r\n   \"isNew\":true,\r\n   \"catalogId\":\"{{catalogQA}}\",\r\n   \"name\":\"propertyWithAttribute1\",\r\n   \"required\":false,\r\n   \"dictionary\":false,\r\n   \"multivalue\":false,\r\n   \"multilanguage\":false,\r\n   \"hidden\":false,\r\n   \"valueType\":\"ShortText\",\r\n   \"type\":\"Product\",\r\n   \"values\":[\r\n      \r\n   ],\r\n   \"attributes\":[\r\n      {\r\n         \"name\":\"KeyProperty\",\r\n         \"value\":\"99999999999999999999999999999999999991\"\r\n      }\r\n   ],\r\n   \"displayNames\":[\r\n      {\r\n         \"languageCode\":\"en-US\"\r\n      },\r\n      {\r\n         \"languageCode\":\"de-DE\"\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"id\":\"{{propertyId1}}\",\r\n   \"dictionaryValues\":[\r\n      \r\n   ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/properties?id={{propertyId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"properties"
															],
															"query": [
																{
																	"key": "id",
																	"value": "{{propertyId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Add product dynamic property with attribute to Electronics catalog Property_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const rnd = (len, chars='abcdefghijklmnopqrstuvwxyz0123456789') => [...Array(len)].map(() => chars.charAt(Math.floor(Math.random() * chars.length))).join('')\r",
																	"\r",
																	"\r",
																	"pm.collectionVariables.set(\"propertyId2\", rnd(36))"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"isReadOnly\":false,\r\n   \"isManageable\":true,\r\n   \"isNew\":true,\r\n   \"catalogId\":\"{{catalogQA}}\",\r\n   \"name\":\"propertyWithAttribute2\",\r\n   \"required\":false,\r\n   \"dictionary\":false,\r\n   \"multivalue\":false,\r\n   \"multilanguage\":false,\r\n   \"hidden\":false,\r\n   \"valueType\":\"ShortText\",\r\n   \"type\":\"Product\",\r\n   \"values\":[\r\n      \r\n   ],\r\n   \"attributes\":[\r\n      {\r\n         \"name\":\"KeyProperty\",\r\n         \"value\":\"-99999999999999999999999999999999999992\"\r\n      }\r\n   ],\r\n   \"displayNames\":[\r\n      {\r\n         \"languageCode\":\"en-US\"\r\n      },\r\n      {\r\n         \"languageCode\":\"de-DE\"\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"id\":\"{{propertyId2}}\",\r\n   \"dictionaryValues\":[\r\n      \r\n   ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/properties?id={{propertyId2}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"properties"
															],
															"query": [
																{
																	"key": "id",
																	"value": "{{propertyId2}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Add product dynamic property with attribute to Electronics catalog Property_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const rnd = (len, chars='abcdefghijklmnopqrstuvwxyz0123456789') => [...Array(len)].map(() => chars.charAt(Math.floor(Math.random() * chars.length))).join('')\r",
																	"\r",
																	"\r",
																	"pm.collectionVariables.set(\"propertyId3\", rnd(36))"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"isReadOnly\":false,\r\n   \"isManageable\":true,\r\n   \"isNew\":true,\r\n   \"catalogId\":\"{{catalogQA}}\",\r\n   \"name\":\"propertyWithAttribute3\",\r\n   \"required\":false,\r\n   \"dictionary\":false,\r\n   \"multivalue\":false,\r\n   \"multilanguage\":false,\r\n   \"hidden\":false,\r\n   \"valueType\":\"ShortText\",\r\n   \"type\":\"Product\",\r\n   \"values\":[\r\n      \r\n   ],\r\n   \"attributes\":[\r\n      {\r\n         \"name\":\"KeyProperty\",\r\n         \"value\":\"99999999999999999999999999999999999993\"\r\n      }\r\n   ],\r\n   \"displayNames\":[\r\n      {\r\n         \"languageCode\":\"en-US\"\r\n      },\r\n      {\r\n         \"languageCode\":\"de-DE\"\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"id\":\"{{propertyId3}}\",\r\n   \"dictionaryValues\":[\r\n      \r\n   ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/properties?id={{propertyId3}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"properties"
															],
															"query": [
																{
																	"key": "id",
																	"value": "{{propertyId3}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Add product dynamic property with attribute to Electronics catalog Property_4",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const rnd = (len, chars='abcdefghijklmnopqrstuvwxyz0123456789') => [...Array(len)].map(() => chars.charAt(Math.floor(Math.random() * chars.length))).join('')\r",
																	"\r",
																	"\r",
																	"pm.collectionVariables.set(\"propertyId4\", rnd(36))"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"isReadOnly\":false,\r\n   \"isManageable\":true,\r\n   \"isNew\":true,\r\n   \"catalogId\":\"{{catalogQA}}\",\r\n   \"name\":\"propertyWithAttribute4\",\r\n   \"required\":false,\r\n   \"dictionary\":true,\r\n   \"multivalue\":false,\r\n   \"multilanguage\":false,\r\n   \"hidden\":false,\r\n   \"valueType\":\"ShortText\",\r\n   \"type\":\"Product\",\r\n   \"values\":[\r\n      \r\n   ],\r\n   \"attributes\":[\r\n      {\r\n         \"name\":\"KeyProperty\",\r\n         \"value\":\"99999999999999999999999999999999999994\"\r\n      }\r\n   ],\r\n   \"displayNames\":[\r\n      {\r\n         \"languageCode\":\"en-US\"\r\n      },\r\n      {\r\n         \"languageCode\":\"de-DE\"\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"id\":\"{{propertyId4}}\",\r\n   \"dictionaryValues\":[\r\n      \r\n   ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/properties?id={{propertyId4}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"properties"
															],
															"query": [
																{
																	"key": "id",
																	"value": "{{propertyId4}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Add dictionary item to property_4",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\r\n   {\r\n      \"values\":[\r\n         \r\n      ],\r\n      \"isNew\":true,\r\n      \"propertyId\":\"{{propertyId4}}\",\r\n      \"alias\":\"first\",\r\n      \"sortOrder\":\"1\",\r\n      \"localizedValues\":[\r\n         \r\n      ]\r\n   }\r\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/dictionaryitems",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"dictionaryitems"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add dictionary item to property_4",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\r\n   {\r\n      \"values\":[\r\n         \r\n      ],\r\n      \"isNew\":true,\r\n      \"propertyId\":\"{{propertyId4}}\",\r\n      \"alias\":\"second\",\r\n      \"sortOrder\":\"2\",\r\n      \"localizedValues\":[\r\n         \r\n      ]\r\n   }\r\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/dictionaryitems",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"dictionaryitems"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add dictionary item to property_4",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\r\n   {\r\n      \"values\":[\r\n         \r\n      ],\r\n      \"isNew\":true,\r\n      \"propertyId\":\"{{propertyId4}}\",\r\n      \"alias\":\"third\",\r\n      \"sortOrder\":\"3\",\r\n      \"localizedValues\":[\r\n         \r\n      ]\r\n   }\r\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/dictionaryitems",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"dictionaryitems"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add product dynamic property without attribute to Electronics catalog Property_5",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const rnd = (len, chars='abcdefghijklmnopqrstuvwxyz0123456789') => [...Array(len)].map(() => chars.charAt(Math.floor(Math.random() * chars.length))).join('')\r",
																	"\r",
																	"\r",
																	"pm.collectionVariables.set(\"propertyId5\", rnd(36))"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"isReadOnly\":false,\r\n   \"isManageable\":true,\r\n   \"isNew\":true,\r\n   \"catalogId\":\"{{catalogQA}}\",\r\n   \"name\":\"propertyWithoutAttribute5\",\r\n   \"required\":false,\r\n   \"dictionary\":false,\r\n   \"multivalue\":false,\r\n   \"multilanguage\":false,\r\n   \"hidden\":false,\r\n   \"valueType\":\"ShortText\",\r\n   \"type\":\"Product\",\r\n   \"values\":[\r\n      \r\n   ],\r\n   \"attributes\":[\r\n\r\n   ],\r\n   \"displayNames\":[\r\n      {\r\n         \"languageCode\":\"en-US\"\r\n      },\r\n      {\r\n         \"languageCode\":\"de-DE\"\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"id\":\"{{propertyId5}}\",\r\n   \"dictionaryValues\":[\r\n      \r\n   ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/properties?id={{propertyId5}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"properties"
															],
															"query": [
																{
																	"key": "id",
																	"value": "{{propertyId5}}"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Main",
											"item": [
												{
													"name": "Get key product properties",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C343335 Properties with attribute 'KeyProperty' are displayed\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"propertyId1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"propertyId2\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"propertyId3\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"propertyId4\"));\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C343347 Properties without attribute 'KeyProperty' aren't displayed\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(pm.response.text()).to.not.include(pm.collectionVariables.get(\"propertyId5\"));\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C343352 Sort by value in attribute\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    var numberOfLeyProperties = jsonData.data.products.items[0].keyProperties.length;\r",
																	"\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[numberOfLeyProperties-4].id).to.eql(pm.collectionVariables.get(\"propertyId1\"));\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[numberOfLeyProperties-3].id).to.eql(pm.collectionVariables.get(\"propertyId2\"));\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[numberOfLeyProperties-2].id).to.eql(pm.collectionVariables.get(\"propertyId3\"));\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[numberOfLeyProperties-1].id).to.eql(pm.collectionVariables.get(\"propertyId4\"));\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C343357 Check keyProperties fields\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"  \r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[0].id).to.be.not.empty;\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[0].name).to.be.not.empty;\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[0].hidden).to.be.not.null;\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[0].multivalue).to.be.not.null;\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[0].label).to.be.not.empty;\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[0].type).to.be.not.empty;\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[0].value).to.be.not.undefined;\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[0].valueType).to.be.not.empty;\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[0].valueId).to.be.not.undefined;  \r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C343362 Check propertyDictItems fields\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    var numberOfLeyProperties = jsonData.data.products.items[0].keyProperties.length;\r",
																	"\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[numberOfLeyProperties-1].propertyDictItems.totalCount).to.be.eql(3);\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[numberOfLeyProperties-1].propertyDictItems.items[0].id).to.be.not.empty;\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[numberOfLeyProperties-1].propertyDictItems.items[0].value).to.be.not.empty;\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties[numberOfLeyProperties-1].propertyDictItems.items[0].sortOrder).to.be.not.null;\r",
																	"});   \r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query {\r\nproducts(\r\nstoreId: \"{{storeId}}\"\r\ncultureName: \"{{cultureName}}\"\r\nproductIds:\"{{ProductId1}}\"\r\n) {\r\n    \r\nitems {\r\nname\r\nkeyProperties {\r\n    id\r\n    name\r\n    hidden\r\n    multivalue\r\n    label\r\n    type\r\n    value\r\n    valueType\r\n    valueId\r\n  propertyDictItems{\r\n    totalCount\r\n    items{\r\n      id\r\n      value\r\n      sortOrder\r\n    \r\n    }\r\n  }\r\n\r\n}\r\n}\r\n}\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get key product properties - set \"take\"",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C346086 Set 'take:N' - in response N keyProperties, N = 3\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.products.items[0].keyProperties.length).to.equal(3);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query {\r\nproducts(\r\nstoreId: \"{{storeId}}\"\r\ncultureName: \"{{cultureName}}\"\r\nproductIds:\"{{ProductId1}}\"\r\n) {\r\n    \r\nitems {\r\nname\r\nkeyProperties (take:3) {\r\nid\r\nname\r\nvalue\r\n\r\n}\r\n}\r\n}\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Clear all",
											"item": [
												{
													"name": "Delete product_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{ProductId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete property_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"properties"
															],
															"query": [
																{
																	"key": "doDeleteValues",
																	"value": "true"
																},
																{
																	"key": "id",
																	"value": "{{propertyId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete property_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId2}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"properties"
															],
															"query": [
																{
																	"key": "doDeleteValues",
																	"value": "true"
																},
																{
																	"key": "id",
																	"value": "{{propertyId2}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete property_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId3}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"properties"
															],
															"query": [
																{
																	"key": "doDeleteValues",
																	"value": "true"
																},
																{
																	"key": "id",
																	"value": "{{propertyId3}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete property_4",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId4}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"properties"
															],
															"query": [
																{
																	"key": "doDeleteValues",
																	"value": "true"
																},
																{
																	"key": "id",
																	"value": "{{propertyId4}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete property_5",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/catalog/properties?doDeleteValues=true&id={{propertyId5}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"properties"
															],
															"query": [
																{
																	"key": "doDeleteValues",
																	"value": "true"
																},
																{
																	"key": "id",
																	"value": "{{propertyId5}}"
																}
															]
														}
													},
													"response": []
												}
											]
										}
									],
									"description": "Test cases:\n\n[https://virtowayqa.testrail.io/index.php?/suites/view/4361&group_by=cases:section_id&group_order=asc&display_deleted_cases=0&group_id=59644](https://virtowayqa.testrail.io/index.php?/suites/view/4361&group_by=cases:section_id&group_order=asc&display_deleted_cases=0&group_id=59644)",
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Create contact_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Set contactId\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
												"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\"\n}\n}\n\n"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Set ProductId\", function(){\r",
													"    var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"productIdQA\", jsonData.id);\r",
													"pm.collectionVariables.set(\"Nameofproduct\", jsonData.name);\r",
													"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"code\":\"DDR-234304560\",\r\n   \"name\":\"NewProduct3\",\r\n   \"catalogId\":\"{{catalogQA}}\",\r\n   \"categoryId\":\"{{categoryQA}}\",\r\n   \"outline\":\"{{categoryQA}}\",\r\n   \"path\":\"Cell phones\",\r\n   \"isBuyable\":true,\r\n   \"isActive\":true,\r\n   \"trackInventory\":true,\r\n   \"maxQuantity\":0,\r\n   \"minQuantity\":0,\r\n   \"productType\":\"Physical\",\r\n   \"startDate\":\"2021-11-02T14:24:28.2675228Z\",\r\n   \"priority\":0,\r\n   \"properties\":[\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"1111111111111\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"31d6bf21-e2a7-41c8-baa9-484a89d4a8f7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"1DECIMAL\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a6d2111d-be02-4de6-b037-c98b4da988ee\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Brand\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"label=fr\",\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"name\":\"label=en\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"label=de\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"09fff0f7-a49a-45be-9a39-0215ed72eaae\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Catalog_long\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"8a0ad192-ccbf-4c8d-9155-d3cd6d1d3d77\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"category_decimal\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6e9f37df-3caa-42b0-b556-3b5162793800\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Category_long\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"86727f51-816b-425a-9754-bf0333ba23d4\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Color\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Color\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Farber\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"87fd1cec-79c2-4652-83b4-36e241ede571\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Decimal_all_incl\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"cec81ef0-1de5-4fb7-a05e-d9cf2191ae61\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"dictionary\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"de\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"en\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fe55902d-b298-4aef-9e18-5f0ebfaf8978\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Display_size\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Bildschirmgröße\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Display size\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fa4a86b5-d85b-464b-b27c-00f316a979e7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Font_camera\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f88029fb-2bb2-475d-99bd-23db67f3b98a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Front_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7ae290e2-b198-42b0-ae63-26537281d53b\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Full_name\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ddf9e753-db37-4385-b7c6-92f485b74185\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"GEO_POINT\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"GeoPoint\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            {\r\n               \"isUnique\":false,\r\n               \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n               \"propertyId\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\",\r\n               \"id\":\"37f93166-9fb3-40d8-a700-7d495bd9a6fc\"\r\n            }\r\n         ],\r\n         \"validationRule\":{\r\n            \"isUnique\":false,\r\n            \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n            \"propertyId\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\",\r\n            \"id\":\"37f93166-9fb3-40d8-a700-7d495bd9a6fc\"\r\n         },\r\n         \"isInherited\":true,\r\n         \"id\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Inger_multi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"af036906-3643-4f0b-9c27-505de22234cb\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"int1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"570a5567-7442-4202-b77f-d6e572a6bd91\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Internal_Storage_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1e94acae-f338-44a3-8216-194c01260628\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Memory_Card_Slot\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"3309e819-a77a-437c-915d-28450d55bab6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multi_int312\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1daa49e9-0ccd-4fe7-9323-84559a85a775\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"multiInt_product\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2341b9c1-7c80-42b4-b33d-22277e4c3a93\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multilanguage\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"66c1b244-21a6-44b0-9cb1-2f6d9b206a57\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"multilingual\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ac335397-6f6c-4ccd-8a28-6b10a5a4e841\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"multint_variation\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"bbe3bd7f-3880-42b1-ba6e-ed0402d0c871\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multint1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"lab1\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"lab2\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"lab3\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ef21c905-4c1d-4856-87ce-8da49d3e1147\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"multivalue\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"559e6cd9-923e-4178-8d2e-3183394a09e5\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"43bdd25d-1cbe-488e-8fad-553bdfeedc48\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"new_property1111\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7325d852-3793-43d5-a568-f110b6204c5f\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"NFC\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"29007dd4-2f23-417b-902c-8d6565615eea\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Operating_system\",\r\n         \"required\":true,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f5ac5fae-b80b-4f88-8042-e7f89c998eff\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Pixels_Per_Inch_ppi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"0e3029bd-dc69-4617-9163-78ac53ee8a6e\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Processor_Core_GHz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"85daf769-12c7-4135-9e8a-a0bcf74db4c3\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"RAM_Memory_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f06daf73-efd3-4b6d-9143-bf08a0715991\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Rear_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ee496813-1a59-4707-9816-85e639c55534\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"SIM_Card_Slots\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"552a29f0-fb63-4ea2-ba12-293cd8c9410c\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"test11\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"749bf945-0f15-45cc-8b98-68cf6d58500a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"testprop\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a617db33-096f-4bd1-8727-ac15302b15e6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Two_SIM_cards\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"b2e01868-4545-4159-8936-5f21a338cc2d\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Type_of_product\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Produkttyp\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Type_of_product\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Type de produit\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"300a6918-58bb-403a-8f1b-0a3ac38b05d9\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Video_Recording\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2d8f8a03-9c7d-464f-96b8-959e60e91214\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Waterproof\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a897f2bd-bbbf-4efb-9a8e-000d1568bd96\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Weight_oz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"13e822a6-9a07-4889-88df-52a3e7eef488\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Year_Released\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6283167f-5f8f-4210-9612-790d9b2eefa0\"\r\n      }\r\n   ],\r\n   \"imgSrc\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n\r\n\r\n   \"links\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"CatalogProduct\",\r\n\r\n\r\n   \"associations\":[\r\n      \r\n   ],\r\n   \"referencedAssociations\":[\r\n      \r\n   ],\r\n   \"outlines\":[\r\n      {\r\n         \"items\":[\r\n            {\r\n               \"id\":\"{{catalogQA}}\",\r\n               \"seoObjectType\":\"Catalog\",\r\n               \"name\":\"Electronics\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"{{categoryQA}}\",\r\n               \"seoObjectType\":\"Category\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"cell-phones\",\r\n                     \"objectId\":\"{{categoryQA}}\",\r\n                     \"objectType\":\"Category\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"73642cc7f2e44d92af13e94c79c73456\"\r\n                  }\r\n               ],\r\n               \"name\":\"Cell phones\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n               \"seoObjectType\":\"CatalogProduct\",\r\n\r\n               \"name\":\"NewProduct3\",\r\n               \"hasVirtualParent\":false\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"createdDate\":\"2021-11-11T11:06:13.5832208Z\",\r\n   \"modifiedDate\":\"2021-11-11T12:16:55.319113Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add SEO to product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Check SEO for the product\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.seoInfos[0].semanticUrl).to.equal(\"product_A\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"code\":\"DDR-234304560\",\r\n   \"name\":\"NewProduct3\",\r\n   \"catalogId\":\"{{catalogQA}}\",\r\n   \"categoryId\":\"{{categoryQA}}\",\r\n   \"outline\":\"{{categoryQA}}\",\r\n   \"path\":\"Cell phones\",\r\n   \"isBuyable\":true,\r\n   \"isActive\":true,\r\n   \"trackInventory\":true,\r\n   \"maxQuantity\":0,\r\n   \"minQuantity\":0,\r\n   \"productType\":\"Physical\",\r\n   \"startDate\":\"2021-11-02T14:24:28.2675228Z\",\r\n   \"priority\":0,\r\n   \"properties\":[\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"1111111111111\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"31d6bf21-e2a7-41c8-baa9-484a89d4a8f7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"1DECIMAL\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a6d2111d-be02-4de6-b037-c98b4da988ee\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Brand\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"label=fr\",\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"name\":\"label=en\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"label=de\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"09fff0f7-a49a-45be-9a39-0215ed72eaae\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Catalog_long\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"8a0ad192-ccbf-4c8d-9155-d3cd6d1d3d77\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"category_decimal\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6e9f37df-3caa-42b0-b556-3b5162793800\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Category_long\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"86727f51-816b-425a-9754-bf0333ba23d4\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Color\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Color\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Farber\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"87fd1cec-79c2-4652-83b4-36e241ede571\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Decimal_all_incl\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"cec81ef0-1de5-4fb7-a05e-d9cf2191ae61\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"dictionary\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"de\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"en\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fe55902d-b298-4aef-9e18-5f0ebfaf8978\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Display_size\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Bildschirmgröße\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Display size\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fa4a86b5-d85b-464b-b27c-00f316a979e7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Font_camera\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f88029fb-2bb2-475d-99bd-23db67f3b98a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Front_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7ae290e2-b198-42b0-ae63-26537281d53b\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Full_name\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ddf9e753-db37-4385-b7c6-92f485b74185\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"GEO_POINT\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"GeoPoint\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            {\r\n               \"isUnique\":false,\r\n               \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n               \"propertyId\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\",\r\n               \"id\":\"37f93166-9fb3-40d8-a700-7d495bd9a6fc\"\r\n            }\r\n         ],\r\n         \"validationRule\":{\r\n            \"isUnique\":false,\r\n            \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n            \"propertyId\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\",\r\n            \"id\":\"37f93166-9fb3-40d8-a700-7d495bd9a6fc\"\r\n         },\r\n         \"isInherited\":true,\r\n         \"id\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Inger_multi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"af036906-3643-4f0b-9c27-505de22234cb\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"int1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"570a5567-7442-4202-b77f-d6e572a6bd91\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Internal_Storage_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1e94acae-f338-44a3-8216-194c01260628\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Memory_Card_Slot\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"3309e819-a77a-437c-915d-28450d55bab6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multi_int312\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1daa49e9-0ccd-4fe7-9323-84559a85a775\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"multiInt_product\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2341b9c1-7c80-42b4-b33d-22277e4c3a93\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multilanguage\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"66c1b244-21a6-44b0-9cb1-2f6d9b206a57\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"multilingual\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ac335397-6f6c-4ccd-8a28-6b10a5a4e841\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"multint_variation\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"bbe3bd7f-3880-42b1-ba6e-ed0402d0c871\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multint1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"lab1\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"lab2\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"lab3\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ef21c905-4c1d-4856-87ce-8da49d3e1147\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"multivalue\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"559e6cd9-923e-4178-8d2e-3183394a09e5\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"43bdd25d-1cbe-488e-8fad-553bdfeedc48\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"new_property1111\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7325d852-3793-43d5-a568-f110b6204c5f\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"NFC\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"29007dd4-2f23-417b-902c-8d6565615eea\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Operating_system\",\r\n         \"required\":true,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f5ac5fae-b80b-4f88-8042-e7f89c998eff\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Pixels_Per_Inch_ppi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"0e3029bd-dc69-4617-9163-78ac53ee8a6e\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Processor_Core_GHz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"85daf769-12c7-4135-9e8a-a0bcf74db4c3\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"RAM_Memory_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f06daf73-efd3-4b6d-9143-bf08a0715991\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Rear_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ee496813-1a59-4707-9816-85e639c55534\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"SIM_Card_Slots\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"552a29f0-fb63-4ea2-ba12-293cd8c9410c\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"test11\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"749bf945-0f15-45cc-8b98-68cf6d58500a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"testprop\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a617db33-096f-4bd1-8727-ac15302b15e6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Two_SIM_cards\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"b2e01868-4545-4159-8936-5f21a338cc2d\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Type_of_product\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Produkttyp\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Type_of_product\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Type de produit\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"300a6918-58bb-403a-8f1b-0a3ac38b05d9\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Video_Recording\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2d8f8a03-9c7d-464f-96b8-959e60e91214\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Waterproof\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a897f2bd-bbbf-4efb-9a8e-000d1568bd96\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Weight_oz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"13e822a6-9a07-4889-88df-52a3e7eef488\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Year_Released\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6283167f-5f8f-4210-9612-790d9b2eefa0\"\r\n      }\r\n   ],\r\n   \"imgSrc\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n\r\n\r\n   \"links\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"CatalogProduct\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"semanticUrl\":\"product_A\",\r\n         \"pageTitle\":\"product_A\",\r\n         \"metaDescription\":\"Test new description A\",\r\n         \"imageAltDescription\":\"altimage\",\r\n         \"metaKeywords\":\"product_A\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n         \"objectType\":\"CatalogProduct\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"de-DE\"\r\n      },\r\n      {\r\n         \"semanticUrl\":\"new-product3\",\r\n         \"pageTitle\":\"prod3\",\r\n         \"metaDescription\":\"newdescription\",\r\n         \"imageAltDescription\":\"altimage\",\r\n         \"metaKeywords\":\"product3\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n         \"objectType\":\"CatalogProduct\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\"\r\n      }\r\n   ],\r\n\r\n   \"associations\":[\r\n      \r\n   ],\r\n   \"referencedAssociations\":[\r\n      \r\n   ],\r\n   \"outlines\":[\r\n      {\r\n         \"items\":[\r\n            {\r\n               \"id\":\"{{catalogQA}}\",\r\n               \"seoObjectType\":\"Catalog\",\r\n               \"name\":\"Electronics\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"{{categoryQA}}\",\r\n               \"seoObjectType\":\"Category\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"cell-phones\",\r\n                     \"objectId\":\"{{categoryQA}}\",\r\n                     \"objectType\":\"Category\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"73642cc7f2e44d92af13e94c79c73456\"\r\n                  }\r\n               ],\r\n               \"name\":\"Cell phones\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n               \"seoObjectType\":\"CatalogProduct\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"product_A\",\r\n                     \"pageTitle\":\"product_A\",\r\n                     \"metaDescription\":\"Test new description A\",\r\n                     \"imageAltDescription\":\"altimage\",\r\n                     \"metaKeywords\":\"product_A\",\r\n                     \"storeId\":\"Electronics\",\r\n                     \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"de-DE\",\r\n                     \"id\":\"753c2b40-60aa-434e-972d-3b1060b13fe8\"\r\n                  },\r\n                  {\r\n                     \"semanticUrl\":\"new-product3\",\r\n                     \"pageTitle\":\"prod3\",\r\n                     \"metaDescription\":\"newdescription\",\r\n                     \"imageAltDescription\":\"altimage\",\r\n                     \"metaKeywords\":\"product3\",\r\n                     \"storeId\":\"Electronics\",\r\n                     \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"9aa950f4-ee9c-4850-a9c7-11a348132efa\"\r\n                  }\r\n               ],\r\n               \"name\":\"NewProduct3\",\r\n               \"hasVirtualParent\":false\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"createdDate\":\"2021-11-11T11:06:13.5832208Z\",\r\n   \"modifiedDate\":\"2021-11-11T12:16:55.319113Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{productIdQA}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add description to product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check descriptions for the product\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.reviews[0].content).to.equal(\"Absolutly new content\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"code\":\"DDR-234304560\",\r\n   \"name\":\"NewProduct3\",\r\n   \"catalogId\":\"{{catalogQA}}\",\r\n   \"categoryId\":\"{{categoryQA}}\",\r\n   \"outline\":\"{{categoryQA}}\",\r\n   \"path\":\"Cell phones\",\r\n   \"isBuyable\":true,\r\n   \"isActive\":true,\r\n   \"trackInventory\":true,\r\n   \"maxQuantity\":0,\r\n   \"minQuantity\":0,\r\n   \"productType\":\"Physical\",\r\n   \"startDate\":\"2021-11-02T14:24:28.2675228Z\",\r\n   \"priority\":0,\r\n   \"properties\":[\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"1111111111111\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"31d6bf21-e2a7-41c8-baa9-484a89d4a8f7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"1DECIMAL\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a6d2111d-be02-4de6-b037-c98b4da988ee\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Brand\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"label=fr\",\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"name\":\"label=en\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"label=de\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"09fff0f7-a49a-45be-9a39-0215ed72eaae\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Catalog_long\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"8a0ad192-ccbf-4c8d-9155-d3cd6d1d3d77\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"category_decimal\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6e9f37df-3caa-42b0-b556-3b5162793800\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Category_long\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"86727f51-816b-425a-9754-bf0333ba23d4\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Color\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Color\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Farber\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"87fd1cec-79c2-4652-83b4-36e241ede571\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Decimal_all_incl\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"cec81ef0-1de5-4fb7-a05e-d9cf2191ae61\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"dictionary\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"de\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"en\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fe55902d-b298-4aef-9e18-5f0ebfaf8978\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Display_size\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Bildschirmgröße\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Display size\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fa4a86b5-d85b-464b-b27c-00f316a979e7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Font_camera\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f88029fb-2bb2-475d-99bd-23db67f3b98a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Front_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7ae290e2-b198-42b0-ae63-26537281d53b\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Full_name\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ddf9e753-db37-4385-b7c6-92f485b74185\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"GEO_POINT\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"GeoPoint\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            {\r\n               \"isUnique\":false,\r\n               \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n               \"propertyId\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\",\r\n               \"id\":\"37f93166-9fb3-40d8-a700-7d495bd9a6fc\"\r\n            }\r\n         ],\r\n         \"validationRule\":{\r\n            \"isUnique\":false,\r\n            \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n            \"propertyId\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\",\r\n            \"id\":\"37f93166-9fb3-40d8-a700-7d495bd9a6fc\"\r\n         },\r\n         \"isInherited\":true,\r\n         \"id\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Inger_multi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"af036906-3643-4f0b-9c27-505de22234cb\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"int1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"570a5567-7442-4202-b77f-d6e572a6bd91\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Internal_Storage_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1e94acae-f338-44a3-8216-194c01260628\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Memory_Card_Slot\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"3309e819-a77a-437c-915d-28450d55bab6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multi_int312\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1daa49e9-0ccd-4fe7-9323-84559a85a775\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"multiInt_product\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2341b9c1-7c80-42b4-b33d-22277e4c3a93\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multilanguage\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"66c1b244-21a6-44b0-9cb1-2f6d9b206a57\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"multilingual\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ac335397-6f6c-4ccd-8a28-6b10a5a4e841\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"multint_variation\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"bbe3bd7f-3880-42b1-ba6e-ed0402d0c871\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multint1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"lab1\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"lab2\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"lab3\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ef21c905-4c1d-4856-87ce-8da49d3e1147\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"multivalue\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"559e6cd9-923e-4178-8d2e-3183394a09e5\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"43bdd25d-1cbe-488e-8fad-553bdfeedc48\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"new_property1111\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7325d852-3793-43d5-a568-f110b6204c5f\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"NFC\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"29007dd4-2f23-417b-902c-8d6565615eea\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Operating_system\",\r\n         \"required\":true,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f5ac5fae-b80b-4f88-8042-e7f89c998eff\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Pixels_Per_Inch_ppi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"0e3029bd-dc69-4617-9163-78ac53ee8a6e\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Processor_Core_GHz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"85daf769-12c7-4135-9e8a-a0bcf74db4c3\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"RAM_Memory_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f06daf73-efd3-4b6d-9143-bf08a0715991\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Rear_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ee496813-1a59-4707-9816-85e639c55534\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"SIM_Card_Slots\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"552a29f0-fb63-4ea2-ba12-293cd8c9410c\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"test11\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"749bf945-0f15-45cc-8b98-68cf6d58500a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"testprop\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a617db33-096f-4bd1-8727-ac15302b15e6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Two_SIM_cards\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"b2e01868-4545-4159-8936-5f21a338cc2d\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Type_of_product\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Produkttyp\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Type_of_product\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Type de produit\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"300a6918-58bb-403a-8f1b-0a3ac38b05d9\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Video_Recording\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2d8f8a03-9c7d-464f-96b8-959e60e91214\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Waterproof\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a897f2bd-bbbf-4efb-9a8e-000d1568bd96\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Weight_oz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"13e822a6-9a07-4889-88df-52a3e7eef488\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Year_Released\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6283167f-5f8f-4210-9612-790d9b2eefa0\"\r\n      }\r\n   ],\r\n   \"imgSrc\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n\r\n\r\n   \"links\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"CatalogProduct\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"semanticUrl\":\"product_A\",\r\n         \"pageTitle\":\"product_A\",\r\n         \"metaDescription\":\"Test new description A\",\r\n         \"imageAltDescription\":\"altimage\",\r\n         \"metaKeywords\":\"product_A\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n         \"objectType\":\"CatalogProduct\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"de-DE\"\r\n      },\r\n      {\r\n         \"semanticUrl\":\"new-product3\",\r\n         \"pageTitle\":\"prod3\",\r\n         \"metaDescription\":\"newdescription\",\r\n         \"imageAltDescription\":\"altimage\",\r\n         \"metaKeywords\":\"product3\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n         \"objectType\":\"CatalogProduct\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\"\r\n      }\r\n   ],\r\n   \"reviews\":[\r\n      {\r\n         \"content\":\"Absolutly new content\",\r\n         \"reviewType\":\"FullReview\",\r\n         \"languageCode\":\"en-US\",\r\n         \"isInherited\":false\r\n      },\r\n      {\r\n         \"content\":\"Test\",\r\n         \"reviewType\":\"QuickReview\",\r\n         \"languageCode\":\"de-DE\",\r\n         \"isInherited\":false\r\n      }\r\n   ],\r\n   \"associations\":[\r\n      \r\n   ],\r\n   \"referencedAssociations\":[\r\n      \r\n   ],\r\n   \"outlines\":[\r\n      {\r\n         \"items\":[\r\n            {\r\n               \"id\":\"{{catalogQA}}\",\r\n               \"seoObjectType\":\"Catalog\",\r\n               \"name\":\"Electronics\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"{{categoryQA}}\",\r\n               \"seoObjectType\":\"Category\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"cell-phones\",\r\n                     \"objectId\":\"{{categoryQA}}\",\r\n                     \"objectType\":\"Category\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"73642cc7f2e44d92af13e94c79c73456\"\r\n                  }\r\n               ],\r\n               \"name\":\"Cell phones\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n               \"seoObjectType\":\"CatalogProduct\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"product_A\",\r\n                     \"pageTitle\":\"product_A\",\r\n                     \"metaDescription\":\"Test new description A\",\r\n                     \"imageAltDescription\":\"altimage\",\r\n                     \"metaKeywords\":\"product_A\",\r\n                     \"storeId\":\"Electronics\",\r\n                     \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"de-DE\",\r\n                     \"id\":\"753c2b40-60aa-434e-972d-3b1060b13fe8\"\r\n                  },\r\n                  {\r\n                     \"semanticUrl\":\"new-product3\",\r\n                     \"pageTitle\":\"prod3\",\r\n                     \"metaDescription\":\"newdescription\",\r\n                     \"imageAltDescription\":\"altimage\",\r\n                     \"metaKeywords\":\"product3\",\r\n                     \"storeId\":\"Electronics\",\r\n                     \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"9aa950f4-ee9c-4850-a9c7-11a348132efa\"\r\n                  }\r\n               ],\r\n               \"name\":\"NewProduct3\",\r\n               \"hasVirtualParent\":false\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"createdDate\":\"2021-11-11T11:06:13.5832208Z\",\r\n   \"modifiedDate\":\"2021-11-11T12:16:55.319113Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{productIdQA}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add assets to product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Check assets for the product\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.assets[0].name).to.equal(\"tv.jpg\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"code\":\"DDR-234304560\",\r\n   \"name\":\"NewProduct3\",\r\n   \"catalogId\":\"{{catalogQA}}\",\r\n   \"categoryId\":\"{{categoryQA}}\",\r\n   \"outline\":\"{{categoryQA}}\",\r\n   \"path\":\"Cell phones\",\r\n   \"isBuyable\":true,\r\n   \"isActive\":true,\r\n   \"trackInventory\":true,\r\n   \"maxQuantity\":0,\r\n   \"minQuantity\":0,\r\n   \"productType\":\"Physical\",\r\n   \"startDate\":\"2021-11-02T14:24:28.2675228Z\",\r\n   \"priority\":0,\r\n   \"properties\":[\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"1111111111111\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"31d6bf21-e2a7-41c8-baa9-484a89d4a8f7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"1DECIMAL\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a6d2111d-be02-4de6-b037-c98b4da988ee\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Brand\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"label=fr\",\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"name\":\"label=en\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"label=de\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"09fff0f7-a49a-45be-9a39-0215ed72eaae\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Catalog_long\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"8a0ad192-ccbf-4c8d-9155-d3cd6d1d3d77\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"category_decimal\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6e9f37df-3caa-42b0-b556-3b5162793800\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Category_long\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"86727f51-816b-425a-9754-bf0333ba23d4\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Color\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Color\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Farber\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"87fd1cec-79c2-4652-83b4-36e241ede571\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Decimal_all_incl\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"cec81ef0-1de5-4fb7-a05e-d9cf2191ae61\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"dictionary\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"de\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"en\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fe55902d-b298-4aef-9e18-5f0ebfaf8978\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Display_size\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Bildschirmgröße\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Display size\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fa4a86b5-d85b-464b-b27c-00f316a979e7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Font_camera\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f88029fb-2bb2-475d-99bd-23db67f3b98a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Front_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7ae290e2-b198-42b0-ae63-26537281d53b\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Full_name\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ddf9e753-db37-4385-b7c6-92f485b74185\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"GEO_POINT\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"GeoPoint\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            {\r\n               \"isUnique\":false,\r\n               \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n               \"propertyId\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\",\r\n               \"id\":\"37f93166-9fb3-40d8-a700-7d495bd9a6fc\"\r\n            }\r\n         ],\r\n         \"validationRule\":{\r\n            \"isUnique\":false,\r\n            \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n            \"propertyId\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\",\r\n            \"id\":\"37f93166-9fb3-40d8-a700-7d495bd9a6fc\"\r\n         },\r\n         \"isInherited\":true,\r\n         \"id\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Inger_multi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"af036906-3643-4f0b-9c27-505de22234cb\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"int1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"570a5567-7442-4202-b77f-d6e572a6bd91\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Internal_Storage_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1e94acae-f338-44a3-8216-194c01260628\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Memory_Card_Slot\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"3309e819-a77a-437c-915d-28450d55bab6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multi_int312\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1daa49e9-0ccd-4fe7-9323-84559a85a775\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"multiInt_product\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2341b9c1-7c80-42b4-b33d-22277e4c3a93\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multilanguage\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"66c1b244-21a6-44b0-9cb1-2f6d9b206a57\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"multilingual\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ac335397-6f6c-4ccd-8a28-6b10a5a4e841\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"multint_variation\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"bbe3bd7f-3880-42b1-ba6e-ed0402d0c871\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multint1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"lab1\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"lab2\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"lab3\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ef21c905-4c1d-4856-87ce-8da49d3e1147\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"multivalue\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"559e6cd9-923e-4178-8d2e-3183394a09e5\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"43bdd25d-1cbe-488e-8fad-553bdfeedc48\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"new_property1111\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7325d852-3793-43d5-a568-f110b6204c5f\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"NFC\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"29007dd4-2f23-417b-902c-8d6565615eea\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Operating_system\",\r\n         \"required\":true,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f5ac5fae-b80b-4f88-8042-e7f89c998eff\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Pixels_Per_Inch_ppi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"0e3029bd-dc69-4617-9163-78ac53ee8a6e\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Processor_Core_GHz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"85daf769-12c7-4135-9e8a-a0bcf74db4c3\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"RAM_Memory_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f06daf73-efd3-4b6d-9143-bf08a0715991\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Rear_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ee496813-1a59-4707-9816-85e639c55534\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"SIM_Card_Slots\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"552a29f0-fb63-4ea2-ba12-293cd8c9410c\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"test11\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"749bf945-0f15-45cc-8b98-68cf6d58500a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"testprop\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a617db33-096f-4bd1-8727-ac15302b15e6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Two_SIM_cards\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"b2e01868-4545-4159-8936-5f21a338cc2d\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Type_of_product\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Produkttyp\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Type_of_product\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Type de produit\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"300a6918-58bb-403a-8f1b-0a3ac38b05d9\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Video_Recording\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2d8f8a03-9c7d-464f-96b8-959e60e91214\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Waterproof\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a897f2bd-bbbf-4efb-9a8e-000d1568bd96\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Weight_oz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"13e822a6-9a07-4889-88df-52a3e7eef488\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Year_Released\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6283167f-5f8f-4210-9612-790d9b2eefa0\"\r\n      }\r\n   ],\r\n   \"imgSrc\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n\r\n   \"assets\":[\r\n      {\r\n         \"mimeType\":\"image/jpeg\",\r\n         \"size\":5419,\r\n         \"readableSize\":\"5 KB\",\r\n         \"url\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv.jpg\",\r\n         \"description\":\"Smart TV\",\r\n         \"sortOrder\":0,\r\n         \"typeId\":\"Asset\",\r\n         \"group\":\"Images\",\r\n         \"name\":\"tv.jpg\",\r\n         \"languageCode\":\"de-DE\",\r\n         \"isInherited\":false,\r\n         \"seoObjectType\":\"Asset\",\r\n         \"seoInfos\":[\r\n            {\r\n               \"name\":\"tv.jpg\",\r\n               \"semanticUrl\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv.jpg\",\r\n               \"metaDescription\":\"Smart TV\",\r\n               \"isActive\":true,\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"mimeType\":\"image/jpeg\",\r\n         \"size\":4645,\r\n         \"readableSize\":\"4 KB\",\r\n         \"url\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv_216x216.jpg\",\r\n         \"sortOrder\":0,\r\n         \"typeId\":\"Asset\",\r\n         \"name\":\"tv_216x216.jpg\",\r\n         \"isInherited\":false,\r\n         \"seoObjectType\":\"Asset\",\r\n         \"seoInfos\":[\r\n            {\r\n               \"name\":\"tv_216x216.jpg\",\r\n               \"semanticUrl\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv_216x216.jpg\",\r\n               \"isActive\":true\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"links\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"CatalogProduct\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"semanticUrl\":\"product_A\",\r\n         \"pageTitle\":\"product_A\",\r\n         \"metaDescription\":\"Test new description A\",\r\n         \"imageAltDescription\":\"altimage\",\r\n         \"metaKeywords\":\"product_A\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n         \"objectType\":\"CatalogProduct\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"de-DE\"\r\n      },\r\n      {\r\n         \"semanticUrl\":\"new-product3\",\r\n         \"pageTitle\":\"prod3\",\r\n         \"metaDescription\":\"newdescription\",\r\n         \"imageAltDescription\":\"altimage\",\r\n         \"metaKeywords\":\"product3\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n         \"objectType\":\"CatalogProduct\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\"\r\n      }\r\n   ],\r\n   \"reviews\":[\r\n      {\r\n         \"content\":\"Absolutly new content\",\r\n         \"reviewType\":\"QuickReview\",\r\n         \"languageCode\":\"en-US\",\r\n         \"isInherited\":false\r\n      },\r\n      {\r\n         \"content\":\"Test\",\r\n         \"reviewType\":\"QuickReview\",\r\n         \"languageCode\":\"de-DE\",\r\n         \"isInherited\":false\r\n      }\r\n   ],\r\n   \"associations\":[\r\n      \r\n   ],\r\n   \"referencedAssociations\":[\r\n      \r\n   ],\r\n   \"outlines\":[\r\n      {\r\n         \"items\":[\r\n            {\r\n               \"id\":\"{{catalogQA}}\",\r\n               \"seoObjectType\":\"Catalog\",\r\n               \"name\":\"Electronics\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"{{categoryQA}}\",\r\n               \"seoObjectType\":\"Category\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"cell-phones\",\r\n                     \"objectId\":\"{{categoryQA}}\",\r\n                     \"objectType\":\"Category\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"73642cc7f2e44d92af13e94c79c73456\"\r\n                  }\r\n               ],\r\n               \"name\":\"Cell phones\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n               \"seoObjectType\":\"CatalogProduct\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"product_A\",\r\n                     \"pageTitle\":\"product_A\",\r\n                     \"metaDescription\":\"Test new description A\",\r\n                     \"imageAltDescription\":\"altimage\",\r\n                     \"metaKeywords\":\"product_A\",\r\n                     \"storeId\":\"Electronics\",\r\n                     \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"de-DE\",\r\n                     \"id\":\"753c2b40-60aa-434e-972d-3b1060b13fe8\"\r\n                  },\r\n                  {\r\n                     \"semanticUrl\":\"new-product3\",\r\n                     \"pageTitle\":\"prod3\",\r\n                     \"metaDescription\":\"newdescription\",\r\n                     \"imageAltDescription\":\"altimage\",\r\n                     \"metaKeywords\":\"product3\",\r\n                     \"storeId\":\"Electronics\",\r\n                     \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"9aa950f4-ee9c-4850-a9c7-11a348132efa\"\r\n                  }\r\n               ],\r\n               \"name\":\"NewProduct3\",\r\n               \"hasVirtualParent\":false\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"createdDate\":\"2021-11-11T11:06:13.5832208Z\",\r\n   \"modifiedDate\":\"2021-11-11T12:16:55.319113Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{productIdQA}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add images to product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Check images for the product\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.images[0].name).to.equal(\"New_name_en\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"code\":\"DDR-234304560\",\r\n   \"name\":\"NewProduct3\",\r\n   \"catalogId\":\"{{catalogQA}}\",\r\n   \"categoryId\":\"{{categoryQA}}\",\r\n   \"outline\":\"{{categoryQA}}\",\r\n   \"path\":\"Cell phones\",\r\n   \"isBuyable\":true,\r\n   \"isActive\":true,\r\n   \"trackInventory\":true,\r\n   \"maxQuantity\":0,\r\n   \"minQuantity\":0,\r\n   \"productType\":\"Physical\",\r\n   \"startDate\":\"2021-11-02T14:24:28.2675228Z\",\r\n   \"priority\":0,\r\n   \"properties\":[\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"1111111111111\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"31d6bf21-e2a7-41c8-baa9-484a89d4a8f7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"1DECIMAL\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a6d2111d-be02-4de6-b037-c98b4da988ee\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Brand\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"label=fr\",\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"name\":\"label=en\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"label=de\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"09fff0f7-a49a-45be-9a39-0215ed72eaae\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Catalog_long\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"8a0ad192-ccbf-4c8d-9155-d3cd6d1d3d77\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"category_decimal\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6e9f37df-3caa-42b0-b556-3b5162793800\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Category_long\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"86727f51-816b-425a-9754-bf0333ba23d4\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Color\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Color\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Farber\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"87fd1cec-79c2-4652-83b4-36e241ede571\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Decimal_all_incl\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"cec81ef0-1de5-4fb7-a05e-d9cf2191ae61\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"dictionary\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"de\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"en\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fe55902d-b298-4aef-9e18-5f0ebfaf8978\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Display_size\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Bildschirmgröße\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Display size\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fa4a86b5-d85b-464b-b27c-00f316a979e7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Font_camera\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f88029fb-2bb2-475d-99bd-23db67f3b98a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Front_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7ae290e2-b198-42b0-ae63-26537281d53b\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Full_name\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ddf9e753-db37-4385-b7c6-92f485b74185\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"GEO_POINT\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"GeoPoint\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            {\r\n               \"isUnique\":false,\r\n               \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n               \"propertyId\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\",\r\n               \"id\":\"37f93166-9fb3-40d8-a700-7d495bd9a6fc\"\r\n            }\r\n         ],\r\n         \"validationRule\":{\r\n            \"isUnique\":false,\r\n            \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n            \"propertyId\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\",\r\n            \"id\":\"37f93166-9fb3-40d8-a700-7d495bd9a6fc\"\r\n         },\r\n         \"isInherited\":true,\r\n         \"id\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Inger_multi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"af036906-3643-4f0b-9c27-505de22234cb\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"int1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"570a5567-7442-4202-b77f-d6e572a6bd91\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Internal_Storage_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1e94acae-f338-44a3-8216-194c01260628\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Memory_Card_Slot\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"3309e819-a77a-437c-915d-28450d55bab6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multi_int312\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1daa49e9-0ccd-4fe7-9323-84559a85a775\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"multiInt_product\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2341b9c1-7c80-42b4-b33d-22277e4c3a93\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multilanguage\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"66c1b244-21a6-44b0-9cb1-2f6d9b206a57\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"multilingual\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ac335397-6f6c-4ccd-8a28-6b10a5a4e841\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"multint_variation\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"bbe3bd7f-3880-42b1-ba6e-ed0402d0c871\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multint1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"lab1\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"lab2\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"lab3\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ef21c905-4c1d-4856-87ce-8da49d3e1147\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"multivalue\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"559e6cd9-923e-4178-8d2e-3183394a09e5\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"43bdd25d-1cbe-488e-8fad-553bdfeedc48\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"new_property1111\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7325d852-3793-43d5-a568-f110b6204c5f\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"NFC\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"29007dd4-2f23-417b-902c-8d6565615eea\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Operating_system\",\r\n         \"required\":true,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f5ac5fae-b80b-4f88-8042-e7f89c998eff\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Pixels_Per_Inch_ppi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"0e3029bd-dc69-4617-9163-78ac53ee8a6e\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Processor_Core_GHz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"85daf769-12c7-4135-9e8a-a0bcf74db4c3\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"RAM_Memory_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f06daf73-efd3-4b6d-9143-bf08a0715991\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Rear_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ee496813-1a59-4707-9816-85e639c55534\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"SIM_Card_Slots\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"552a29f0-fb63-4ea2-ba12-293cd8c9410c\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"test11\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"749bf945-0f15-45cc-8b98-68cf6d58500a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"testprop\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a617db33-096f-4bd1-8727-ac15302b15e6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Two_SIM_cards\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"b2e01868-4545-4159-8936-5f21a338cc2d\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Type_of_product\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Produkttyp\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Type_of_product\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Type de produit\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"300a6918-58bb-403a-8f1b-0a3ac38b05d9\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Video_Recording\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2d8f8a03-9c7d-464f-96b8-959e60e91214\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Waterproof\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a897f2bd-bbbf-4efb-9a8e-000d1568bd96\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Weight_oz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"13e822a6-9a07-4889-88df-52a3e7eef488\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Year_Released\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6283167f-5f8f-4210-9612-790d9b2eefa0\"\r\n      }\r\n   ],\r\n   \"imgSrc\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n   \"images\":[\r\n      {\r\n         \"altText\":\"TV\",\r\n         \"relativeUrl\":\"/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n         \"url\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n         \"description\":\"TV-set\",\r\n         \"sortOrder\":1,\r\n         \"typeId\":\"Image\",\r\n         \"group\":\"images\",\r\n         \"name\":\"New_name_en\",\r\n         \"languageCode\":\"en-US\",\r\n         \"isInherited\":false,\r\n         \"seoObjectType\":\"Image\",\r\n         \"seoInfos\":[\r\n            {\r\n               \"name\":\"New_name_en\",\r\n               \"semanticUrl\":\"/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n               \"metaDescription\":\"TV-set\",\r\n               \"imageAltDescription\":\"TV\",\r\n               \"isActive\":true,\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"altText\":\"Samsung\",\r\n         \"relativeUrl\":\"/catalog/SOXBR49X830C/1424805855000_1120442_168x168.jpg\",\r\n         \"url\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/SOXBR49X830C/1424805855000_1120442_168x168.jpg\",\r\n         \"description\":\"Samsung\",\r\n         \"sortOrder\":2,\r\n         \"typeId\":\"Image\",\r\n         \"group\":\"images\",\r\n         \"name\":\"New_name_de\",\r\n         \"languageCode\":\"de-DE\",\r\n         \"isInherited\":false,\r\n         \"seoObjectType\":\"Image\",\r\n         \"seoInfos\":[\r\n            {\r\n               \"name\":\"New_name_de\",\r\n               \"semanticUrl\":\"/catalog/SOXBR49X830C/1424805855000_1120442_168x168.jpg\",\r\n               \"metaDescription\":\"Samsung\",\r\n               \"imageAltDescription\":\"Samsung\",\r\n               \"isActive\":true,\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"assets\":[\r\n      {\r\n         \"mimeType\":\"image/jpeg\",\r\n         \"size\":5419,\r\n         \"readableSize\":\"5 KB\",\r\n         \"url\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv.jpg\",\r\n         \"description\":\"Smart TV\",\r\n         \"sortOrder\":0,\r\n         \"typeId\":\"Asset\",\r\n         \"group\":\"Images\",\r\n         \"name\":\"tv.jpg\",\r\n         \"languageCode\":\"de-DE\",\r\n         \"isInherited\":false,\r\n         \"seoObjectType\":\"Asset\",\r\n         \"seoInfos\":[\r\n            {\r\n               \"name\":\"tv.jpg\",\r\n               \"semanticUrl\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv.jpg\",\r\n               \"metaDescription\":\"Smart TV\",\r\n               \"isActive\":true,\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"mimeType\":\"image/jpeg\",\r\n         \"size\":4645,\r\n         \"readableSize\":\"4 KB\",\r\n         \"url\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv_216x216.jpg\",\r\n         \"sortOrder\":0,\r\n         \"typeId\":\"Asset\",\r\n         \"name\":\"tv_216x216.jpg\",\r\n         \"isInherited\":false,\r\n         \"seoObjectType\":\"Asset\",\r\n         \"seoInfos\":[\r\n            {\r\n               \"name\":\"tv_216x216.jpg\",\r\n               \"semanticUrl\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv_216x216.jpg\",\r\n               \"isActive\":true\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"links\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"CatalogProduct\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"semanticUrl\":\"product_A\",\r\n         \"pageTitle\":\"product_A\",\r\n         \"metaDescription\":\"Test new description A\",\r\n         \"imageAltDescription\":\"altimage\",\r\n         \"metaKeywords\":\"product_A\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n         \"objectType\":\"CatalogProduct\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"de-DE\"\r\n      },\r\n      {\r\n         \"semanticUrl\":\"new-product3\",\r\n         \"pageTitle\":\"prod3\",\r\n         \"metaDescription\":\"newdescription\",\r\n         \"imageAltDescription\":\"altimage\",\r\n         \"metaKeywords\":\"product3\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n         \"objectType\":\"CatalogProduct\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\"\r\n      }\r\n   ],\r\n   \"reviews\":[\r\n      {\r\n         \"content\":\"Absolutly new content\",\r\n         \"reviewType\":\"QuickReview\",\r\n         \"languageCode\":\"en-US\",\r\n         \"isInherited\":false\r\n      },\r\n      {\r\n         \"content\":\"Test\",\r\n         \"reviewType\":\"QuickReview\",\r\n         \"languageCode\":\"de-DE\",\r\n         \"isInherited\":false\r\n      }\r\n   ],\r\n   \"associations\":[\r\n      \r\n   ],\r\n   \"referencedAssociations\":[\r\n      \r\n   ],\r\n   \"outlines\":[\r\n      {\r\n         \"items\":[\r\n            {\r\n               \"id\":\"{{catalogQA}}\",\r\n               \"seoObjectType\":\"Catalog\",\r\n               \"name\":\"Electronics\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"{{categoryQA}}\",\r\n               \"seoObjectType\":\"Category\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"cell-phones\",\r\n                     \"objectId\":\"{{categoryQA}}\",\r\n                     \"objectType\":\"Category\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"73642cc7f2e44d92af13e94c79c73456\"\r\n                  }\r\n               ],\r\n               \"name\":\"Cell phones\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n               \"seoObjectType\":\"CatalogProduct\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"product_A\",\r\n                     \"pageTitle\":\"product_A\",\r\n                     \"metaDescription\":\"Test new description A\",\r\n                     \"imageAltDescription\":\"altimage\",\r\n                     \"metaKeywords\":\"product_A\",\r\n                     \"storeId\":\"Electronics\",\r\n                     \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"de-DE\",\r\n                     \"id\":\"753c2b40-60aa-434e-972d-3b1060b13fe8\"\r\n                  },\r\n                  {\r\n                     \"semanticUrl\":\"new-product3\",\r\n                     \"pageTitle\":\"prod3\",\r\n                     \"metaDescription\":\"newdescription\",\r\n                     \"imageAltDescription\":\"altimage\",\r\n                     \"metaKeywords\":\"product3\",\r\n                     \"storeId\":\"Electronics\",\r\n                     \"objectId\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"9aa950f4-ee9c-4850-a9c7-11a348132efa\"\r\n                  }\r\n               ],\r\n               \"name\":\"NewProduct3\",\r\n               \"hasVirtualParent\":false\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"createdDate\":\"2021-11-11T11:06:13.5832208Z\",\r\n   \"modifiedDate\":\"2021-11-11T12:16:55.319113Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{productIdQA}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add variations to the product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Check variations for the product\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.code).to.equal(\"ZZI-60862954\");\r",
													"pm.expect (jsonData.name).to.equal(\"Variation_Product3\");\r",
													"pm.collectionVariables.set(\"variationId\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"ZZI-60862954\",\r\n  \"name\": \"Variation_Product3\",\r\n  \"catalogId\": \"{{catalogQA}}\",\r\n  \"categoryId\": \"{{categoryQA}}\",\r\n  \"outline\": \"{{categoryQA}}\",\r\n  \"path\": \"Cell phones\",\r\n  \"titularItemId\": \"{{productIdQA}}\",\r\n  \"mainProductId\": \"{{productIdQA}}\",\r\n  \"isBuyable\": true,\r\n  \"isActive\": true,\r\n  \"trackInventory\": true,\r\n  \"maxQuantity\": 0,\r\n  \"minQuantity\": 0,\r\n  \"productType\": \"Physical\",\r\n  \"startDate\": \"2021-11-03T14:34:45.4236835Z\",\r\n  \"priority\": 0,\r\n  \"properties\": [\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"1111111111111\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": true,\r\n      \"multilanguage\": true,\r\n      \"hidden\": false,\r\n      \"valueType\": \"LongText\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"fr-FR\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"31d6bf21-e2a7-41c8-baa9-484a89d4a8f7\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"Brand\",\r\n      \"required\": false,\r\n      \"dictionary\": true,\r\n      \"multivalue\": true,\r\n      \"multilanguage\": true,\r\n      \"hidden\": false,\r\n      \"valueType\": \"LongText\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"fr-FR\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"09fff0f7-a49a-45be-9a39-0215ed72eaae\"\r\n    },\r\n    {\r\n      \"isReadOnly\": true,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"Catalog_long\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": true,\r\n      \"hidden\": false,\r\n      \"valueType\": \"LongText\",\r\n      \"type\": \"Catalog\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"fr-FR\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"8a0ad192-ccbf-4c8d-9155-d3cd6d1d3d77\"\r\n    },\r\n    {\r\n      \"isReadOnly\": true,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"category_decimal\",\r\n      \"required\": false,\r\n      \"dictionary\": true,\r\n      \"multivalue\": true,\r\n      \"multilanguage\": true,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Number\",\r\n      \"type\": \"Category\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"6e9f37df-3caa-42b0-b556-3b5162793800\"\r\n    },\r\n    {\r\n      \"isReadOnly\": true,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Category_long\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"LongText\",\r\n      \"type\": \"Category\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"86727f51-816b-425a-9754-bf0333ba23d4\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Color\",\r\n      \"required\": false,\r\n      \"dictionary\": true,\r\n      \"multivalue\": true,\r\n      \"multilanguage\": true,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Variation\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"name\": \"Color\",\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"name\": \"Farber\",\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"87fd1cec-79c2-4652-83b4-36e241ede571\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"dictionary\",\r\n      \"required\": false,\r\n      \"dictionary\": true,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"name\": \"de\",\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"name\": \"en\",\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"fe55902d-b298-4aef-9e18-5f0ebfaf8978\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Display_size\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Number\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"name\": \"Bildschirmgröße\",\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"name\": \"Display size\",\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"fa4a86b5-d85b-464b-b27c-00f316a979e7\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"Font_camera\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Boolean\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"f88029fb-2bb2-475d-99bd-23db67f3b98a\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Front_camera_MP\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Number\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"7ae290e2-b198-42b0-ae63-26537281d53b\"\r\n    },\r\n    {\r\n      \"isReadOnly\": true,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"Full_name\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Category\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"ddf9e753-db37-4385-b7c6-92f485b74185\"\r\n    },\r\n    {\r\n      \"isReadOnly\": true,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"Inger_multi\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Integer\",\r\n      \"type\": \"Catalog\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"fr-FR\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"af036906-3643-4f0b-9c27-505de22234cb\"\r\n    },\r\n    {\r\n      \"isReadOnly\": true,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"int1\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Integer\",\r\n      \"type\": \"Catalog\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"fr-FR\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"570a5567-7442-4202-b77f-d6e572a6bd91\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Internal_Storage_GB\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Number\",\r\n      \"type\": \"Variation\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"1e94acae-f338-44a3-8216-194c01260628\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Memory_Card_Slot\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Boolean\",\r\n      \"type\": \"Variation\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"3309e819-a77a-437c-915d-28450d55bab6\"\r\n    },\r\n    {\r\n      \"isReadOnly\": true,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"Multi_int312\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": true,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Integer\",\r\n      \"type\": \"Catalog\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"fr-FR\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"1daa49e9-0ccd-4fe7-9323-84559a85a775\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"multiInt_product\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": true,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Integer\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"fr-FR\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"2341b9c1-7c80-42b4-b33d-22277e4c3a93\"\r\n    },\r\n    {\r\n      \"isReadOnly\": true,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"Multilanguage\",\r\n      \"required\": false,\r\n      \"dictionary\": true,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": true,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Catalog\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"fr-FR\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"66c1b244-21a6-44b0-9cb1-2f6d9b206a57\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"multilingual\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": true,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"ac335397-6f6c-4ccd-8a28-6b10a5a4e841\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"multint_variation\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": true,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Integer\",\r\n      \"type\": \"Variation\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"fr-FR\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"bbe3bd7f-3880-42b1-ba6e-ed0402d0c871\"\r\n    },\r\n    {\r\n      \"isReadOnly\": true,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"Multint1\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": true,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Integer\",\r\n      \"type\": \"Category\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"name\": \"lab1\",\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"name\": \"lab2\",\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"name\": \"lab3\",\r\n          \"languageCode\": \"fr-FR\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"ef21c905-4c1d-4856-87ce-8da49d3e1147\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"multivalue\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": true,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"559e6cd9-923e-4178-8d2e-3183394a09e5\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"new_property\",\r\n      \"required\": false,\r\n      \"dictionary\": true,\r\n      \"multivalue\": true,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"LongText\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"fr-FR\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"43bdd25d-1cbe-488e-8fad-553bdfeedc48\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"new_property1111\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"LongText\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"fr-FR\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"7325d852-3793-43d5-a568-f110b6204c5f\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"NFC\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Boolean\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"29007dd4-2f23-417b-902c-8d6565615eea\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Operating_system\",\r\n      \"required\": true,\r\n      \"dictionary\": true,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"f5ac5fae-b80b-4f88-8042-e7f89c998eff\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Pixels_Per_Inch_ppi\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Number\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"0e3029bd-dc69-4617-9163-78ac53ee8a6e\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Processor_Core_GHz\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Variation\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"85daf769-12c7-4135-9e8a-a0bcf74db4c3\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"RAM_Memory_GB\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Number\",\r\n      \"type\": \"Variation\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"f06daf73-efd3-4b6d-9143-bf08a0715991\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Rear_camera_MP\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Number\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"ee496813-1a59-4707-9816-85e639c55534\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"SIM_Card_Slots\",\r\n      \"required\": false,\r\n      \"dictionary\": true,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"552a29f0-fb63-4ea2-ba12-293cd8c9410c\"\r\n    },\r\n    {\r\n      \"isReadOnly\": true,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"test11\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Catalog\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"749bf945-0f15-45cc-8b98-68cf6d58500a\"\r\n    },\r\n    {\r\n      \"isReadOnly\": true,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"testprop\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Catalog\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"a617db33-096f-4bd1-8727-ac15302b15e6\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Two_SIM_cards\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Boolean\",\r\n      \"type\": \"Variation\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"b2e01868-4545-4159-8936-5f21a338cc2d\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"name\": \"Type_of_product\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": true,\r\n      \"multilanguage\": true,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Variation\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"name\": \"Produkttyp\",\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"name\": \"Type_of_product\",\r\n          \"languageCode\": \"en-US\"\r\n        },\r\n        {\r\n          \"name\": \"Type de produit\",\r\n          \"languageCode\": \"fr-FR\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"300a6918-58bb-403a-8f1b-0a3ac38b05d9\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Video_Recording\",\r\n      \"required\": false,\r\n      \"dictionary\": true,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"ShortText\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"2d8f8a03-9c7d-464f-96b8-959e60e91214\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Waterproof\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Boolean\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"a897f2bd-bbbf-4efb-9a8e-000d1568bd96\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Weight_oz\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Number\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"13e822a6-9a07-4889-88df-52a3e7eef488\"\r\n    },\r\n    {\r\n      \"isReadOnly\": false,\r\n      \"isManageable\": true,\r\n      \"isNew\": false,\r\n      \"catalogId\": \"{{catalogQA}}\",\r\n      \"categoryId\": \"{{categoryQA}}\",\r\n      \"name\": \"Year_Released\",\r\n      \"required\": false,\r\n      \"dictionary\": false,\r\n      \"multivalue\": false,\r\n      \"multilanguage\": false,\r\n      \"hidden\": false,\r\n      \"valueType\": \"Number\",\r\n      \"type\": \"Product\",\r\n      \"values\": [],\r\n      \"attributes\": [],\r\n      \"displayNames\": [\r\n        {\r\n          \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n          \"languageCode\": \"en-US\"\r\n        }\r\n      ],\r\n      \"validationRules\": [],\r\n      \"isInherited\": true,\r\n      \"id\": \"6283167f-5f8f-4210-9612-790d9b2eefa0\"\r\n    }\r\n  ],\r\n  \"images\": [\r\n    {\r\n      \"size\": 5576,\r\n      \"contentType\": \"image/jpeg\",\r\n      \"type\": \"blob\",\r\n      \"name\": \"tv_md.jpg\",\r\n      \"url\": \"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv_md.jpg\",\r\n      \"relativeUrl\": \"/catalog/Televisions/tv_md.jpg\",\r\n      \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n      \"modifiedDate\": \"2021-10-01T00:05:24.4737604Z\",\r\n      \"isImage\": true,\r\n      \"sortOrder\": 1,\r\n      \"group\": \"images\",\r\n      \"languageCode\": \"de-DE\"\r\n    },\r\n    {\r\n      \"size\": 6962,\r\n      \"contentType\": \"image/jpeg\",\r\n      \"type\": \"blob\",\r\n      \"name\": \"tv_lg.jpg\",\r\n      \"url\": \"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv_lg.jpg\",\r\n      \"relativeUrl\": \"/catalog/Televisions/tv_lg.jpg\",\r\n      \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n      \"modifiedDate\": \"2021-10-01T00:05:24.4537604Z\",\r\n      \"isImage\": true,\r\n      \"sortOrder\": 2,\r\n      \"group\": \"images\",\r\n      \"languageCode\": \"en-US\"\r\n    }\r\n  ],\r\n  \"assets\": [],\r\n  \"links\": [],\r\n  \"seoObjectType\": \"CatalogProduct\",\r\n  \"seoInfos\": [\r\n    {\r\n      \"semanticUrl\": \"variationproduct3\",\r\n      \"objectId\": \"{{productIdQA}}\",\r\n      \"objectType\": \"CatalogProduct\",\r\n      \"isActive\": true,\r\n      \"languageCode\": \"en-US\",\r\n      \"id\": \"c45cc59b-2e5e-4f1e-8557-7b6741e9a0c6\"\r\n    }\r\n  ],\r\n  \"reviews\": [\r\n    {\r\n      \"languageCode\": \"en-US\",\r\n      \"reviewType\": \"FullReview\",\r\n      \"content\": \"variation text\"\r\n    },\r\n    {\r\n      \"languageCode\": \"de-DE\",\r\n      \"reviewType\": \"QuickReview\",\r\n      \"content\": \"var_test\"\r\n    }\r\n  ],\r\n  \"associations\": [],\r\n  \"referencedAssociations\": [],\r\n  \"outlines\": [\r\n    {\r\n      \"items\": [\r\n        {\r\n          \"id\": \"{{catalogQA}}\",\r\n          \"seoObjectType\": \"Catalog\",\r\n          \"name\": \"Electronics\",\r\n          \"hasVirtualParent\": false\r\n        },\r\n        {\r\n          \"id\": \"{{categoryQA}}\",\r\n          \"seoObjectType\": \"Category\",\r\n          \"seoInfos\": [\r\n            {\r\n              \"semanticUrl\": \"cell-phones\",\r\n              \"objectId\": \"{{categoryQA}}\",\r\n              \"objectType\": \"Category\",\r\n              \"isActive\": true,\r\n              \"languageCode\": \"en-US\",\r\n              \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n            }\r\n          ],\r\n          \"name\": \"Cell phones\",\r\n          \"hasVirtualParent\": false\r\n        },\r\n        {\r\n          \"id\": \"{{productIdQA}}\",\r\n          \"seoObjectType\": \"CatalogProduct\",\r\n          \"seoInfos\": [\r\n            {\r\n              \"semanticUrl\": \"variationproduct3\",\r\n              \"objectId\": \"{{productIdQA}}\",\r\n              \"objectType\": \"CatalogProduct\",\r\n              \"isActive\": true,\r\n              \"languageCode\": \"en-US\",\r\n              \"id\": \"c45cc59b-2e5e-4f1e-8557-7b6741e9a0c6\"\r\n            }\r\n          ],\r\n          \"name\": \"Variation_Product3\",\r\n          \"hasVirtualParent\": false\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"isInherited\": false,\r\n  \"createdDate\": \"2021-11-03T14:34:45.4252915Z\",\r\n  \"modifiedDate\": \"2021-11-03T14:34:45.4252915Z\",\r\n  \"createdBy\": \"admin\",\r\n  \"modifiedBy\": \"admin\",\r\n  \"id\": \"c37b75c0-1d93-4ce5-a709-6640a25505bf\",\r\n  \"_priority\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Index product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Check Index\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{productIdQA}}\"\r\n        ]\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/search/indexes/index",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"search",
												"indexes",
												"index"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get specific item with variation by item id and store id. Full information",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"C265592 Check specific item with variation\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.variations[0].id).to.be.equal(pm.collectionVariables.get(\"variationId\"));\r",
													"pm.expect (jsonData.data.product.variations[0].name).to.be.equal(\"Variation_Product3\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 5000); "
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableCookies": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query {\r\n  product(id: \"{{productIdQA}}\", storeId: \"Electronics\") {\r\n    id\r\n    name\r\n    code\r\n    variations {\r\n      id\r\n      name\r\n      code\r\n      properties{\r\n        name\r\n        value\r\n      }\r\n      images {\r\n        id\r\n        name\r\n        url\r\n      }\r\n      prices {\r\n        pricelistId\r\n        list {\r\n          amount\r\n        }\r\n        sale {\r\n          amount\r\n        }\r\n        discountAmount {\r\n          amount\r\n        }\r\n      }\r\n      assets {\r\n        id\r\n        url\r\n        cultureName\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get concrete variation items by item id and store id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"C261607 Check concrete variation items by item id and store id\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.id).to.be.equal(pm.collectionVariables.get(\"variationId\"));\r",
													"pm.expect (jsonData.data.product.name).to.be.equal(\"Variation_Product3\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query {\r\n  product(id: \"{{variationId}}\", storeId: \"Electronics\") {\r\n    id\r\n    name\r\n    code\r\n    prices {\r\n      pricelistId\r\n      list {\r\n        amount\r\n      }\r\n      sale {\r\n        amount\r\n      }\r\n      discountAmount {\r\n        amount\r\n      }\r\n    }\r\n    properties {\r\n      name\r\n      value\r\n    }\r\n    images {\r\n      id\r\n      name\r\n      url\r\n    }\r\n    assets {\r\n      id\r\n      url\r\n      cultureName\r\n    }\r\n    seoInfo {\r\n      semanticUrl\r\n      metaDescription\r\n      metaKeywords\r\n    }\r\n  }\r\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product's reviews by cultureName(en-US)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"C261691 Check product's review by cultureName (en-US)\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.descriptions[0].languageCode).to.be.equal(\"en-US\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\n  product(\r\n    id: \"{{productIdQA}}\"\r\n    storeId: \"Electronics\"\r\n    cultureName: \"en-US\"\r\n    currencyCode: \"USD\")\r\n    {\r\n    id\r\n    code\r\n    descriptions\r\n    {\r\n      content\r\n      reviewType\r\n      languageCode\r\n    }\r\n  }\r\n}\r\n\r\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product review by cultureName(de-DE)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"C261694 Check product's review by cultureName (de-DE)\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.description.languageCode).to.be.equal(\"de-DE\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\n  product(\r\n    id: \"{{productIdQA}}\"\r\n    storeId: \"Electronics\"\r\n    cultureName: \"de-DE\"\r\n    currencyCode: \"USD\")\r\n    {\r\n    id\r\n    code\r\n    description\r\n    {\r\n      content\r\n      reviewType\r\n      languageCode\r\n    }\r\n  }\r\n}\r\n\r\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all product images",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"C261709 Check all product images\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.images[0,1].cultureName).to.be.equal(\"de-DE\",\"en-US\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\n  product(\r\n    id: \"{{productIdQA}}\"\r\n    storeId: \"Electronics\"\r\n    currencyCode: \"USD\")\r\n    {\r\n    images\r\n    {\r\n      id\r\n      name\r\n      cultureName\r\n       }\r\n  }\r\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product images by cultureName(de-DE)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"C328961 Check get product images by cultureName(de-DE)\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.images[0].cultureName).to.be.equal(\"de-DE\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\n  product(\r\n    id: \"{{productIdQA}}\"\r\n    storeId: \"Electronics\"\r\n    cultureName: \"de-DE\"\r\n    currencyCode: \"USD\")\r\n    {\r\n    images\r\n    {\r\n      id\r\n      name\r\n      cultureName\r\n    }\r\n  }\r\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update images name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Check update images for the product\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.images[0]).to.be.not.empty;\r",
													"pm.expect (jsonData.images[0].name).to.equal(\"New_name_en\");\r",
													"pm.expect (jsonData.images[1].name).to.equal(\"New_name_de\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"{{Nameofproduct}}\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"outline\": \"{{categoryQA}}\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-11-02T14:24:28.2675228Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"1111111111111\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"LongText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"31d6bf21-e2a7-41c8-baa9-484a89d4a8f7\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Brand\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"LongText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"name\": \"label=fr\",\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"name\": \"label=en\",\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"name\": \"label=de\",\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"09fff0f7-a49a-45be-9a39-0215ed72eaae\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Catalog_long\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"LongText\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"8a0ad192-ccbf-4c8d-9155-d3cd6d1d3d77\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"category_decimal\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Number\",\r\n            \"type\": \"Category\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"6e9f37df-3caa-42b0-b556-3b5162793800\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Category_long\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"LongText\",\r\n            \"type\": \"Category\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"86727f51-816b-425a-9754-bf0333ba23d4\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Color\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"name\": \"Color\",\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"name\": \"Farber\",\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"87fd1cec-79c2-4652-83b4-36e241ede571\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"dictionary\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"name\": \"de\",\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"name\": \"en\",\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"fe55902d-b298-4aef-9e18-5f0ebfaf8978\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Display_size\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Number\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"name\": \"Bildschirmgröße\",\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"name\": \"Display size\",\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"fa4a86b5-d85b-464b-b27c-00f316a979e7\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Font_camera\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Boolean\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"f88029fb-2bb2-475d-99bd-23db67f3b98a\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Front_camera_MP\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Number\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"7ae290e2-b198-42b0-ae63-26537281d53b\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Full_name\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Category\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"ddf9e753-db37-4385-b7c6-92f485b74185\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Inger_multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Integer\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"af036906-3643-4f0b-9c27-505de22234cb\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"int1\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Integer\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"570a5567-7442-4202-b77f-d6e572a6bd91\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Internal_Storage_GB\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Number\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"1e94acae-f338-44a3-8216-194c01260628\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Memory_Card_Slot\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Boolean\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"3309e819-a77a-437c-915d-28450d55bab6\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi_int312\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Integer\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"1daa49e9-0ccd-4fe7-9323-84559a85a775\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"multiInt_product\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Integer\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"2341b9c1-7c80-42b4-b33d-22277e4c3a93\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multilanguage\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"66c1b244-21a6-44b0-9cb1-2f6d9b206a57\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"multilingual\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"ac335397-6f6c-4ccd-8a28-6b10a5a4e841\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"multint_variation\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Integer\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"bbe3bd7f-3880-42b1-ba6e-ed0402d0c871\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multint1\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Integer\",\r\n            \"type\": \"Category\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"name\": \"lab1\",\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"name\": \"lab2\",\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"name\": \"lab3\",\r\n                    \"languageCode\": \"fr-FR\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"ef21c905-4c1d-4856-87ce-8da49d3e1147\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"multivalue\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"559e6cd9-923e-4178-8d2e-3183394a09e5\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"LongText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"43bdd25d-1cbe-488e-8fad-553bdfeedc48\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property1111\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"LongText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"7325d852-3793-43d5-a568-f110b6204c5f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"NFC\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Boolean\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"29007dd4-2f23-417b-902c-8d6565615eea\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Operating_system\",\r\n            \"required\": true,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"f5ac5fae-b80b-4f88-8042-e7f89c998eff\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Pixels_Per_Inch_ppi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Number\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0e3029bd-dc69-4617-9163-78ac53ee8a6e\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Processor_Core_GHz\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"85daf769-12c7-4135-9e8a-a0bcf74db4c3\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"RAM_Memory_GB\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Number\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"f06daf73-efd3-4b6d-9143-bf08a0715991\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Rear_camera_MP\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Number\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"ee496813-1a59-4707-9816-85e639c55534\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"SIM_Card_Slots\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"552a29f0-fb63-4ea2-ba12-293cd8c9410c\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"test11\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"749bf945-0f15-45cc-8b98-68cf6d58500a\"\r\n        },\r\n        {\r\n            \"isReadOnly\": true,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"testprop\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Catalog\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a617db33-096f-4bd1-8727-ac15302b15e6\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Two_SIM_cards\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Boolean\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"b2e01868-4545-4159-8936-5f21a338cc2d\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Type_of_product\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": true,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"name\": \"Produkttyp\",\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"name\": \"Type_of_product\",\r\n                    \"languageCode\": \"en-US\"\r\n                },\r\n                {\r\n                    \"name\": \"Type de produit\",\r\n                    \"languageCode\": \"fr-FR\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"300a6918-58bb-403a-8f1b-0a3ac38b05d9\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Video_Recording\",\r\n            \"required\": false,\r\n            \"dictionary\": true,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"2d8f8a03-9c7d-464f-96b8-959e60e91214\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Waterproof\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Boolean\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a897f2bd-bbbf-4efb-9a8e-000d1568bd96\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Weight_oz\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Number\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"13e822a6-9a07-4889-88df-52a3e7eef488\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"categoryId\": \"{{categoryQA}}\",\r\n            \"name\": \"Year_Released\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"Number\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"6283167f-5f8f-4210-9612-790d9b2eefa0\"\r\n        }\r\n    ],\r\n    \"imgSrc\": \"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n    \"images\": [\r\n        {\r\n            \"altText\": \"TV\",\r\n            \"relativeUrl\": \"/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n            \"url\": \"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n            \"description\": \"TV-set\",\r\n            \"sortOrder\": 1,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"New_name_en\",\r\n            \"languageCode\": \"en-US\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1424806380000_IMG_470374_128x128.jpg\",\r\n                    \"semanticUrl\": \"/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n                    \"metaDescription\": \"TV-set\",\r\n                    \"imageAltDescription\": \"TV\",\r\n                    \"isActive\": true,\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"altText\": \"Samsung\",\r\n            \"relativeUrl\": \"/catalog/SOXBR49X830C/1424805855000_1120442_168x168.jpg\",\r\n            \"url\": \"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/SOXBR49X830C/1424805855000_1120442_168x168.jpg\",\r\n            \"description\": \"Samsung\",\r\n            \"sortOrder\": 2,\r\n            \"typeId\": \"Image\",\r\n            \"group\": \"images\",\r\n            \"name\": \"New_name_de\",\r\n            \"languageCode\": \"de-DE\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Image\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"1424805855000_1120442_168x168.jpg\",\r\n                    \"semanticUrl\": \"/catalog/SOXBR49X830C/1424805855000_1120442_168x168.jpg\",\r\n                    \"metaDescription\": \"Samsung\",\r\n                    \"imageAltDescription\": \"Samsung\",\r\n                    \"isActive\": true,\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"assets\": [\r\n        {\r\n            \"mimeType\": \"image/jpeg\",\r\n            \"size\": 5419,\r\n            \"readableSize\": \"5 KB\",\r\n            \"url\": \"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv.jpg\",\r\n            \"description\": \"Smart TV\",\r\n            \"sortOrder\": 0,\r\n            \"typeId\": \"Asset\",\r\n            \"group\": \"Images\",\r\n            \"name\": \"tv.jpg\",\r\n            \"languageCode\": \"de-DE\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Asset\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"tv.jpg\",\r\n                    \"semanticUrl\": \"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv.jpg\",\r\n                    \"metaDescription\": \"Smart TV\",\r\n                    \"isActive\": true,\r\n                    \"languageCode\": \"de-DE\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"mimeType\": \"image/jpeg\",\r\n            \"size\": 4645,\r\n            \"readableSize\": \"4 KB\",\r\n            \"url\": \"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv_216x216.jpg\",\r\n            \"sortOrder\": 0,\r\n            \"typeId\": \"Asset\",\r\n            \"name\": \"tv_216x216.jpg\",\r\n            \"isInherited\": false,\r\n            \"seoObjectType\": \"Asset\",\r\n            \"seoInfos\": [\r\n                {\r\n                    \"name\": \"tv_216x216.jpg\",\r\n                    \"semanticUrl\": \"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/Televisions/tv_216x216.jpg\",\r\n                    \"isActive\": true\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n        {\r\n            \"semanticUrl\": \"product_A\",\r\n            \"pageTitle\": \"product_A\",\r\n            \"metaDescription\": \"Test new description A\",\r\n            \"imageAltDescription\": \"altimage\",\r\n            \"metaKeywords\": \"product_A\",\r\n            \"storeId\": \"Electronics\",\r\n            \"objectId\": \"{{productIdQA}}\",\r\n            \"objectType\": \"CatalogProduct\",\r\n            \"isActive\": true,\r\n            \"languageCode\": \"de-DE\"\r\n        },\r\n        {\r\n            \"semanticUrl\": \"new-product3\",\r\n            \"pageTitle\": \"prod3\",\r\n            \"metaDescription\": \"newdescription\",\r\n            \"imageAltDescription\": \"altimage\",\r\n            \"metaKeywords\": \"product3\",\r\n            \"storeId\": \"Electronics\",\r\n            \"objectId\": \"{{productIdQA}}\",\r\n            \"objectType\": \"CatalogProduct\",\r\n            \"isActive\": true,\r\n            \"languageCode\": \"en-US\"\r\n        }\r\n    ],\r\n    \"reviews\": [\r\n        {\r\n            \"content\": \"Absolutly new content\",\r\n            \"reviewType\": \"QuickReview\",\r\n            \"languageCode\": \"en-US\",\r\n            \"isInherited\": false\r\n        },\r\n        {\r\n            \"content\": \"Test\",\r\n            \"reviewType\": \"QuickReview\",\r\n            \"languageCode\": \"de-DE\",\r\n            \"isInherited\": false\r\n        }\r\n    ],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n        {\r\n            \"items\": [\r\n                {\r\n                    \"id\": \"{{catalogQA}}\",\r\n                    \"seoObjectType\": \"Catalog\",\r\n                    \"name\": \"Electronics\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"{{categoryQA}}\",\r\n                    \"seoObjectType\": \"Category\",\r\n                    \"seoInfos\": [\r\n                        {\r\n                            \"semanticUrl\": \"cell-phones\",\r\n                            \"objectId\": \"{{categoryQA}}\",\r\n                            \"objectType\": \"Category\",\r\n                            \"isActive\": true,\r\n                            \"languageCode\": \"en-US\",\r\n                            \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"Cell phones\",\r\n                    \"hasVirtualParent\": false\r\n                },\r\n                {\r\n                    \"id\": \"{{productIdQA}}\",\r\n                    \"seoObjectType\": \"CatalogProduct\",\r\n                    \"seoInfos\": [\r\n                        {\r\n                            \"semanticUrl\": \"product_A\",\r\n                            \"pageTitle\": \"product_A\",\r\n                            \"metaDescription\": \"Test new description A\",\r\n                            \"imageAltDescription\": \"altimage\",\r\n                            \"metaKeywords\": \"product_A\",\r\n                            \"storeId\": \"Electronics\",\r\n                            \"objectId\": \"{{productIdQA}}\",\r\n                            \"objectType\": \"CatalogProduct\",\r\n                            \"isActive\": true,\r\n                            \"languageCode\": \"de-DE\",\r\n                            \"id\": \"753c2b40-60aa-434e-972d-3b1060b13fe8\"\r\n                        },\r\n                        {\r\n                            \"semanticUrl\": \"new-product3\",\r\n                            \"pageTitle\": \"prod3\",\r\n                            \"metaDescription\": \"newdescription\",\r\n                            \"imageAltDescription\": \"altimage\",\r\n                            \"metaKeywords\": \"product3\",\r\n                            \"storeId\": \"Electronics\",\r\n                            \"objectId\": \"{{productIdQA}}\",\r\n                            \"objectType\": \"CatalogProduct\",\r\n                            \"isActive\": true,\r\n                            \"languageCode\": \"en-US\",\r\n                            \"id\": \"9aa950f4-ee9c-4850-a9c7-11a348132efa\"\r\n                        }\r\n                    ],\r\n                    \"name\": \"{{Nameofproduct}}\",\r\n                    \"hasVirtualParent\": false\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-11-08T09:46:34.3688367Z\",\r\n    \"modifiedDate\": \"2021-11-08T09:53:05.462801Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{productIdQA}}\",\r\n    \"_priority\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product Image name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"C307518 Check product Image name\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.images[0].name).to.be.equal(\"New_name_en\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query {\r\nproduct(id: \"{{productIdQA}}\", cultureName: \"en-US\", storeId: \"Electronics\") {\r\nid\r\nname\r\ncode\r\nvariations{\r\nid\r\ncode\r\n}\r\nimages {\r\nurl\r\nrelativeUrl\r\ncultureName\r\n  name\r\n}\r\n}\r\n}  \r\n\r\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product images by cultureName(en-US)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"C261708 Check get product images by cultureName(en-US)\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.images[0].cultureName).to.be.equal(\"en-US\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\n  product(\r\n    id: \"{{productIdQA}}\"\r\n    storeId: \"Electronics\"\r\n    cultureName: \"en-US\"\r\n    currencyCode: \"USD\")\r\n    {\r\n    images\r\n    {\r\n      id\r\n      name\r\n      cultureName\r\n    }\r\n  }\r\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product properties labels and descriptions (en-US)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"C261702 Check labels and descriptions (en-US)\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.description.languageCode).to.be.equal(\"en-US\");\r",
													"//pm.expect (jsonData.data.product.properties[1].label).to.be.equal(\"label=en\");\r",
													"pm.expect(pm.response.text()).to.include(\"Absolutly new content\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(() => {}, 1000); "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\n  product(\r\n    id: \"{{productIdQA}}\"\r\n    storeId: \"Electronics\"\r\n    cultureName: \"en-US\"\r\n    currencyCode: \"USD\"\r\n    )\r\n    {\r\n    id\r\n    code\r\n      description{\r\n        content\r\nreviewType\r\nlanguageCode\r\n}\r\n       properties\r\n    {\r\n      name\r\n      label\r\n      value\r\n      valueType\r\n      multivalue\r\n      id\r\n    }\r\n  }\r\n}\r\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product properties labels and descriptions (de-DE)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"C328960 Check labels and descriptions (de-DE)\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.description.languageCode).to.be.equal(\"de-DE\");\r",
													"//pm.expect (jsonData.data.product.properties[1].label).to.be.equal(\"label=de\");\r",
													" pm.expect(pm.response.text()).to.include(\"Test\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\n  product(\r\n    id: \"{{productIdQA}}\"\r\n    storeId: \"Electronics\"\r\n    cultureName: \"de-DE\"\r\n    currencyCode: \"USD\")\r\n    {\r\n    id\r\n    code\r\n      description{\r\n        content\r\nreviewType\r\nlanguageCode\r\n}\r\n   properties\r\n    {\r\n      name\r\n      label\r\n      value\r\n      valueType\r\n      multivalue\r\n      id\r\n    }\r\n  }\r\n}\r\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all product assets",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"C261711 Check all product assets\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.assets[0,1].name).to.be.equal(\"tv_216x216.jpg\",\"tv.jpg\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\nproduct(\r\nid: \"{{productIdQA}}\"\r\nstoreId: \"{{storeId}}\")\r\n{\r\nassets\r\n{\r\nid\r\nname\r\ncultureName\r\n}\r\n}\r\n}\r\n\r\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product assets by cultureName(de-DE)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"C261710 Check product assets by cultureName(de-DE)\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.assets[0].cultureName).to.be.equal(\"de-DE\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\n  product(\r\n    id: \"{{productIdQA}}\"\r\n    storeId: \"Electronics\"\r\n    cultureName: \"de-DE\")\r\n    {\r\n    assets\r\n    {\r\n      id\r\n      name\r\n      cultureName\r\n    }\r\n  }\r\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product assets by cultureName (null)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"C328962 Check product assets by cultureName(null)\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"pm.expect (jsonData.data.product.assets[0].cultureName).to.be.equal(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\n  product(\r\n    id: \"{{productIdQA}}\"\r\n    storeId: \"Electronics\"\r\n    cultureName: \"null\")\r\n    {\r\n    assets\r\n    {\r\n      id\r\n      name\r\n      cultureName\r\n    }\r\n  }\r\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Filter product properties by their names",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"C311832 Check filter product properties by their names\", function(){\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.expect (jsonData.data.products.items[0].properties[0].name).to.includes(\"Brand\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query {\r\n  products(\r\n    cultureName: \"en-US\"\r\n    currencyCode: \"USD\"\r\n    storeId: \"Electronics\"\r\n    userId: \"01246c6d-594e-4e63-aaa5-fc38c9cf47dd\"\r\n  ) {\r\n    items {\r\n      name\r\n      code properties(names: [\"Brand\", \"Internal Storage (GB)\"]) {\r\n        name\r\n        value\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete a product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products?ids={{productIdQA}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "ids",
													"value": "{{productIdQA}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete contact",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Check delete contact\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.deleteContact).to.eql(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
												"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404 not found\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products/{{productIdQA}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products",
												"{{productIdQA}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{AdminToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Whish list by admin [ID]",
							"item": [
								{
									"name": "Prepare",
									"item": [
										{
											"name": "Create Contact_1 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set contactId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
														"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\"\n}\n}\n\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add user_1 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
														"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"{{$randomPassword}}\",\n    \"userName\": \"{{userName1}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId1}}\",\n    \"storeId\":\"{{storeId}}\"\n      }}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get user_1 > Set Id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Set userId\", function(){\r",
															"var jsonData =pm.response.json();\r",
															"pm.collectionVariables.set(\"userId\",jsonData.data.user.id);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query user(\r\n  $id: String\r\n  $userName: String\r\n  $email: String\r\n  $loginProvider: String\r\n  $providerKey: String\r\n) {\r\n  user(\r\n    id: $id\r\n    userName: $userName\r\n    email: $email\r\n    loginProvider: $loginProvider\r\n    providerKey: $providerKey\r\n  ) {\r\n    id\r\n    isAdministrator\r\n        userName\r\n    email\r\n    storeId\r\n    userName\r\n    userType\r\n    securityStamp\r\n    roles{\r\n      id\r\n      name\r\n      description\r\n      permissions\r\n    }\r\n  }\r\n}",
														"variables": "{\r\n\"userName\": \"{{userName1}}\",\r\n\"loginProvider\":\"\",\r\n\"providerKey\": \"\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId1}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId1}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(25);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"inStockQuantity\": 25,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check Index\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId1}}\"\r\n        ]\r\n    }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Whishlist",
									"item": [
										{
											"name": "Create list",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317343 Set listId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"listId\",jsonData.data.createWishlist.id);\r",
															"\r",
															"});\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "\r\nmutation createWishlist($command: InputCreateWishlistType!) {\r\n    createWishlist(command: $command) {\r\n        id\r\n        customerId\r\n        customerName\r\n        name\r\n            storeId\r\n            customerId\r\n            currency {\r\n          code\r\n        }\r\n    }\r\n}\r\n\r\n",
														"variables": "\r\n{\r\n    \"command\": {\r\n        \"storeId\": \"{{storeId}}\",\r\n        \"listName\": \"Whishlist1\",\r\n        \"userId\": \"{{userId}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"cultureName\": \"en-US\"\r\n    }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Search wish lists",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317344 Search - Whishlist created\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"   pm.expect(jsonData.data.wishlists).to.be.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query wishlists($after: String, $first: Int, $userId: String!) {\r\n  wishlists(after: $after, first: $first, userId: $userId) {\r\n    totalCount\r\n    items {\r\n      id\r\n      name\r\n      items {\r\n          id\r\n          productId\r\n          name\r\n          }\r\n      }\r\n  }\r\n}\r\n\r\n",
														"variables": "{\r\n  \"first\": 50,\r\n  \"after\": \"0\",\r\n  \"userId\": \"{{userId}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Rename",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317346 Whishlist1 renamed\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.renameWishlist.name).to.be.equal(\"New wish list\");\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation renameWishlist($command: InputRenameWishlistType!) {\r\n    renameWishlist(command: $command) {\r\n        id\r\n        name\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n    \"command\": {\r\n        \"listId\": \"{{listId}}\",\r\n        \"listName\": \"New wish list\"\r\n    }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get by ID - check Rename",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317345 getWishList - check rename\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.wishlist.name).to.be.equal(\"New wish list\");\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query wishlist($listId: String!) {\r\n    wishlist (listId: $listId) {\r\n      id\r\n      name\r\n      storeId\r\n      customerId\r\n      customerName\r\n      currency {\r\n        code\r\n      }\r\n      itemsCount\r\n      items {\r\n          id\r\n          productId\r\n          name\r\n          }\r\n      }\r\n}",
														"variables": "{\r\n    \"listId\": \"{{listId}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add item to list",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"C317348 Set lineItemId\", function(){\r",
															"var jsonData =pm.response.json();\r",
															"pm.collectionVariables.set(\"lineItemId\",jsonData.data.addWishlistItem.items[0].id);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addWishlistItem ($command: InputAddWishlistItemType!) {\r\n    addWishlistItem (command: $command) {\r\n        id\r\n        name\r\n        items {\r\n            id\r\n            quantity\r\n            product {\r\n              name\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"listId\": \"{{listId}}\",\r\n    \"productId\" : \"{{ProductId1}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check items in the wish list (old created query) Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317349 check items (old)  - items added\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.wishlist.items[0].name).to.be.equal(pm.collectionVariables.get(\"Nameofproduct1\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query wishlistType( $listId: String!) {\r\n    wishlist(listId: $listId) {\r\n        id\r\n        name\r\n        storeId\r\n        customerName\r\n        items {\r\n          name\r\n          id\r\n        }\r\n    }\r\n    }\r\n\r\n",
														"variables": "{\r\n    \"listId\": \"{{listId}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create list 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"\r",
															"pm.test(\"Set and listId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"listId2\",jsonData.data.createWishlist.id);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "\r\nmutation createWishlist($command: InputCreateWishlistType!) {\r\n    createWishlist(command: $command) {\r\n        id\r\n        name\r\n            storeId\r\n            customerId\r\n            currency {\r\n          code\r\n        }\r\n    }\r\n}\r\n\r\n",
														"variables": "\r\n{\r\n    \"command\": {\r\n        \"storeId\": \"{{storeId}}\",\r\n        \"listName\": \"Whishlist2\",\r\n        \"userId\": \"{{userId}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"cultureName\": \"en-US\"\r\n    }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Move item to another list",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317350 Check listId2 - item moved\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"   pm.expect(jsonData.data.moveWishlistItem.name).to.be.equal(\"Whishlist2\");\r",
															"   pm.expect(jsonData.data.moveWishlistItem.items[0].product.name).to.be.equal(pm.collectionVariables.get(\"Nameofproduct1\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation moveWishlistItem ($command: InputMoveWishlistItemType!) {\r\n    moveWishlistItem (command: $command) {\r\n        id\r\n            name\r\n        items {\r\n            id\r\n            quantity\r\n            product {\r\n              name\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"listId\": \"{{listId}}\",\r\n    \"lineItemId\":  \"{{lineItemId}}\",\r\n    \"destinationListId\": \"{{listId2}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check items in the wish list (old created query)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check listId - item removed\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"   pm.expect(jsonData.data.wishlist.name).to.be.equal(\"New wish list\");\r",
															"   pm.expect(jsonData.data.wishlist.items).to.be.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query wishlistType( $listId: String!) {\r\n    wishlist(listId: $listId) {\r\n        id\r\n        name\r\n        storeId\r\n        customerName\r\n        items {\r\n          name\r\n          id\r\n        }\r\n    }\r\n    }\r\n\r\n",
														"variables": "{\r\n    \"listId\": \"{{listId}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove item from list",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317351 item removed\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.removeWishlistItem.items).to.be.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeWishlistItem ($command: InputRemoveWishlistItemType!) {\r\n    removeWishlistItem (command: $command) {\r\n        id\r\n        name\r\n        items {\r\n            id\r\n            quantity\r\n            product {\r\n              name\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"listId\": \"{{listId}}\",\r\n    \"lineItemId\":  \"{{lineItemId}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check items in the wish list (old created query)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"check items (old)  - item remove\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.wishlist.items).to.be.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query wishlistType( $listId: String!) {\r\n    wishlist(listId: $listId) {\r\n        id\r\n        name\r\n        storeId\r\n        customerName\r\n        items {\r\n          name\r\n          id\r\n        }\r\n    }\r\n    }\r\n\r\n",
														"variables": "{\r\n    \"listId\": \"{{listId}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove list",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317347 wishList removed\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.removeWishlist).to.true;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeWishlist($command: InputRemoveWishlistType!) {\r\n    removeWishlist (command: $command)\r\n}\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"listId\": \"{{listId}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get by ID - check Delete",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"getWishList - check Delete\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.wishlist).to.be.null;\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query wishlist($listId: String!) {\r\n    wishlist (listId: $listId) {\r\n      id\r\n      name\r\n      storeId\r\n      customerId\r\n      customerName\r\n      currency {\r\n        code\r\n      }\r\n      itemsCount\r\n      items {\r\n          id\r\n          productId\r\n          name\r\n          }\r\n      }\r\n}",
														"variables": "{\r\n    \"listId\": \"{{listId}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete",
									"item": [
										{
											"name": "Delete users",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\"\r\n    ]\r\n  }\r\n}\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Contact_1",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId1}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						},
						{
							"name": "Add product to a few wishlists [ID]",
							"item": [
								{
									"name": "Prepare",
									"item": [
										{
											"name": "Create contact_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set contactId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
														"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\"\n}\n}\n\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add user_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
														"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"{{$randomPassword}}\",\n    \"userName\": \"{{userName1}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId1}}\",\n    \"storeId\":\"{{storeId}}\"\n      }}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get user > Set Id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Set userId\", function(){\r",
															"var jsonData =pm.response.json();\r",
															"pm.collectionVariables.set(\"userId1\",jsonData.data.user.id);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query user(\r\n  $id: String\r\n  $userName: String\r\n  $email: String\r\n  $loginProvider: String\r\n  $providerKey: String\r\n) {\r\n  user(\r\n    id: $id\r\n    userName: $userName\r\n    email: $email\r\n    loginProvider: $loginProvider\r\n    providerKey: $providerKey\r\n  ) {\r\n    id\r\n    isAdministrator\r\n        userName\r\n    email\r\n    storeId\r\n    userName\r\n    userType\r\n    securityStamp\r\n    roles{\r\n      id\r\n      name\r\n      description\r\n      permissions\r\n    }\r\n  }\r\n}",
														"variables": "{\r\n\"userName\": \"{{userName1}}\",\r\n\"loginProvider\":\"\",\r\n\"providerKey\": \"\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId1}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId1}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(25);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"inStockQuantity\": 25,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check Index\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId1}}\"\r\n        ]\r\n    }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create whisList_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317343 Set listId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"listId1\",jsonData.data.createWishlist.id);\r",
															"\r",
															"});\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "\r\nmutation createWishlist($command: InputCreateWishlistType!) {\r\n    createWishlist(command: $command) {\r\n        id\r\n        customerId\r\n        customerName\r\n        name\r\n            storeId\r\n            customerId\r\n            currency {\r\n          code\r\n        }\r\n    }\r\n}\r\n\r\n",
														"variables": "\r\n{\r\n    \"command\": {\r\n        \"storeId\": \"{{storeId}}\",\r\n        \"listName\": \"Whishlist1\",\r\n        \"userId\": \"{{userId1}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"cultureName\": \"en-US\"\r\n    }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create wishList_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"\r",
															"pm.test(\"Set and listId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"listId2\",jsonData.data.createWishlist.id);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "\r\nmutation createWishlist($command: InputCreateWishlistType!) {\r\n    createWishlist(command: $command) {\r\n        id\r\n        name\r\n            storeId\r\n            customerId\r\n            currency {\r\n          code\r\n        }\r\n    }\r\n}\r\n\r\n",
														"variables": "\r\n{\r\n    \"command\": {\r\n        \"storeId\": \"{{storeId}}\",\r\n        \"listName\": \"Whishlist2\",\r\n        \"userId\": \"{{userId1}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"cultureName\": \"en-US\"\r\n    }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Main",
									"item": [
										{
											"name": "Add available product to a few wishlists",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Check Wishlists Id\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addWishlistBulkItem.wishlists[0].id).to.eql(pm.collectionVariables.get(\"listId1\"));\r",
															"     pm.expect(jsonData.data.addWishlistBulkItem.wishlists[1].id).to.eql(pm.collectionVariables.get(\"listId2\"));\r",
															"});\r",
															"\r",
															"pm.test(\"C329966 Check item in wishlists\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addWishlistBulkItem.wishlists[0].items[0].product.name).to.equal(pm.collectionVariables.get(\"Nameofproduct1\"));\r",
															"     pm.expect(jsonData.data.addWishlistBulkItem.wishlists[1].items[0].product.name).to.equal(pm.collectionVariables.get(\"Nameofproduct1\"));\r",
															"});\r",
															"\r",
															"pm.test(\"Set lineItemId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"lineItemId1\",jsonData.data.addWishlistBulkItem.wishlists[0].items[0].id);\r",
															"    pm.collectionVariables.set(\"lineItemId2\",jsonData.data.addWishlistBulkItem.wishlists[1].items[0].id)\r",
															"  });  "
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addWishlistBulkItem ($command: InputAddWishlistBulkItemType!) {\r\naddWishlistBulkItem (command: $command) {\r\nwishlists {\r\nname\r\nid\r\nitems {\r\nid\r\nquantity\r\nproduct {\r\nname\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"command\": {\r\n\"listIds\": [\r\n    \"{{listId1}}\", \"{{listId2}}\"],\r\n\"productId\" : \"{{ProductId1}}\"\r\n}\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove item from list_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"item removed\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.removeWishlistItem.items).to.be.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeWishlistItem ($command: InputRemoveWishlistItemType!) {\r\n    removeWishlistItem (command: $command) {\r\n        id\r\n        name\r\n        items {\r\n            id\r\n            quantity\r\n            product {\r\n              name\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"listId\": \"{{listId1}}\",\r\n    \"lineItemId\":  \"{{lineItemId1}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove item from list_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317351 item removed\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.removeWishlistItem.items).to.be.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeWishlistItem ($command: InputRemoveWishlistItemType!) {\r\n    removeWishlistItem (command: $command) {\r\n        id\r\n        name\r\n        items {\r\n            id\r\n            quantity\r\n            product {\r\n              name\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"listId\": \"{{listId2}}\",\r\n    \"lineItemId\":  \"{{lineItemId2}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change isBuyable=false",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"{{Nameofproduct1}}\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"isBuyable\": false,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 1,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n    \"modifiedDate\": \"2001-01-01T00:00:00Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{ProductId1}}\",\r\n     \"reviews\": []     \r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "isBuyable=false > product unabled to add to Wishlists",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Check item in wishlists\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addWishlistBulkItem.wishlists[0].items).to.be.empty;\r",
															"     pm.expect(jsonData.data.addWishlistBulkItem.wishlists[1].items).to.be.empty;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addWishlistBulkItem ($command: InputAddWishlistBulkItemType!) {\r\naddWishlistBulkItem (command: $command) {\r\nwishlists {\r\nname\r\nid\r\nitems {\r\nid\r\nquantity\r\nproduct {\r\nname\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"command\": {\r\n\"listIds\": [\r\n    \"{{listId1}}\", \"{{listId2}}\"],\r\n\"productId\" : \"{{ProductId1}}\"\r\n}\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change isActive=false",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"{{Nameofproduct1}}\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": false,\r\n    \"isBuyable\": true,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 1,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n    \"modifiedDate\": \"2001-01-01T00:00:00Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{ProductId1}}\",\r\n     \"reviews\": []     \r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "isActive=false > product unabled to add to Wishlists",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Check item in wishlists\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addWishlistBulkItem.wishlists[0].items).to.be.empty;\r",
															"     pm.expect(jsonData.data.addWishlistBulkItem.wishlists[1].items).to.be.empty;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addWishlistBulkItem ($command: InputAddWishlistBulkItemType!) {\r\naddWishlistBulkItem (command: $command) {\r\nwishlists {\r\nname\r\nid\r\nitems {\r\nid\r\nquantity\r\nproduct {\r\nname\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"command\": {\r\n\"listIds\": [\r\n    \"{{listId1}}\", \"{{listId2}}\"],\r\n\"productId\" : \"{{ProductId1}}\"\r\n}\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change isActive=true",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"{{Nameofproduct1}}\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"isBuyable\": true,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 1,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n    \"modifiedDate\": \"2001-01-01T00:00:00Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{ProductId1}}\",\r\n     \"reviews\": []     \r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add available product to a few wishlists",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Check Wishlists Id\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addWishlistBulkItem.wishlists[0].id).to.eql(pm.collectionVariables.get(\"listId1\"));\r",
															"     pm.expect(jsonData.data.addWishlistBulkItem.wishlists[1].id).to.eql(pm.collectionVariables.get(\"listId2\"));\r",
															"});\r",
															"\r",
															"pm.test(\"Check item in wishlists\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addWishlistBulkItem.wishlists[0].items[0].product.name).to.equal(pm.collectionVariables.get(\"Nameofproduct1\"));\r",
															"     pm.expect(jsonData.data.addWishlistBulkItem.wishlists[1].items[0].product.name).to.equal(pm.collectionVariables.get(\"Nameofproduct1\"));\r",
															"});\r",
															"\r",
															"pm.test(\"Set lineItemId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"lineItemId1\",jsonData.data.addWishlistBulkItem.wishlists[0].items[0].id);\r",
															"    pm.collectionVariables.set(\"lineItemId2\",jsonData.data.addWishlistBulkItem.wishlists[1].items[0].id)\r",
															"  }); "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addWishlistBulkItem ($command: InputAddWishlistBulkItemType!) {\r\naddWishlistBulkItem (command: $command) {\r\nwishlists {\r\nname\r\nid\r\nitems {\r\nid\r\nquantity\r\nproduct {\r\nname\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"command\": {\r\n\"listIds\": [\r\n    \"{{listId1}}\", \"{{listId2}}\"],\r\n\"productId\" : \"{{ProductId1}}\"\r\n}\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove item from list_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"item removed\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.removeWishlistItem.items).to.be.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeWishlistItem ($command: InputRemoveWishlistItemType!) {\r\n    removeWishlistItem (command: $command) {\r\n        id\r\n        name\r\n        items {\r\n            id\r\n            quantity\r\n            product {\r\n              name\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"listId\": \"{{listId1}}\",\r\n    \"lineItemId\":  \"{{lineItemId1}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove item from list_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317351 item removed\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.removeWishlistItem.items).to.be.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeWishlistItem ($command: InputRemoveWishlistItemType!) {\r\n    removeWishlistItem (command: $command) {\r\n        id\r\n        name\r\n        items {\r\n            id\r\n            quantity\r\n            product {\r\n              name\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"listId\": \"{{listId2}}\",\r\n    \"lineItemId\":  \"{{lineItemId2}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Add available product to a few wishlists",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Check item in wishlists\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addWishlistBulkItem.wishlists[0].items).to.be.empty;\r",
															"     pm.expect(jsonData.data.addWishlistBulkItem.wishlists[1].items).to.be.empty;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addWishlistBulkItem ($command: InputAddWishlistBulkItemType!) {\r\naddWishlistBulkItem (command: $command) {\r\nwishlists {\r\nname\r\nid\r\nitems {\r\nid\r\nquantity\r\nproduct {\r\nname\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": "{\r\n\"command\": {\r\n\"listIds\": [\r\n    \"{{listId1}}\", \"{{listId2}}\"],\r\n\"productId\" : \"{{ProductId1}}\"\r\n}\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove list_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317347 wishList removed\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.removeWishlist).to.true;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeWishlist($command: InputRemoveWishlistType!) {\r\n    removeWishlist (command: $command)\r\n}\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"listId\": \"{{listId1}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove list_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C317347 wishList removed\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.removeWishlist).to.true;\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeWishlist($command: InputRemoveWishlistType!) {\r\n    removeWishlist (command: $command)\r\n}\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"listId\": \"{{listId2}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get by ID - check delete list_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"getWishList - check Delete\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.wishlist).to.be.null;\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query wishlist($listId: String!) {\r\n    wishlist (listId: $listId) {\r\n      id\r\n      name\r\n      storeId\r\n      customerId\r\n      customerName\r\n      currency {\r\n        code\r\n      }\r\n      itemsCount\r\n      items {\r\n          id\r\n          productId\r\n          name\r\n          }\r\n      }\r\n}",
														"variables": "{\r\n    \"listId\": \"{{listId1}}\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Clear all",
									"item": [
										{
											"name": "Delete user",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\"\r\n    ]\r\n  }\r\n}\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete contact_1",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						},
						{
							"name": "Get product discount [ID]",
							"item": [
								{
									"name": "Create product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Set variables\", function(){\r",
													"    var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
													"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
													"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"code\":\"DRR-99877\",\r\n   \"name\":\"Xapi_test\",\r\n   \"catalogId\":\"{{catalogQA}}\",\r\n   \"categoryId\":\"{{categoryQA}}\",\r\n   \"outline\":\"{{categoryQA}}\",\r\n   \"path\":\"Cell phones\",\r\n   \"isBuyable\":true,\r\n   \"isActive\":true,\r\n   \"trackInventory\":true,\r\n   \"maxQuantity\":0,\r\n   \"minQuantity\":1000,\r\n   \"productType\":\"Physical\",\r\n   \"startDate\":\"2021-11-02T14:24:28.2675228Z\",\r\n   \"priority\":0,\r\n   \"properties\":[\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"1111111111111\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"31d6bf21-e2a7-41c8-baa9-484a89d4a8f7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"1DECIMAL\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a6d2111d-be02-4de6-b037-c98b4da988ee\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Brand\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"label=fr\",\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"name\":\"label=en\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"label=de\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"09fff0f7-a49a-45be-9a39-0215ed72eaae\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Catalog_long\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"8a0ad192-ccbf-4c8d-9155-d3cd6d1d3d77\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"category_decimal\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6e9f37df-3caa-42b0-b556-3b5162793800\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Category_long\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"86727f51-816b-425a-9754-bf0333ba23d4\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Color\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Color\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Farber\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"87fd1cec-79c2-4652-83b4-36e241ede571\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Decimal_all_incl\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"cec81ef0-1de5-4fb7-a05e-d9cf2191ae61\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"dictionary\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"de\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"en\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fe55902d-b298-4aef-9e18-5f0ebfaf8978\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Display_size\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Bildschirmgröße\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Display size\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fa4a86b5-d85b-464b-b27c-00f316a979e7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Font_camera\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f88029fb-2bb2-475d-99bd-23db67f3b98a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Front_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7ae290e2-b198-42b0-ae63-26537281d53b\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Full_name\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ddf9e753-db37-4385-b7c6-92f485b74185\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"GEO_POINT\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"GeoPoint\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            {\r\n               \"isUnique\":false,\r\n               \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n               \"propertyId\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\",\r\n               \"id\":\"37f93166-9fb3-40d8-a700-7d495bd9a6fc\"\r\n            }\r\n         ],\r\n         \"validationRule\":{\r\n            \"isUnique\":false,\r\n            \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n            \"propertyId\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\",\r\n            \"id\":\"37f93166-9fb3-40d8-a700-7d495bd9a6fc\"\r\n         },\r\n         \"isInherited\":true,\r\n         \"id\":\"fdfa7440-37cf-431b-986d-88395cb78c0f\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Inger_multi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"af036906-3643-4f0b-9c27-505de22234cb\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"int1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"570a5567-7442-4202-b77f-d6e572a6bd91\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Internal_Storage_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1e94acae-f338-44a3-8216-194c01260628\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Memory_Card_Slot\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"3309e819-a77a-437c-915d-28450d55bab6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multi_int312\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1daa49e9-0ccd-4fe7-9323-84559a85a775\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"multiInt_product\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2341b9c1-7c80-42b4-b33d-22277e4c3a93\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multilanguage\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"66c1b244-21a6-44b0-9cb1-2f6d9b206a57\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"multilingual\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ac335397-6f6c-4ccd-8a28-6b10a5a4e841\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"multint_variation\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"bbe3bd7f-3880-42b1-ba6e-ed0402d0c871\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Multint1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"lab1\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"lab2\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"lab3\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ef21c905-4c1d-4856-87ce-8da49d3e1147\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"multivalue\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"559e6cd9-923e-4178-8d2e-3183394a09e5\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"43bdd25d-1cbe-488e-8fad-553bdfeedc48\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"new_property1111\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7325d852-3793-43d5-a568-f110b6204c5f\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"NFC\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"29007dd4-2f23-417b-902c-8d6565615eea\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Operating_system\",\r\n         \"required\":true,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f5ac5fae-b80b-4f88-8042-e7f89c998eff\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Pixels_Per_Inch_ppi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"0e3029bd-dc69-4617-9163-78ac53ee8a6e\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Processor_Core_GHz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"85daf769-12c7-4135-9e8a-a0bcf74db4c3\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"RAM_Memory_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f06daf73-efd3-4b6d-9143-bf08a0715991\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Rear_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ee496813-1a59-4707-9816-85e639c55534\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"SIM_Card_Slots\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"552a29f0-fb63-4ea2-ba12-293cd8c9410c\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"test11\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"749bf945-0f15-45cc-8b98-68cf6d58500a\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"testprop\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a617db33-096f-4bd1-8727-ac15302b15e6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Two_SIM_cards\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"b2e01868-4545-4159-8936-5f21a338cc2d\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"name\":\"Type_of_product\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Produkttyp\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Type_of_product\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Type de produit\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"300a6918-58bb-403a-8f1b-0a3ac38b05d9\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Video_Recording\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2d8f8a03-9c7d-464f-96b8-959e60e91214\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Waterproof\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a897f2bd-bbbf-4efb-9a8e-000d1568bd96\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Weight_oz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"13e822a6-9a07-4889-88df-52a3e7eef488\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"{{catalogQA}}\",\r\n         \"categoryId\":\"{{categoryQA}}\",\r\n         \"name\":\"Year_Released\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6283167f-5f8f-4210-9612-790d9b2eefa0\"\r\n      }\r\n   ],\r\n   \"imgSrc\":\"https://vcplatform-platform.qa.govirto.com/cms-content/assets/catalog/SOXBR49X830C/1424806380000_IMG_470374_128x128.jpg\",\r\n\r\n\r\n   \"links\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"CatalogProduct\",\r\n\r\n\r\n   \"associations\":[\r\n      \r\n   ],\r\n   \"referencedAssociations\":[\r\n      \r\n   ],\r\n   \"outlines\":[\r\n      {\r\n         \"items\":[\r\n            {\r\n               \"id\":\"{{catalogQA}}\",\r\n               \"seoObjectType\":\"Catalog\",\r\n               \"name\":\"Electronics\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"{{categoryQA}}\",\r\n               \"seoObjectType\":\"Category\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"cell-phones\",\r\n                     \"objectId\":\"{{categoryQA}}\",\r\n                     \"objectType\":\"Category\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"73642cc7f2e44d92af13e94c79c73456\"\r\n                  }\r\n               ],\r\n               \"name\":\"Cell phones\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\",\r\n               \"seoObjectType\":\"CatalogProduct\",\r\n\r\n               \"name\":\"NewProduct3\",\r\n               \"hasVirtualParent\":false\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"createdDate\":\"2021-11-11T11:06:13.5832208Z\",\r\n   \"modifiedDate\":\"2021-11-11T12:16:55.319113Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"e41e682a-5919-4c6e-ac64-21a1af173efa\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add price to the product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"{{Nameofproduct1}}\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"outline\": \"{{categoryQA}}\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"{{Nameofproduct1}}\",\r\n        \"objectId\": \"{{ProductId1}}\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"{{catalogQA}}\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"{{categoryQA}}\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"{{Nameofproduct1}}\",\r\n                \"objectId\": \"{{ProductId1}}\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"{{Nameofproduct1}}\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{ProductId1}}\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": \"{{ProductPrice1}}\",\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/products/{{ProductId1}}/prices",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"products",
												"{{ProductId1}}",
												"prices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add stock qty to the product > Default ffc",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Add stock qty to the product Default\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.inStockQuantity).to.eql(32);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"fulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"fulfillmentCenterName\":\"{{DefaultFFCName}}\",\r\n   \"fulfillmentCenter\":{\r\n      \"name\":\"{{DefaultFFCName}}\",\r\n      \"description\":\"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n      \"address\":{\r\n         \"addressType\":0,\r\n         \"countryCode\":\"USA\",\r\n         \"countryName\":\"United States\",\r\n         \"city\":\"Chicago\",\r\n         \"postalCode\":\"60640\",\r\n         \"line1\":\"5400 N. Lakewood Avenue\",\r\n         \"regionName\":\"Illinois\",\r\n         \"phone\":\"(312) 222-3333\",\r\n         \"isDefault\":false\r\n      },\r\n      \"createdDate\":\"2018-05-05T05:55:00.64Z\",\r\n      \"modifiedDate\":\"2021-11-18T11:54:44.6718532Z\",\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\"\r\n   },\r\n   \"productId\":\"{{ProductId1}}\",\r\n   \"inStockQuantity\":32,\r\n   \"reservedQuantity\":0,\r\n   \"reorderMinQuantity\":0,\r\n   \"preorderQuantity\":0,\r\n   \"backorderQuantity\":0,\r\n   \"allowBackorder\":false,\r\n   \"allowPreorder\":false,\r\n   \"inTransit\":0,\r\n   \"status\":\"Disabled\",\r\n   \"createdDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"modifiedDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"inventory",
												"products",
												"{{ProductId1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check product\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.product.id).to.eql(pm.collectionVariables.get(\"ProductId1\"));\r",
													"    pm.expect(jsonData.data.product.name).to.eql(pm.collectionVariables.get(\"Nameofproduct1\"));\r",
													"     pm.expect(jsonData.data.product.code).to.eql(pm.collectionVariables.get(\"Code1\"));      \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query {\r\n  product(id: \"{{ProductId1}}\", storeId: \"{{storeId}}\") {\r\n    id\r\n    name\r\n    code\r\n    variations{\r\n      id\r\n      code\r\n    }\r\n    description {\r\n      id\r\n      languageCode\r\n      reviewType\r\n      content\r\n    }\r\n    descriptions{\r\n      id\r\n      languageCode\r\n      reviewType\r\n      content\r\n    }\r\n    properties{\r\n      name\r\n      value\r\n    }\r\n    images {\r\n      url\r\n      relativeUrl\r\n    }\r\n    assets {\r\n      id\r\n      name\r\n      cultureName\r\n    }\r\n    seoInfo {\r\n      name\r\n      semanticUrl\r\n      metaKeywords\r\n      metaDescription\r\n    }\r\n    price {\r\n      pricelistId\r\n      list {\r\n        amount\r\n      }\r\n      sale {\r\n        amount\r\n      }\r\n      discountAmount {\r\n        amount\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add promo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Promo added\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"promotionId\"));\r",
													";\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"isAllowCombiningWithSelf\": false,\r\n  \"dynamicExpression\": {\r\n    \"all\": true,\r\n    \"not\": false,\r\n    \"id\": \"PromotionConditionAndRewardTree\",\r\n    \"availableChildren\": [\r\n      {\r\n        \"all\": false,\r\n        \"not\": false,\r\n        \"id\": \"BlockCustomerCondition\",\r\n        \"availableChildren\": [\r\n          {\r\n            \"id\": \"ConditionIsRegisteredUser\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"id\": \"ConditionIsEveryone\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"id\": \"ConditionIsFirstTimeBuyer\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"id\": \"UserGroupsContainsCondition\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          }\r\n        ],\r\n        \"children\": []\r\n      },\r\n      {\r\n        \"all\": false,\r\n        \"not\": false,\r\n        \"id\": \"BlockCatalogCondition\",\r\n        \"availableChildren\": [\r\n          {\r\n            \"excludingCategoryIds\": [],\r\n            \"excludingProductIds\": [],\r\n            \"id\": \"ConditionCategoryIs\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"id\": \"ConditionCodeContains\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"id\": \"ConditionCurrencyIs\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"id\": \"ConditionEntryIs\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"quantity\": 0,\r\n            \"quantitySecond\": 0,\r\n            \"compareCondition\": \"AtLeast\",\r\n            \"id\": \"ConditionInStockQuantity\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"id\": \"ConditionHasNoSalePrice\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          }\r\n        ],\r\n        \"children\": []\r\n      },\r\n      {\r\n        \"all\": false,\r\n        \"not\": false,\r\n        \"id\": \"BlockCartCondition\",\r\n        \"availableChildren\": [\r\n          {\r\n            \"excludingCategoryIds\": [],\r\n            \"excludingProductIds\": [],\r\n            \"numItem\": 0,\r\n            \"numItemSecond\": 0,\r\n            \"compareCondition\": \"AtLeast\",\r\n            \"id\": \"ConditionAtNumItemsInCart\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"numItem\": 0,\r\n            \"numItemSecond\": 0,\r\n            \"excludingCategoryIds\": [],\r\n            \"excludingProductIds\": [],\r\n            \"compareCondition\": \"AtLeast\",\r\n            \"id\": \"ConditionAtNumItemsInCategoryAreInCart\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"numItem\": 0,\r\n            \"numItemSecond\": 0,\r\n            \"compareCondition\": \"AtLeast\",\r\n            \"id\": \"ConditionAtNumItemsOfEntryAreInCart\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"subTotal\": 0,\r\n            \"subTotalSecond\": 0,\r\n            \"excludingCategoryIds\": [],\r\n            \"excludingProductIds\": [],\r\n            \"compareCondition\": \"AtLeast\",\r\n            \"id\": \"ConditionCartSubtotalLeast\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          }\r\n        ],\r\n        \"children\": []\r\n      },\r\n      {\r\n        \"id\": \"BlockReward\",\r\n        \"availableChildren\": [\r\n          {\r\n            \"amount\": 0,\r\n            \"id\": \"RewardCartGetOfAbsSubtotal\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"amount\": 0,\r\n            \"maxLimit\": 0,\r\n            \"id\": \"RewardCartGetOfRelSubtotal\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"numItem\": 0,\r\n            \"id\": \"RewardItemGetFreeNumItemOfProduct\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"amount\": 0,\r\n            \"id\": \"RewardItemGetOfAbs\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"amount\": 0,\r\n            \"numItem\": 0,\r\n            \"id\": \"RewardItemGetOfAbsForNum\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"amount\": 0,\r\n            \"maxLimit\": 0,\r\n            \"id\": \"RewardItemGetOfRel\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"amount\": 0,\r\n            \"numItem\": 0,\r\n            \"maxLimit\": 0,\r\n            \"id\": \"RewardItemGetOfRelForNum\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"quantity\": 0,\r\n            \"id\": \"RewardItemGiftNumItem\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"amount\": 0,\r\n            \"id\": \"RewardShippingGetOfAbsShippingMethod\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"amount\": 0,\r\n            \"maxLimit\": 0,\r\n            \"id\": \"RewardShippingGetOfRelShippingMethod\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"amount\": 0,\r\n            \"id\": \"RewardPaymentGetOfAbs\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"amount\": 0,\r\n            \"maxLimit\": 0,\r\n            \"id\": \"RewardPaymentGetOfRel\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"amount\": 0,\r\n            \"product\": {},\r\n            \"forNthQuantity\": 0,\r\n            \"inEveryNthQuantity\": 0,\r\n            \"itemLimit\": 0,\r\n            \"maxLimit\": 0,\r\n            \"id\": \"RewardItemForEveryNumInGetOfRel\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          },\r\n          {\r\n            \"conditionalProduct\": {},\r\n            \"amount\": 0,\r\n            \"product\": {},\r\n            \"forNthQuantity\": 0,\r\n            \"inEveryNthQuantity\": 0,\r\n            \"itemLimit\": 0,\r\n            \"maxLimit\": 0,\r\n            \"id\": \"RewardItemForEveryNumOtherItemInGetOfRel\",\r\n            \"availableChildren\": [],\r\n            \"children\": []\r\n          }\r\n        ],\r\n        \"children\": []\r\n      }\r\n    ],\r\n    \"children\": [\r\n      {\r\n        \"all\": false,\r\n        \"not\": false,\r\n        \"id\": \"BlockCustomerCondition\",\r\n        \"children\": [\r\n          {\r\n            \"id\": \"ConditionIsEveryone\",\r\n            \"children\": [],\r\n            \"excludingCategoryIds\": [],\r\n            \"excludingProductIds\": []\r\n          }\r\n        ],\r\n        \"excludingCategoryIds\": [],\r\n        \"excludingProductIds\": []\r\n      },\r\n      {\r\n        \"all\": false,\r\n        \"not\": false,\r\n        \"id\": \"BlockCatalogCondition\",\r\n        \"children\": [\r\n          {\r\n            \"id\": \"ConditionEntryIs\",\r\n            \"children\": [],\r\n            \"productIds\": [\r\n              \"{{ProductId1}}\"\r\n            ],\r\n            \"productNames\": [\r\n              \"{{Nameofproduct1}}\"\r\n            ],\r\n            \"productCodes\": [\r\n              \"{{Code1}}\"\r\n            ],\r\n            \"excludingCategoryIds\": [],\r\n            \"excludingProductIds\": []\r\n          }\r\n        ],\r\n        \"excludingCategoryIds\": [],\r\n        \"excludingProductIds\": []\r\n      },\r\n      {\r\n        \"all\": false,\r\n        \"not\": false,\r\n        \"id\": \"BlockCartCondition\",\r\n        \"children\": [],\r\n        \"excludingCategoryIds\": [],\r\n        \"excludingProductIds\": []\r\n      },\r\n      {\r\n        \"id\": \"BlockReward\",\r\n        \"children\": [\r\n          {\r\n            \"amount\": 50,\r\n            \"numItem\": \"1\",\r\n            \"id\": \"RewardItemGetOfAbsForNum\",\r\n            \"children\": [],\r\n            \"productId\": \"{{ProductId1}}\",\r\n            \"productName\": \"{{Nameofproduct1}}\",\r\n            \"productCode\": \"{{Code1}}\",\r\n            \"excludingCategoryIds\": [],\r\n            \"excludingProductIds\": []\r\n          }\r\n        ],\r\n        \"excludingCategoryIds\": [],\r\n        \"excludingProductIds\": []\r\n      }\r\n    ]\r\n  },\r\n  \"type\": \"DynamicPromotion\",\r\n  \"isActive\": true,\r\n  \"priority\": 0,\r\n  \"isExclusive\": true,\r\n  \"hasCoupons\": false,\r\n  \"maxUsageCount\": 0,\r\n  \"maxUsageOnOrder\": 0,\r\n  \"maxPersonalUsageCount\": 0,\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n  \"coupons\": [],\r\n  \"name\": \"{{Nameofproduct1}}\",\r\n  \"startDate\": \"2022-01-16T23:00:00.000Z\",\r\n  \"storeIds\": [\r\n    \"Electronics\",\r\n    \"B2B-store\"\r\n  ],\r\n    \"modifiedDate\":\"2021-09-23T12:46:47.29702Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{promotionId}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/marketing/promotions",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"marketing",
												"promotions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product discount",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"C260933 Check product discount\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   pm.expect(jsonData.data.product.prices[0].discountAmount.amount).to.eql(50);\r",
													"   pm.expect(jsonData.data.product.prices[0].discounts[0].amount).to.eql(50);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query {\r\n  product(id: \"{{ProductId1}}\", storeId: \"{{storeId}}\") {\r\n    id\r\n    code\r\n    prices {\r\n      pricelistId\r\n      discountAmount {\r\n        amount\r\n      }\r\n      list {\r\n        amount\r\n      }\r\n      sale{\r\n        amount\r\n      }\r\n      discounts {\r\n        amount\r\n        amountWithTax\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "ids",
													"value": "{{ProductId1}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete promo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/api/marketing/promotions?ids={{promotionId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"marketing",
												"promotions"
											],
											"query": [
												{
													"key": "ids",
													"value": "{{promotionId}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{AdminToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Get products [ID]",
							"item": [
								{
									"name": "Search",
									"item": [
										{
											"name": "Create product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set variables\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"code\":\"xapi-C0098\",\r\n   \"name\":\"xapi_Product\",\r\n   \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n   \"outline\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n   \"path\":\"Cell phones\",\r\n   \"isBuyable\":true,\r\n   \"isActive\":true,\r\n   \"trackInventory\":true,\r\n   \"maxQuantity\":0,\r\n   \"minQuantity\":1000,\r\n   \"productType\":\"Physical\",\r\n   \"startDate\":\"2022-04-27T05:34:58.7472916Z\",\r\n   \"priority\":1,\r\n   \"properties\":[\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"Brand\",\r\n         \"required\":true,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            {\r\n               \"propertyName\":\"Brand\",\r\n               \"propertyId\":\"43d14478-d142-4a65-956f-0a308d0c4ee8\",\r\n               \"languageCode\":\"en-US\",\r\n               \"alias\":\"Samsung\",\r\n               \"valueType\":\"ShortText\",\r\n               \"valueId\":\"605ade1ed08b4dac9bbb786bf4442261\",\r\n               \"value\":\"Samsung\",\r\n               \"propertyMultivalue\":false,\r\n               \"isInherited\":false,\r\n               \"id\":\"75d07b9c-252d-4504-b5a9-f7c9362089c6\"\r\n            }\r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Marke\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Brand\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"43d14478-d142-4a65-956f-0a308d0c4ee8\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"category_decimal\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"bd163eae-05fc-45fe-8699-d51a60ff1d57\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Color\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            {\r\n               \"propertyName\":\"Color\",\r\n               \"propertyId\":\"87fd1cec-79c2-4652-83b4-36e241ede571\",\r\n               \"languageCode\":\"en-US\",\r\n               \"alias\":\"Black\",\r\n               \"valueType\":\"ShortText\",\r\n               \"valueId\":\"fceb9f4073f04f4fbd1fb89a97b37ff2\",\r\n               \"value\":\"Black\",\r\n               \"propertyMultivalue\":true,\r\n               \"isInherited\":false,\r\n               \"id\":\"1f625b26-6eae-41af-995e-b8e09d6a5d21\"\r\n            },\r\n            {\r\n               \"propertyName\":\"Color\",\r\n               \"propertyId\":\"87fd1cec-79c2-4652-83b4-36e241ede571\",\r\n               \"languageCode\":\"de-DE\",\r\n               \"alias\":\"Black\",\r\n               \"valueType\":\"ShortText\",\r\n               \"valueId\":\"fceb9f4073f04f4fbd1fb89a97b37ff2\",\r\n               \"value\":\"Schwarz\",\r\n               \"propertyMultivalue\":true,\r\n               \"isInherited\":false,\r\n               \"id\":\"1f625b26-6eae-41af-995e-b8e09d6a5d21\"\r\n            }\r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Farber\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"Color\",\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"87fd1cec-79c2-4652-83b4-36e241ede571\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"csv_multilang\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":true,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"5db25a73-2c4b-42a9-9a63-91f87862568c\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Deep\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Deep\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a5e64e80-2484-496a-aff5-c8df9c75fbbe\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Display_size\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"Display size\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"Bildschirmgröße\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"fa4a86b5-d85b-464b-b27c-00f316a979e7\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Front_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"7ae290e2-b198-42b0-ae63-26537281d53b\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Internal_Storage_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"1e94acae-f338-44a3-8216-194c01260628\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Memory_Card_Slot\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"3309e819-a77a-437c-915d-28450d55bab6\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"multilang_1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"en\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"de\",\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"name\":\"fr\",\r\n               \"languageCode\":\"fr-FR\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ad055523-413d-446e-afee-89651c3dcb96\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"GeoPoint\",\r\n         \"type\":\"Catalog\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"name\":\"33\",\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"name\":\"22\",\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            {\r\n               \"isUnique\":false,\r\n               \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n               \"propertyId\":\"f7dd4622-a0a6-45b9-a41b-3fdfba10b4ab\",\r\n               \"id\":\"1eeca5cc-3d23-4532-9402-2cfb239ab96d\"\r\n            }\r\n         ],\r\n         \"validationRule\":{\r\n            \"isUnique\":false,\r\n            \"regExp\":\"^([-+]?(?:[1-8]?\\\\d(?:\\\\.\\\\d+)?|90(?:\\\\.0+)?)),\\\\s*([-+]?(?:180(?:\\\\.0+)?|(?:(?:1[0-7]\\\\d)|(?:[1-9]?\\\\d))(?:\\\\.\\\\d+)?))$\",\r\n            \"propertyId\":\"f7dd4622-a0a6-45b9-a41b-3fdfba10b4ab\",\r\n            \"id\":\"1eeca5cc-3d23-4532-9402-2cfb239ab96d\"\r\n         },\r\n         \"isInherited\":true,\r\n         \"id\":\"f7dd4622-a0a6-45b9-a41b-3fdfba10b4ab\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"name\":\"new_property_fhgfjh\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":true,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"fr-FR\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2736fc31-d2bd-49dd-9bb7-05de5ed49520\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"NFC\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"29007dd4-2f23-417b-902c-8d6565615eea\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Operating_system\",\r\n         \"required\":true,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            {\r\n               \"propertyName\":\"Operating_system\",\r\n               \"propertyId\":\"f5ac5fae-b80b-4f88-8042-e7f89c998eff\",\r\n               \"languageCode\":\"en-US\",\r\n               \"alias\":\"Android\",\r\n               \"valueType\":\"ShortText\",\r\n               \"valueId\":\"df8446355ee24ec59d0e5fe216caeefa\",\r\n               \"value\":\"Android\",\r\n               \"propertyMultivalue\":false,\r\n               \"isInherited\":false,\r\n               \"id\":\"b35ac187-9c2d-4de2-a116-2dabb49e25e9\"\r\n            }\r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f5ac5fae-b80b-4f88-8042-e7f89c998eff\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Pixels_Per_Inch_ppi\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"0e3029bd-dc69-4617-9163-78ac53ee8a6e\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Processor_Core_GHz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"85daf769-12c7-4135-9e8a-a0bcf74db4c3\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"prop1\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Integer\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"801b6b29-42ee-47bc-99e7-1eaa80288411\"\r\n      },\r\n      {\r\n         \"isReadOnly\":true,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"prop2\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"LongText\",\r\n         \"type\":\"Category\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"3ea65802-7402-446d-ac13-0ff182e97258\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"RAM_Memory_GB\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"f06daf73-efd3-4b6d-9143-bf08a0715991\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Rear_camera_MP\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"ee496813-1a59-4707-9816-85e639c55534\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"SIM_Card_Slots\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"552a29f0-fb63-4ea2-ba12-293cd8c9410c\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Two_SIM_cards\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Variation\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"b2e01868-4545-4159-8936-5f21a338cc2d\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Video_Recording\",\r\n         \"required\":false,\r\n         \"dictionary\":true,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            },\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"2d8f8a03-9c7d-464f-96b8-959e60e91214\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Waterproof\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"a897f2bd-bbbf-4efb-9a8e-000d1568bd96\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Weight_oz\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"13e822a6-9a07-4889-88df-52a3e7eef488\"\r\n      },\r\n      {\r\n         \"isReadOnly\":false,\r\n         \"isManageable\":true,\r\n         \"isNew\":false,\r\n         \"catalogId\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n         \"categoryId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n         \"name\":\"Year_Released\",\r\n         \"required\":false,\r\n         \"dictionary\":false,\r\n         \"multivalue\":false,\r\n         \"multilanguage\":false,\r\n         \"hidden\":false,\r\n         \"valueType\":\"Number\",\r\n         \"type\":\"Product\",\r\n         \"values\":[\r\n            \r\n         ],\r\n         \"attributes\":[\r\n            \r\n         ],\r\n         \"displayNames\":[\r\n            {\r\n               \"languageCode\":\"de-DE\"\r\n            },\r\n            {\r\n               \"languageCode\":\"en-US\"\r\n            }\r\n         ],\r\n         \"validationRules\":[\r\n            \r\n         ],\r\n         \"isInherited\":true,\r\n         \"id\":\"6283167f-5f8f-4210-9612-790d9b2eefa0\"\r\n      }\r\n   ],\r\n   \"images\":[\r\n      \r\n   ],\r\n   \"assets\":[\r\n      \r\n   ],\r\n   \"links\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"CatalogProduct\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"semanticUrl\":\"provide\",\r\n         \"pageTitle\":\"title\",\r\n         \"metaDescription\":\"seo\",\r\n         \"imageAltDescription\":\"text\",\r\n         \"metaKeywords\":\"key\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"f6d7d8cb-6e8b-40a9-8ef9-ff880ee029b2\",\r\n         \"objectType\":\"CatalogProduct\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\",\r\n         \"id\":\"f74b04d0-1415-43f0-ac9b-bc7617f370d8\"\r\n      }\r\n   ],\r\n   \"reviews\":[\r\n      \r\n   ],\r\n   \"associations\":[\r\n      \r\n   ],\r\n   \"referencedAssociations\":[\r\n      \r\n   ],\r\n   \"outlines\":[\r\n      {\r\n         \"items\":[\r\n            {\r\n               \"id\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n               \"seoObjectType\":\"Catalog\",\r\n               \"name\":\"Electronics\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n               \"seoObjectType\":\"Category\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"cell-phones\",\r\n                     \"objectId\":\"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                     \"objectType\":\"Category\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"73642cc7f2e44d92af13e94c79c73456\"\r\n                  }\r\n               ],\r\n               \"name\":\"Cell phones\",\r\n               \"hasVirtualParent\":false\r\n            },\r\n            {\r\n               \"id\":\"f6d7d8cb-6e8b-40a9-8ef9-ff880ee029b2\",\r\n               \"seoObjectType\":\"CatalogProduct\",\r\n               \"seoInfos\":[\r\n                  {\r\n                     \"semanticUrl\":\"provide\",\r\n                     \"pageTitle\":\"title\",\r\n                     \"metaDescription\":\"seo\",\r\n                     \"imageAltDescription\":\"text\",\r\n                     \"metaKeywords\":\"key\",\r\n                     \"storeId\":\"Electronics\",\r\n                     \"objectId\":\"f6d7d8cb-6e8b-40a9-8ef9-ff880ee029b2\",\r\n                     \"objectType\":\"CatalogProduct\",\r\n                     \"isActive\":true,\r\n                     \"languageCode\":\"en-US\",\r\n                     \"id\":\"f74b04d0-1415-43f0-ac9b-bc7617f370d8\"\r\n                  }\r\n               ],\r\n               \"name\":\"xapi_Product\",\r\n               \"hasVirtualParent\":false\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"isInherited\":false,\r\n   \"createdDate\":\"2001-01-01T00:00:00Z\",\r\n   \"modifiedDate\":\"2022-05-24T12:08:00.1185673Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"f6d7d8cb-6e8b-40a9-8ef9-ff880ee029b2\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"{{Nameofproduct1}}\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"outline\": \"{{categoryQA}}\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"{{Nameofproduct1}}\",\r\n        \"objectId\": \"{{ProductId1}}\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"{{catalogQA}}\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"{{categoryQA}}\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"{{Nameofproduct1}}\",\r\n                \"objectId\": \"{{ProductId1}}\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"{{Nameofproduct1}}\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{ProductId1}}\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": \"{{ProductPrice1}}\",\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId1}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId1}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product > Default ffc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product Default\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(32);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"fulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"fulfillmentCenterName\":\"{{DefaultFFCName}}\",\r\n   \"fulfillmentCenter\":{\r\n      \"name\":\"{{DefaultFFCName}}\",\r\n      \"description\":\"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n      \"address\":{\r\n         \"addressType\":0,\r\n         \"countryCode\":\"USA\",\r\n         \"countryName\":\"United States\",\r\n         \"city\":\"Chicago\",\r\n         \"postalCode\":\"60640\",\r\n         \"line1\":\"5400 N. Lakewood Avenue\",\r\n         \"regionName\":\"Illinois\",\r\n         \"phone\":\"(312) 222-3333\",\r\n         \"isDefault\":false\r\n      },\r\n      \"createdDate\":\"2018-05-05T05:55:00.64Z\",\r\n      \"modifiedDate\":\"2021-11-18T11:54:44.6718532Z\",\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\"\r\n   },\r\n   \"productId\":\"{{ProductId1}}\",\r\n   \"inStockQuantity\":32,\r\n   \"reservedQuantity\":0,\r\n   \"reorderMinQuantity\":0,\r\n   \"preorderQuantity\":0,\r\n   \"backorderQuantity\":0,\r\n   \"allowBackorder\":false,\r\n   \"allowPreorder\":false,\r\n   \"inTransit\":0,\r\n   \"status\":\"Disabled\",\r\n   \"createdDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"modifiedDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check Index\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId1}}\"\r\n        ]\r\n    }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.product.id).to.eql(pm.collectionVariables.get(\"ProductId1\"));\r",
															"    pm.expect(jsonData.data.product.name).to.eql(pm.collectionVariables.get(\"Nameofproduct1\"));\r",
															"     pm.expect(jsonData.data.product.code).to.eql(pm.collectionVariables.get(\"Code1\"));      \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 5000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\r\n  product(id: \"{{ProductId1}}\", storeId: \"{{storeId}}\") {\r\n    id\r\n    name\r\n    code\r\n    variations{\r\n      id\r\n      code\r\n    }\r\n    description {\r\n      id\r\n      languageCode\r\n      reviewType\r\n      content\r\n    }\r\n    descriptions{\r\n      id\r\n      languageCode\r\n      reviewType\r\n      content\r\n    }\r\n    properties{\r\n      name\r\n      value\r\n    }\r\n    images {\r\n      url\r\n      relativeUrl\r\n    }\r\n    assets {\r\n      id\r\n      name\r\n      cultureName\r\n    }\r\n    seoInfo {\r\n      name\r\n      semanticUrl\r\n      metaKeywords\r\n      metaDescription\r\n    }\r\n    price {\r\n      pricelistId\r\n      list {\r\n        amount\r\n      }\r\n      sale {\r\n        amount\r\n      }\r\n      discountAmount {\r\n        amount\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get search result filtered by price",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C265387 Get search result filtered by price\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ProductId1\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\nproducts(\r\nquery: \"\"\r\nstoreId: \"{{storeId}}\"\r\nfilter: \"price.usd:(9998 TO 9999]\"\r\nfirst: 100\r\n) {\r\ntotalCount\r\nitems {\r\n  id\r\n  name\r\n  imgSrc\r\n  slug\r\n  price {\r\n    pricelistId\r\n    actual {\r\n      amount\r\n    }\r\n    list {\r\n      amount\r\n    }\r\n    sale {\r\n      amount\r\n    }\r\n  }\r\n  properties {\r\n    name\r\n  }\r\n  seoInfo {\r\n    semanticUrl\r\n    metaKeywords\r\n    metaDescription\r\n  }\r\n}\r\n}\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get search result filtered by color",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C265388 Get search result filtered by color\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ProductId1\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\nproducts(\r\nquery: \"\"\r\nstoreId: \"{{storeId}}\"\r\nfilter: \"properties.color:Black\"\r\nfirst: 100\r\n) {\r\ntotalCount\r\nitems {\r\n  id\r\n  name\r\n  imgSrc\r\n  slug\r\n  price {\r\n    pricelistId\r\n    actual {\r\n      amount\r\n    }\r\n    list {\r\n      amount\r\n    }\r\n    sale {\r\n      amount\r\n    }\r\n  }\r\n  properties {\r\n    name\r\n  }\r\n  seoInfo {\r\n    semanticUrl\r\n    metaKeywords\r\n    metaDescription\r\n  }\r\n}\r\n}\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get products by query",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261142 Get products by query. \", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ProductId1\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\nproducts(\r\nquery: \"{{Nameofproduct1}}\"\r\nstoreId: \"{{storeId}}\"\r\nfirst: 100\r\n) {\r\ntotalCount\r\nitems {\r\n  id\r\n  name\r\n  imgSrc\r\n  slug\r\n  price {\r\n    pricelistId\r\n    actual {\r\n      amount\r\n    }\r\n    list {\r\n      amount\r\n    }\r\n    sale {\r\n      amount\r\n    }\r\n  }\r\n  properties {\r\n    name\r\n  }\r\n  seoInfo {\r\n    semanticUrl\r\n    metaKeywords\r\n    metaDescription\r\n  }\r\n}\r\n}\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get search result filtered by category",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261143 Get search result filtered by category\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ProductId1\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\nproducts(\r\nquery: \"\"\r\nstoreId: \"{{storeId}}\"\r\nfilter: \"status:hidden,visible is:variation,product category.path:4974648a41df4e6ea67ef2ad76d7bbd4/0d4ad9bab9184d69a6e586effdf9c2ea\"\r\nfirst: 100\r\n) {\r\ntotalCount\r\nitems {\r\n  id\r\n  name\r\n  imgSrc\r\n  slug\r\n  price {\r\n    pricelistId\r\n    actual {\r\n      amount\r\n    }\r\n    list {\r\n      amount\r\n    }\r\n    sale {\r\n      amount\r\n    }\r\n  }\r\n  properties {\r\n    name\r\n  }\r\n  seoInfo {\r\n    semanticUrl\r\n    metaKeywords\r\n    metaDescription\r\n  }\r\n}\r\n}\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get search result filtered by several options in filter",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C265564 Get search result filtered by several options in filter\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ProductId1\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\nproducts(\r\nquery: \"\"\r\nstoreId: \"{{storeId}}\"\r\nfilter: \"properties.color:Black properties.brand:Samsung\"\r\nfirst: 100\r\n) {\r\ntotalCount\r\nitems {\r\n  id\r\n  name\r\n  imgSrc\r\n  slug\r\n  price {\r\n    pricelistId\r\n    actual {\r\n      amount\r\n    }\r\n    list {\r\n      amount\r\n    }\r\n    sale {\r\n      amount\r\n    }\r\n  }\r\n  properties {\r\n    name\r\n  }\r\n  seoInfo {\r\n    semanticUrl\r\n    metaKeywords\r\n    metaDescription\r\n  }\r\n}\r\n}\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId1}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "X-cart",
					"item": [
						{
							"name": "Get all carts Anon [ID]",
							"item": [
								{
									"name": "Get all carts",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"C261104  Access denied\", function () {\r",
													"      var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.not.empty;\r",
													"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
													"});\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableCookies": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query carts {\n  carts(storeId: \"{{storeId}}\") {\n    items {\n      id\n      name\n      customerName\n    }\n  }\n}\n\n",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "GetToken [ID]",
							"item": [
								{
									"name": "GetAdminToken",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    \r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Set admin token\", function () {\r",
													"   \r",
													"    var jsonData = pm.response.json();\r",
													"    pm.collectionVariables.set(\"AdminToken\", jsonData.access_token);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "grand_type",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=password&scope=offline_access&username=admin&password=store",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{url}}/connect/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"connect",
												"token"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Cart [ID]",
							"item": [
								{
									"name": "Products",
									"item": [
										{
											"name": "Create product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId2\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId2\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct2\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code2\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304561\",\r\n    \"name\": \"Product2\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId3\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId3\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct3\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code3\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304562\",\r\n    \"name\": \"Product3\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId1}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId1}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId2}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code2}}\",\r\n    \"name\": \"Product2\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId2}}\",\r\n      \"list\": {{ProductPrice2}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId2}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId2}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId3}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code3}}\",\r\n    \"name\": \"Product3\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product3\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product3\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product3\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId3}}\",\r\n      \"list\": {{ProductPrice3}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId3}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId3}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(250);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"inStockQuantity\": 250,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(250);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId2}}\",\r\n  \"inStockQuantity\": 250,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId2}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(250);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId3}}\",\r\n  \"inStockQuantity\": 250,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId3}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId3}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index products",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check Index\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId1}}\", \"{{ProductId2}}\",\"{{ProductId4}}\"\r\n        ]\r\n    }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Cart User Anonymous [ID]",
									"item": [
										{
											"name": "Create user and get token",
											"item": [
												{
													"name": "Сreate contact_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add user_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
																"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"{{userName1}}\",\n    \"userName\": \"{{userName1}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId1}}\"\n      }}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Set сustomerId1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Set userId1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"userId1\",jsonData.data.contact.securityAccounts[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n  securityAccounts{\n      id\n  }\n  }\n    }\n",
																"variables": "{\n  \"id\": \"{{contactId1}}\"\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token for user_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set Token1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"Token1\", jsonData.access_token);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {
															"content-type": true
														},
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "grand_type",
																"value": "",
																"type": "text",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=password&scope=offline_access&username={{userName1}}&password={{userName1}}",
															"options": {
																"raw": {
																	"language": "text"
																}
															}
														},
														"url": {
															"raw": "{{url}}/connect/token",
															"host": [
																"{{url}}"
															],
															"path": [
																"connect",
																"token"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{AdminToken}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "User_1 cart, Token_2 = Without token",
											"item": [
												{
													"name": "Delete promo  [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000);"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/marketing/promotions?ids={{promotionId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"marketing",
																"promotions"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{promotionId}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Add promotion  [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Promo added\", function () {\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"promotionId\"));\r",
																	";\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000);"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"isAllowCombiningWithSelf\":false,\r\n   \"dynamicExpression\":{\r\n      \"all\":true,\r\n      \"not\":false,\r\n      \"id\":\"PromotionConditionAndRewardTree\",\r\n      \"availableChildren\":[\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCustomerCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"id\":\"ConditionIsRegisteredUser\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionIsEveryone\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionIsFirstTimeBuyer\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"UserGroupsContainsCondition\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCatalogCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"id\":\"ConditionCategoryIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionCodeContains\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionCurrencyIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionEntryIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"quantity\":0,\r\n                  \"quantitySecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionInStockQuantity\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionHasNoSalePrice\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCartCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsInCategoryAreInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsOfEntryAreInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"subTotal\":0.0,\r\n                  \"subTotalSecond\":0.0,\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionCartSubtotalLeast\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"id\":\"BlockReward\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardCartGetOfAbsSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardCartGetOfRelSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"id\":\"RewardItemGetFreeNumItemOfProduct\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardItemGetOfAbs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"numItem\":0,\r\n                  \"id\":\"RewardItemGetOfAbsForNum\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"numItem\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemGetOfRelForNum\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"quantity\":0,\r\n                  \"id\":\"RewardItemGiftNumItem\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardShippingGetOfAbsShippingMethod\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardShippingGetOfRelShippingMethod\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardPaymentGetOfAbs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardPaymentGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"product\":{\r\n                     \r\n                  },\r\n                  \"forNthQuantity\":0,\r\n                  \"inEveryNthQuantity\":0,\r\n                  \"itemLimit\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemForEveryNumInGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"conditionalProduct\":{\r\n                     \r\n                  },\r\n                  \"amount\":0.0,\r\n                  \"product\":{\r\n                     \r\n                  },\r\n                  \"forNthQuantity\":0,\r\n                  \"inEveryNthQuantity\":0,\r\n                  \"itemLimit\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemForEveryNumOtherItemInGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         }\r\n      ],\r\n      \"children\":[\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCustomerCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"id\":\"ConditionIsRegisteredUser\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionIsEveryone\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionIsFirstTimeBuyer\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"UserGroupsContainsCondition\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               {\r\n                  \"id\":\"ConditionIsEveryone\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCatalogCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"id\":\"ConditionCategoryIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionCodeContains\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionCurrencyIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionEntryIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"quantity\":0,\r\n                  \"quantitySecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionInStockQuantity\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionHasNoSalePrice\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCartCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsInCategoryAreInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsOfEntryAreInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"subTotal\":0.0,\r\n                  \"subTotalSecond\":0.0,\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionCartSubtotalLeast\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"id\":\"BlockReward\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardCartGetOfAbsSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardCartGetOfRelSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"id\":\"RewardItemGetFreeNumItemOfProduct\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardItemGetOfAbs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"numItem\":0,\r\n                  \"id\":\"RewardItemGetOfAbsForNum\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"numItem\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemGetOfRelForNum\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"quantity\":0,\r\n                  \"id\":\"RewardItemGiftNumItem\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardShippingGetOfAbsShippingMethod\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardShippingGetOfRelShippingMethod\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardPaymentGetOfAbs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardPaymentGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"product\":{\r\n                     \r\n                  },\r\n                  \"forNthQuantity\":0,\r\n                  \"inEveryNthQuantity\":0,\r\n                  \"itemLimit\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemForEveryNumInGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"conditionalProduct\":{\r\n                     \r\n                  },\r\n                  \"amount\":0.0,\r\n                  \"product\":{\r\n                     \r\n                  },\r\n                  \"forNthQuantity\":0,\r\n                  \"inEveryNthQuantity\":0,\r\n                  \"itemLimit\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemForEveryNumOtherItemInGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               {\r\n                  \"amount\":5.5,\r\n                  \"id\":\"RewardCartGetOfAbsSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ]\r\n         }\r\n      ]\r\n   },\r\n   \"storeIds\":[\r\n      \"Electronics\"\r\n   ],\r\n   \"name\":\"xApi_Promotion\",\r\n   \"type\":\"DynamicPromotion\",\r\n   \"isActive\":true,\r\n   \"priority\":0,\r\n   \"isExclusive\":false,\r\n   \"hasCoupons\":false,\r\n   \"maxUsageCount\":0,\r\n   \"maxUsageOnOrder\":0,\r\n   \"maxPersonalUsageCount\":0,\r\n   \"startDate\":\"2021-09-23T22:00:00Z\",\r\n   \"createdDate\":\"2021-09-23T12:46:47.29702Z\",\r\n   \"modifiedDate\":\"2021-09-23T12:46:47.29702Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{promotionId}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/marketing/promotions",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"marketing",
																"promotions"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add coupon to Promo  [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000);"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\r\n   {\r\n      \"promotionId\":\"{{promotionId}}\",\r\n      \"isNew\":true,\r\n      \"code\":\"{{xapi_promo_code}}\",\r\n      \"maxUsesNumber\":10,\r\n      \"maxUsesPerUser\":10\r\n   }\r\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/marketing/promotions/coupons/add",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"marketing",
																"promotions",
																"coupons",
																"add"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get user_1 cart  [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set cartId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId\", jsonData.data.cart.id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId1}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: get cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261106 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query carts {\r\ncarts(storeId: \"{{storeId}}\", userId:\"{{userId1}}\") {\r\nitems {\r\n    customerName\r\nid\r\nname\r\ncustomerName\r\n}\r\n}\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Clear cart [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add items",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C279146 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity\r\n        }\r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"ac8da6c50cef42ad97d6f1effe2abaee\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"e7eee66223da43109502891b54bc33d3\",\r\n        \"quantity\": 5\r\n    }   \r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add items",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check items\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.addItemsCart.items[0,1]).to.be.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity\r\n        }\r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId2}}\",\r\n        \"quantity\": 5\r\n    }   \r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Cart after add items [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Set lineitemId\", function(){\r",
																	" var jasonData =pm.response.json();  \r",
																	"pm.collectionVariables.set(\"lineItemId1\", jasonData.data.cart.items[0].id);\r",
																	"pm.collectionVariables.set(\"lineItemId2\", jasonData.data.cart.items[1].id);\r",
																	"pm.collectionVariables.set(\"cartId\", jasonData.data.cart.id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: remove cart item",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261897 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCartItem ($command: InputRemoveItemType!) {\nremoveCartItem (command: $command) {\nid\nitems{\nid\nquantity\nproduct{\nid\n}\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: remove cart item",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Check after remove lineitems\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart).to.not.eql(null);\r",
																	"    pm.expect(pm.response.text()).to.not.include(pm.collectionVariables.get(\"lineItemId1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"lineItemId2\"));\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCartItem ($command: InputRemoveItemType!) {\nremoveCartItem (command: $command) {\nid\nitems{\nid\nquantity\nproduct{\nid\n}\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId1}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add item",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261889 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addItem($command: InputAddItemType!) {\naddItem(command: $command) {\nid\nitems {\nid\nquantity\nlistPrice{\namount\n}\nnote\n}\ntotal{\namount\n}\ndiscountTotal{\namount\n}\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"productId\": \"{{ProductId3}}\",\n    \"quantity\": 5,\n    \"comment\": \"{{comment}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add item",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Check additem\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.addItem).to.not.eql(null);     \r",
																	"pm.expect(jsonData.data.addItem.id).to.be.a(\"string\");    \r",
																	"pm.expect(jsonData.data.addItem.items[0,1]).to.be.an(\"object\");\r",
																	"pm.expect(data.errors).to.be.undefined;\r",
																	"\r",
																	"pm.collectionVariables.set(\"lineItemId1\", jsonData.data.addItem.items[0].id);\r",
																	"pm.collectionVariables.set(\"lineItemId2\", jsonData.data.addItem.items[1].id);\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addItem($command: InputAddItemType!) {\naddItem(command: $command) {\nid\nitems {\nid\nquantity\nlistPrice{\namount\n}\nnote\n}\ntotal{\namount\n}\ndiscountTotal{\namount\n}\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"productId\": \"{{ProductId3}}\",\n    \"quantity\": 5,\n    \"comment\": \"{{comment}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: change cart item qty = 0",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261891 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeCartItemQuantity ($command: InputChangeCartItemQuantityType!) {\nchangeCartItemQuantity (command: $command) {\nid\nitems{\nid\nname\nquantity\n}\ntotal{\namount\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId2}}\",\n\"quantity\": 0\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: change cart item qty = 0",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Check after change qty\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.changeCartItemQuantity.items).length(1);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeCartItemQuantity ($command: InputChangeCartItemQuantityType!) {\nchangeCartItemQuantity (command: $command) {\nid\nitems{\nid\nname\nquantity\n}\ntotal{\namount\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId2}}\",\n\"quantity\": 0\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: change cart item price",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261894 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeCartItemPrice($command: InputChangeCartItemPriceType!) {\nchangeCartItemPrice(command: $command) {\n    id\nitemsQuantity\ntotal {\namount\n}\nitems {\nid\nlistPrice{\namount\n}\nsalePrice{\namount\n}\nproduct {\nid\nprice {\nactual {\namount\n}\nlist {\namount\n}\nsale {\namount\n}\n}\n}\ndiscountTotal {\namount\n}\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId2}}\",\n\"price\": 2000\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: change cart item price",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Check after change price\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.changeCartItemPrice.items[0].id).equal(pm.collectionVariables.get(\"lineItemId1\"))\r",
																	"    pm.expect(data.data.changeCartItemPrice.items[0].listPrice.amount).to.exist\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeCartItemPrice($command: InputChangeCartItemPriceType!) {\nchangeCartItemPrice(command: $command) {\n    id\nitemsQuantity\ntotal {\namount\n}\nitems {\nid\nlistPrice{\namount\n}\nsalePrice{\namount\n}\nproduct {\nid\nprice {\nactual {\namount\n}\nlist {\namount\n}\nsale {\namount\n}\n}\n}\ndiscountTotal {\namount\n}\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId1}}\",\n\"price\": 17000\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: change comment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261886 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeComment ($command: InputChangeCommentType) {\nchangeComment (command: $command) {\nid\nname\ncomment\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"comment\": \"{{newComment}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: change comment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Add comment\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.changeComment.comment).to.eql(pm.collectionVariables.get(\"newComment\"))\r",
																	";\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeComment ($command: InputChangeCommentType) {\nchangeComment (command: $command) {\nid\nname\ncomment\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"comment\": \"{{newComment}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: change cart item comment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261794 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeCartItemComment($command: InputChangeCartItemCommentType) {\nchangeCartItemComment(command: $command) {\nid\ncomment\nitems {\nid\nlistPrice {\namount\n}\nnote\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId1}}\",\n\"comment\": \"{{lineItemsComment}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: change cart item comment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Check after change lineitems comment\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"     pm.expect(data.data.changeCartItemComment.items[0].note).equal(pm.collectionVariables.get(\"lineItemsComment\"))\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeCartItemComment($command: InputChangeCartItemCommentType) {\nchangeCartItemComment(command: $command) {\nid\ncomment\nitems {\nid\nlistPrice {\namount\n}\nnote\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId1}}\",\n\"comment\": \"{{lineItemsComment}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set cartId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId\", jsonData.data.cart.id);\r",
																	"});\r",
																	"pm.test(\"Check cart by user ID\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart).to.not.eql(null);\r",
																	"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
																	"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"pm.test(\"Check available payment method\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart.availablePaymentMethods).to.not.empty;\r",
																	"     pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"pm.test(\"Check available shipment method\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart.availableShippingMethods).to.not.empty;\r",
																	" pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add dynamic property to cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C328919 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartDynamicProperties($command: InputUpdateCartDynamicPropertiesType!) {\r\nupdateCartDynamicProperties(command: $command) {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n} ",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",  \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}     ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add dynamic property to cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add dynamicproperty to cart\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.updateCartDynamicProperties).to.not.eql(null);     \r",
																	"pm.expect(jsonData.data.updateCartDynamicProperties.id).to.be.a(\"string\");    \r",
																	"pm.expect(jsonData.data.updateCartDynamicProperties.dynamicProperties[0]).to.be.an(\"object\");\r",
																	"  \r",
																	"pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Check value\", function () {\r",
																	"        pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
																	"    });\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartDynamicProperties($command: InputUpdateCartDynamicPropertiesType!) {\r\nupdateCartDynamicProperties(command: $command) {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n} ",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",  \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}    ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add dynamic properties for lineitems in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C328920 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartItemDynamicProperties($command: InputUpdateCartItemDynamicPropertiesType!) {\r\nupdateCartItemDynamicProperties(command: $command) {\r\nid\r\nitems {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"lineItemId\": \"{{lineItemId}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},{\r\n\"name\": \"CartModule_LineItem_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Decimal_0_0_0\",\r\n\"value\":{{decimal1}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_LineItem_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add dynamic properties for lineitems in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add dynamicproperties for lineitems\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.updateCartDynamicProperties).to.not.eql(null);     \r",
																	"pm.expect(jsonData.data.updateCartItemDynamicProperties.items[0].dynamicProperties[0]).to.be.an(\"object\");\r",
																	"pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Check value\", function () {\r",
																	"        pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
																	"    });\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartItemDynamicProperties($command: InputUpdateCartItemDynamicPropertiesType!) {\r\nupdateCartItemDynamicProperties(command: $command) {\r\nid\r\nitems {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"lineItemId\": \"{{lineItemId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},{\r\n\"name\": \"CartModule_LineItem_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Decimal_0_0_0\",\r\n\"value\":{{decimal1}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_LineItem_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}  ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add cart payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261931 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add cart payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"AddOrUpdatePayment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
																	"    pm.collectionVariables.set(\"paymentId1\",jSonData.data.addOrUpdateCartPayment.payments[0].id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add dynamic properties for payments in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C328921 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartPaymentDynamicProperties($command: InputUpdateCartPaymentDynamicPropertiesType!) {\r\nupdateCartPaymentDynamicProperties(command: $command) {\r\nid\r\npayments {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"paymentId\": \"{{paymentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Payment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Boolean_0_0_0\",\r\n\"value\":{{bool1}}\r\n},{\r\n\"name\": \"CartModule_Payment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_Payment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Html_0_1_0\",\r\n\"value\": \"{{html3}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_Payment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_Payment_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add dynamic properties for payments in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add dynamicPropertiesPayment\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.updateCartPaymentDynamicProperties).to.not.eql(null);     \r",
																	" \r",
																	"pm.expect(jsonData.data.updateCartPaymentDynamicProperties.payments[0]).to.be.an(\"object\");\r",
																	"pm.expect(jsonData.data.updateCartPaymentDynamicProperties.payments[0].dynamicProperties).to.be.not.empty;\r",
																	"pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Check value\", function () {\r",
																	"        pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
																	"    });\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartPaymentDynamicProperties($command: InputUpdateCartPaymentDynamicPropertiesType!) {\r\nupdateCartPaymentDynamicProperties(command: $command) {\r\nid\r\npayments {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"paymentId\": \"{{paymentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Payment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Boolean_0_0_0\",\r\n\"value\":{{bool1}}\r\n},{\r\n\"name\": \"CartModule_Payment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_Payment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Html_0_1_0\",\r\n\"value\": \"{{html3}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_Payment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_Payment_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add cart shipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261940 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add cart shipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"AddOrUpdateShipment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"    pm.collectionVariables.set(\"shipmentId1\",jSonData.data.addOrUpdateCartShipment.shipments[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add dynamic properties for shipments in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C328922 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartShipmentDynamicProperties($command: InputUpdateCartShipmentDynamicPropertiesType!) {\r\nupdateCartShipmentDynamicProperties(command: $command) {\r\nid\r\nshipments{\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"shipmentId\":\"{{shipmentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Boolean_0_0_0\",\r\n\"value\": {{bool1}}\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_1\",\r\n\"value\": \"{{short2}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_1_0\",\r\n\"value\": \"{{short4}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add dynamic properties for shipments in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add CartShipmentDynamicProperties\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.updateCartShipmentDynamicProperties).to.not.eql(null);     \r",
																	"pm.expect(jsonData.data.updateCartShipmentDynamicProperties.id).to.be.a(\"string\");    \r",
																	"pm.expect(jsonData.data.updateCartShipmentDynamicProperties.shipments[0]).to.be.an(\"object\");\r",
																	"pm.expect(jsonData.data.updateCartShipmentDynamicProperties.shipments[0].id).to.be.a(\"string\");\r",
																	"pm.expect(data.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartShipmentDynamicProperties($command: InputUpdateCartShipmentDynamicPropertiesType!) {\r\nupdateCartShipmentDynamicProperties(command: $command) {\r\nid\r\nshipments{\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"shipmentId\":\"{{shipmentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Boolean_0_0_0\",\r\n\"value\": {{bool1}}\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_1\",\r\n\"value\": \"{{short2}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_1_0\",\r\n\"value\": \"{{short4}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n} ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check after all [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"\r",
																	"pm.test(\"Set total1\", function(){\r",
																	"    var json = pm.response.json();\r",
																	"pm.collectionVariables.set(\"total1\", json.data.cart.total.amount);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Validate coupon [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check validateCoupon\", function(){\r",
																	"var jSon = pm.response.json();\r",
																	"pm.expect(jSon.data.validateCoupon).to.be.a(\"boolean\");\r",
																	"pm.expect(data.error).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation validateCoupon ($command: InputValidateCouponType!) {\n    validateCoupon (command: $command)\n    \n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": null,\n    \"coupon\": \"{{xapi_promo_code}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261900 Check AddCoupon\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addCoupon($command: InputAddCouponType!) {\naddCoupon(command: $command) {\nid\nname\ncustomerName\ncoupons {\ncode\nisAppliedSuccessfully\n}\ndiscounts{\ncoupon\n}\ndiscountTotal {\namount\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"couponCode\": \"{{xapi_promo_code}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check AddCoupon\", function(){\r",
																	"var jSon = pm.response.json();\r",
																	"pm.expect(jSon.data.addCoupon).to.not.empty;\r",
																	"pm.expect(jSon.data.addCoupon.coupons[0]).to.be.an(\"object\");\r",
																	"pm.expect(jSon.data.addCoupon.coupons[0].code).to.be.a(\"string\");\r",
																	"pm.expect(jSon.data.addCoupon.coupons[0].isAppliedSuccessfully).to.be.equal(true);\r",
																	"pm.expect(data.error).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addCoupon($command: InputAddCouponType!) {\naddCoupon(command: $command) {\nid\nname\ncustomerName\ncoupons {\ncode\nisAppliedSuccessfully\n}\ndiscounts{\ncoupon\n}\ndiscountTotal {\namount\n}\ntotal{amount}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"couponCode\": \"{{xapi_promo_code}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: cart after add coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\ndiscounts{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: cart after add coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"\r",
																	"pm.test(\"Check totals\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"total2\", jsonData.data.cart.total.amount);\r",
																	"pm.expect(jsonData.data.cart.total.amount).to.be.not.equal(\"total1\")\r",
																	"\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\ncoupons{\n    code\n}\n\ntotal{\n    amount\n}\ndiscounts{\n    amount\n    \n}\n\n\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: remove coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261808 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCoupon($command: InputRemoveCouponType!) {\nremoveCoupon(command: $command) {\nid\nname\ncustomerName\ncoupons {\ncode\nisAppliedSuccessfully\n}\ndiscounts{\ncoupon\n}\ndiscountTotal {\namount\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"couponCode\": \"{{xapi_promo_code}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: remove coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"coupons = 0\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.removeCoupon.coupons).to.be.empty;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCoupon($command: InputRemoveCouponType!) {\nremoveCoupon(command: $command) {\nid\nname\ncustomerName\ncoupons {\ncode\nisAppliedSuccessfully\n}\ndiscounts{\ncoupon\n}\ntotal{amount}\ndiscountTotal {\namount\n}\nitems{name}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"couponCode\": \"{{xapi_promo_code}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Cart after remove coupon [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Check totals\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"var total1 = pm.collectionVariables.get(\"total1\");\r",
																	"pm.expect(jsonData.data.cart.total.amount).to.be.equal(total1);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\ncoupons{\n    code\n}\n\ntotal{\n    amount\n}\ndiscounts{\n    amount\n    \n}\n\n\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add cart address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261919 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"City 18\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add cart address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Check addOrUpdateCartAddress \", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress.id).to.be.not.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"    pm.collectionVariables.set(\"cartAddress\",json.data.addOrUpdateCartAddress.addresses[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"City 18\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: remove cart address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261816 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCartAddress ($command: InputRemoveCartAddressType!) {\nremoveCartAddress (command: $command) {\nid\naddresses{\nid\ncity\n\n}\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"addressId\": \"KeyTest\"\n      }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: remove cart address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"removeCartAddress\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.removeCartAddress).to.be.not.empty;\r",
																	"    pm.expect(json.data.removeCartAddress.id).to.be.not.empty;\r",
																	"    pm.expect(json.data.removeCartAddress.addresses[0].id).to.be.a(\"string\");\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCartAddress ($command: InputRemoveCartAddressType!) {\nremoveCartAddress (command: $command) {\nid\naddresses{\nid\ncity\n\n}\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"addressId\": \"KeyTest\"\n      }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: clear shipments",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261800 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearShipments ($command: InputClearShipmentsType!) {\nclearShipments (command: $command) {\nid\nshipments{\nid\nshipmentMethodCode\nshipmentMethodOption\ndeliveryAddress{\nid\nline1\nline2\n}\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: clear shipments",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"clearShipments\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.clearShipments).to.be.not.empty;\r",
																	"    pm.expect(json.data.clearShipments.shipments).to.be.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearShipments ($command: InputClearShipmentsType!) {\nclearShipments (command: $command) {\nid\nshipments{\nid\nshipmentMethodCode\nshipmentMethodOption\ndeliveryAddress{\nid\nline1\nline2\n}\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: remove shipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261806 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeShipment ($command: InputRemoveShipmentType!) {\nremoveShipment (command: $command) {\nid\nshipments{\nid\nshipmentMethodCode\nshipmentMethodOption\ndeliveryAddress{\nid\nline1\nline2\n}\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"shipmentId\": \"shipmentID_1\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: remove shipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"removeShipment\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.removeShipment).to.be.not.empty;\r",
																	"    pm.expect(json.data.removeShipment.shipments).to.be.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeShipment ($command: InputRemoveShipmentType!) {\nremoveShipment (command: $command) {\nid\nshipments{\nid\nshipmentMethodCode\nshipmentMethodOption\ndeliveryAddress{\nid\nline1\nline2\n}\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"shipmentId\": \"shipmentID_1\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: clear payments",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261937 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearPayments ($command: InputClearPaymentsType!) {\nclearPayments (command: $command) {\nid\npayments{\nid\nouterId\namount{\namount\n}\nbillingAddress{\nline1\n}\n}\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: clear payments",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"clearPayments\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.clearPayments).to.be.not.empty;\r",
																	"    pm.expect(json.data.clearPayments.payments).to.be.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearPayments ($command: InputClearPaymentsType!) {\nclearPayments (command: $command) {\nid\npayments{\nid\nouterId\namount{\namount\n}\nbillingAddress{\nline1\n}\n}\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: clear cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261906 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: clear cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"clearCart\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: remove cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261913 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCart ($command: InputRemoveCartType!) {\n    removeCart (command: $command)\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: remove cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RemoveCart\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.removeCart).to.be.equal(true);\r",
																	"    pm.expect(data.error).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCart ($command: InputRemoveCartType!) {\n    removeCart (command: $command)\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "noauth"
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "Delete contact, promo, users",
											"item": [
												{
													"name": "Delete contact_1",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete user_1",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\"\r\n    ]\r\n  }\r\n}\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete promo",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/marketing/promotions?ids={{promotionId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"marketing",
																"promotions"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{promotionId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Cart User [ID]",
									"item": [
										{
											"name": "Create user and get token",
											"item": [
												{
													"name": "Сreate contact_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add user_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
																"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"{{userName1}}\",\n    \"userName\": \"{{userName1}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId1}}\",\n    \"storeId\":\"{{storeId}}\"\n      }}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Set сustomerId1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Set userId1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"userId1\",jsonData.data.contact.securityAccounts[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n  securityAccounts{\n      id\n  }\n  }\n    }\n",
																"variables": "{\n  \"id\": \"{{contactId1}}\"\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Сreate contact_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId2\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId2\", jsonData.data.createContact.id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact2\",\n\"memberType\": \"Contac2\",\n\"addresses\": [],\n\"fullName\": \"Contact2\",\n\"firstName\": \"Contact2\",\n\"lastName\": \"Contact2\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add user_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n        \n    }\n}\n\n",
																"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"{{userName2}}\",\n    \"userName\": \"{{userName2}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId2}}\"\n      }}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Set сustomerId2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Set userId2\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"userId2\", jsonData.data.contact.securityAccounts[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n  securityAccounts{\n      id\n  }\n  }\n    }\n",
																"variables": "{\n  \"id\": \"{{contactId2}}\"\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token for user_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set Token1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"Token1\", jsonData.access_token);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {
															"content-type": true
														}
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "grand_type",
																"value": "",
																"type": "text",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=password&scope=offline_access&username={{userName1}}&password={{userName1}}",
															"options": {
																"raw": {
																	"language": "text"
																}
															}
														},
														"url": {
															"raw": "{{url}}/connect/token",
															"host": [
																"{{url}}"
															],
															"path": [
																"connect",
																"token"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token for user_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set Token2\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"Token2\", jsonData.access_token);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {
															"content-type": true
														}
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "grand_type",
																"value": "",
																"type": "text",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=password&scope=offline_access&username={{userName2}}&password={{userName2}}",
															"options": {
																"raw": {
																	"language": "text"
																}
															}
														},
														"url": {
															"raw": "{{url}}/connect/token",
															"host": [
																"{{url}}"
															],
															"path": [
																"connect",
																"token"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{AdminToken}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "User_1 cart, Token_2",
											"item": [
												{
													"name": "Delete Promo",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/marketing/promotions?ids={{promotionId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"marketing",
																"promotions"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{promotionId}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Add promotion",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Promo added\", function () {\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"promotionId\"));\r",
																	";\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"isAllowCombiningWithSelf\":false,\r\n   \"dynamicExpression\":{\r\n      \"all\":true,\r\n      \"not\":false,\r\n      \"id\":\"PromotionConditionAndRewardTree\",\r\n      \"availableChildren\":[\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCustomerCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"id\":\"ConditionIsRegisteredUser\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionIsEveryone\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionIsFirstTimeBuyer\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"UserGroupsContainsCondition\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCatalogCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"id\":\"ConditionCategoryIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionCodeContains\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionCurrencyIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionEntryIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"quantity\":0,\r\n                  \"quantitySecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionInStockQuantity\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionHasNoSalePrice\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCartCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsInCategoryAreInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsOfEntryAreInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"subTotal\":0.0,\r\n                  \"subTotalSecond\":0.0,\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionCartSubtotalLeast\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"id\":\"BlockReward\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardCartGetOfAbsSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardCartGetOfRelSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"id\":\"RewardItemGetFreeNumItemOfProduct\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardItemGetOfAbs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"numItem\":0,\r\n                  \"id\":\"RewardItemGetOfAbsForNum\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"numItem\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemGetOfRelForNum\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"quantity\":0,\r\n                  \"id\":\"RewardItemGiftNumItem\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardShippingGetOfAbsShippingMethod\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardShippingGetOfRelShippingMethod\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardPaymentGetOfAbs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardPaymentGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"product\":{\r\n                     \r\n                  },\r\n                  \"forNthQuantity\":0,\r\n                  \"inEveryNthQuantity\":0,\r\n                  \"itemLimit\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemForEveryNumInGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"conditionalProduct\":{\r\n                     \r\n                  },\r\n                  \"amount\":0.0,\r\n                  \"product\":{\r\n                     \r\n                  },\r\n                  \"forNthQuantity\":0,\r\n                  \"inEveryNthQuantity\":0,\r\n                  \"itemLimit\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemForEveryNumOtherItemInGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         }\r\n      ],\r\n      \"children\":[\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCustomerCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"id\":\"ConditionIsRegisteredUser\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionIsEveryone\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionIsFirstTimeBuyer\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"UserGroupsContainsCondition\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               {\r\n                  \"id\":\"ConditionIsEveryone\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCatalogCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"id\":\"ConditionCategoryIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionCodeContains\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionCurrencyIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionEntryIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"quantity\":0,\r\n                  \"quantitySecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionInStockQuantity\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionHasNoSalePrice\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCartCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsInCategoryAreInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsOfEntryAreInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"subTotal\":0.0,\r\n                  \"subTotalSecond\":0.0,\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionCartSubtotalLeast\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"id\":\"BlockReward\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardCartGetOfAbsSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardCartGetOfRelSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"id\":\"RewardItemGetFreeNumItemOfProduct\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardItemGetOfAbs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"numItem\":0,\r\n                  \"id\":\"RewardItemGetOfAbsForNum\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"numItem\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemGetOfRelForNum\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"quantity\":0,\r\n                  \"id\":\"RewardItemGiftNumItem\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardShippingGetOfAbsShippingMethod\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardShippingGetOfRelShippingMethod\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardPaymentGetOfAbs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardPaymentGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"product\":{\r\n                     \r\n                  },\r\n                  \"forNthQuantity\":0,\r\n                  \"inEveryNthQuantity\":0,\r\n                  \"itemLimit\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemForEveryNumInGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"conditionalProduct\":{\r\n                     \r\n                  },\r\n                  \"amount\":0.0,\r\n                  \"product\":{\r\n                     \r\n                  },\r\n                  \"forNthQuantity\":0,\r\n                  \"inEveryNthQuantity\":0,\r\n                  \"itemLimit\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemForEveryNumOtherItemInGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               {\r\n                  \"amount\":5.5,\r\n                  \"id\":\"RewardCartGetOfAbsSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ]\r\n         }\r\n      ]\r\n   },\r\n   \"storeIds\":[\r\n      \"Electronics\"\r\n   ],\r\n   \"name\":\"xApi_Promotion\",\r\n   \"type\":\"DynamicPromotion\",\r\n   \"isActive\":true,\r\n   \"priority\":0,\r\n   \"isExclusive\":false,\r\n   \"hasCoupons\":false,\r\n   \"maxUsageCount\":0,\r\n   \"maxUsageOnOrder\":0,\r\n   \"maxPersonalUsageCount\":0,\r\n   \"startDate\":\"2021-09-23T22:00:00Z\",\r\n   \"createdDate\":\"2021-09-23T12:46:47.29702Z\",\r\n   \"modifiedDate\":\"2021-09-23T12:46:47.29702Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{promotionId}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/marketing/promotions",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"marketing",
																"promotions"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add coupon to Promo",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\r\n   {\r\n      \"promotionId\":\"{{promotionId}}\",\r\n      \"isNew\":true,\r\n      \"code\":\"{{xapi_promo_code}}\",\r\n      \"maxUsesNumber\":10,\r\n      \"maxUsesPerUser\":10\r\n   }\r\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/marketing/promotions/coupons/add",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"marketing",
																"promotions",
																"coupons",
																"add"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get cart user_1 [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set cartId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId\", jsonData.data.cart.id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId1}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: get user's carts",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261105 getCart\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.carts.items[0].id).to.be.eql(pm.collectionVariables.get(\"cartId\"));\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query carts {\r\ncarts(storeId: \"{{storeId}}\") {\r\nitems {\r\n    customerName\r\nid\r\nname\r\ncustomerName\r\n}\r\n}\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Clear cart [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add items",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C279152 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity\r\n        }\r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"ac8da6c50cef42ad97d6f1effe2abaee\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"e7eee66223da43109502891b54bc33d3\",\r\n        \"quantity\": 5\r\n    }   \r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add items",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C279136 Check items\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.addItemsCart.items[0,1]).to.be.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity\r\n        }\r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId2}}\",\r\n        \"quantity\": 5\r\n    }   \r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get cart[admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Set lineitemId\", function(){\r",
																	" var jasonData =pm.response.json();  \r",
																	"pm.collectionVariables.set(\"lineItemId1\", jasonData.data.cart.items[0].id);\r",
																	"pm.collectionVariables.set(\"lineItemId2\", jasonData.data.cart.items[1].id);\r",
																	"pm.collectionVariables.set(\"cartId\", jasonData.data.cart.id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: remove cart item",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261898 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCartItem ($command: InputRemoveItemType!) {\nremoveCartItem (command: $command) {\nid\nitems{\nid\nquantity\nproduct{\nid\n}\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: remove cart item",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C261814 Check after remove lineitems\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart).to.not.eql(null);\r",
																	"    pm.expect(pm.response.text()).to.not.include(pm.collectionVariables.get(\"lineItemId1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"lineItemId2\"));\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCartItem ($command: InputRemoveItemType!) {\nremoveCartItem (command: $command) {\nid\nitems{\nid\nquantity\nproduct{\nid\n}\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId1}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add Item",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261888 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addItem($command: InputAddItemType!) {\naddItem(command: $command) {\nid\nitems {\nid\nquantity\nlistPrice{\namount\n}\nnote\n}\ntotal{\namount\n}\ndiscountTotal{\namount\n}\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"productId\": \"{{ProductId3}}\",\n    \"quantity\": 5,\n    \"comment\": \"{{comment}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add Item",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C261790 Check additem\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.addItem).to.not.eql(null);     \r",
																	"pm.expect(jsonData.data.addItem.id).to.be.a(\"string\");    \r",
																	"pm.expect(jsonData.data.addItem.items[0,1]).to.be.an(\"object\");\r",
																	"pm.expect(data.errors).to.be.undefined;\r",
																	"\r",
																	"pm.collectionVariables.set(\"lineItemId1\", jsonData.data.addItem.items[0].id);\r",
																	"pm.collectionVariables.set(\"lineItemId2\", jsonData.data.addItem.items[1].id);\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addItem($command: InputAddItemType!) {\naddItem(command: $command) {\nid\nitems {\nid\nquantity\nlistPrice{\namount\n}\nnote\n}\ntotal{\namount\n}\ndiscountTotal{\namount\n}\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"productId\": \"{{ProductId3}}\",\n    \"quantity\": 5,\n    \"comment\": \"{{comment}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: change cart item qty = 0",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261892 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeCartItemQuantity ($command: InputChangeCartItemQuantityType!) {\nchangeCartItemQuantity (command: $command) {\nid\nitems{\nid\nname\nquantity\n}\ntotal{\namount\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId2}}\",\n\"quantity\": 0\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: change cart item qty =0",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261813 Check after change qty\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.changeCartItemQuantity.items).length(1);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeCartItemQuantity ($command: InputChangeCartItemQuantityType!) {\nchangeCartItemQuantity (command: $command) {\nid\nitems{\nid\nname\nquantity\n}\ntotal{\namount\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId2}}\",\n\"quantity\": 0\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: change cart item price",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261896 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeCartItemPrice($command: InputChangeCartItemPriceType!) {\nchangeCartItemPrice(command: $command) {\n    id\nitemsQuantity\ntotal {\namount\n}\nitems {\nid\nlistPrice{\namount\n}\nsalePrice{\namount\n}\nproduct {\nid\nprice {\nactual {\namount\n}\nlist {\namount\n}\nsale {\namount\n}\n}\n}\ndiscountTotal {\namount\n}\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId2}}\",\n\"price\": 2000\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: change cart item price",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261795 Check after change price\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.changeCartItemPrice.items[0].id).equal(pm.collectionVariables.get(\"lineItemId1\"))\r",
																	"    pm.expect(data.data.changeCartItemPrice.items[0].listPrice.amount).to.exist\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeCartItemPrice($command: InputChangeCartItemPriceType!) {\nchangeCartItemPrice(command: $command) {\n    id\nitemsQuantity\ntotal {\namount\n}\nitems {\nid\nlistPrice{\namount\n}\nsalePrice{\namount\n}\nproduct {\nid\nprice {\nactual {\namount\n}\nlist {\namount\n}\nsale {\namount\n}\n}\n}\ndiscountTotal {\namount\n}\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId1}}\",\n\"price\": 17000\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: change comment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261885 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeComment ($command: InputChangeCommentType) {\nchangeComment (command: $command) {\nid\nname\ncomment\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"comment\": \"{{newComment}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: change comment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261797 Add comment\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.changeComment.comment).to.eql(pm.collectionVariables.get(\"newComment\"))\r",
																	";\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeComment ($command: InputChangeCommentType) {\nchangeComment (command: $command) {\nid\nname\ncomment\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"comment\": \"{{newComment}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: changeCartItemComment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C262087 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeCartItemComment($command: InputChangeCartItemCommentType) {\nchangeCartItemComment(command: $command) {\nid\ncomment\nitems {\nid\nlistPrice {\namount\n}\nnote\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId1}}\",\n\"comment\": \"{{lineItemsComment}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: change cart item comment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C262085 Check after change lineitems comment\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"     pm.expect(data.data.changeCartItemComment.items[0].note).equal(pm.collectionVariables.get(\"lineItemsComment\"))\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation changeCartItemComment($command: InputChangeCartItemCommentType) {\nchangeCartItemComment(command: $command) {\nid\ncomment\nitems {\nid\nlistPrice {\namount\n}\nnote\n}\n}\n}",
																"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId1}}\",\n\"comment\": \"{{lineItemsComment}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set cartId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId\", jsonData.data.cart.id);\r",
																	"});\r",
																	"pm.test(\"Check cart by user ID\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart).to.not.eql(null);\r",
																	"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
																	"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"pm.test(\"Check available payment method\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart.availablePaymentMethods).to.not.empty;\r",
																	"     pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"pm.test(\"Check available shipment method\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart.availableShippingMethods).to.not.empty;\r",
																	" pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\n\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: Add dynamic property to cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C328918 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartDynamicProperties($command: InputUpdateCartDynamicPropertiesType!) {\r\nupdateCartDynamicProperties(command: $command) {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n} ",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",  \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}     ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: Add dynamic property to cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C328917 Add dynamicproperty to cart\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.updateCartDynamicProperties).to.not.eql(null);     \r",
																	"pm.expect(jsonData.data.updateCartDynamicProperties.id).to.be.a(\"string\");    \r",
																	"pm.expect(jsonData.data.updateCartDynamicProperties.dynamicProperties[0]).to.be.an(\"object\");\r",
																	"  \r",
																	"pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Check value\", function () {\r",
																	"        pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
																	"    });\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartDynamicProperties($command: InputUpdateCartDynamicPropertiesType!) {\r\nupdateCartDynamicProperties(command: $command) {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n} ",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",  \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}    ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: Add dynamic properties for lineitems in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C328915 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartItemDynamicProperties($command: InputUpdateCartItemDynamicPropertiesType!) {\r\nupdateCartItemDynamicProperties(command: $command) {\r\nid\r\nitems {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"lineItemId\": \"{{lineItemId}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},{\r\n\"name\": \"CartModule_LineItem_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Decimal_0_0_0\",\r\n\"value\":{{decimal1}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_LineItem_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: Add dynamic properties for lineitems in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C327833 Add dynamicproperties for lineitems\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.updateCartDynamicProperties).to.not.eql(null);     \r",
																	"pm.expect(jsonData.data.updateCartItemDynamicProperties.items[0].dynamicProperties[0]).to.be.an(\"object\");\r",
																	"pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Check value\", function () {\r",
																	"        pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
																	"    });\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartItemDynamicProperties($command: InputUpdateCartItemDynamicPropertiesType!) {\r\nupdateCartItemDynamicProperties(command: $command) {\r\nid\r\nitems {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"lineItemId\": \"{{lineItemId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},{\r\n\"name\": \"CartModule_LineItem_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Decimal_0_0_0\",\r\n\"value\":{{decimal1}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_LineItem_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}  ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add cart payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261933 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add cart payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C261792 AddOrUpdatePayment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
																	"    pm.collectionVariables.set(\"paymentId1\",jSonData.data.addOrUpdateCartPayment.payments[0].id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: update cart payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261936 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: update cart payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C261934 UpdatePayment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long_update\"));\r",
																	"\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"{{long_update}}\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2new\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 16\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: Add dynamic properties for payments in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C328911 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartPaymentDynamicProperties($command: InputUpdateCartPaymentDynamicPropertiesType!) {\r\nupdateCartPaymentDynamicProperties(command: $command) {\r\nid\r\npayments {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"paymentId\": \"{{paymentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Payment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Boolean_0_0_0\",\r\n\"value\":{{bool1}}\r\n},{\r\n\"name\": \"CartModule_Payment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_Payment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Html_0_1_0\",\r\n\"value\": \"{{html3}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_Payment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_Payment_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: Add dynamic properties for payments in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C328916 Add dynamicPropertiesPayment\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.updateCartPaymentDynamicProperties).to.not.eql(null);     \r",
																	" \r",
																	"pm.expect(jsonData.data.updateCartPaymentDynamicProperties.payments[0]).to.be.an(\"object\");\r",
																	"pm.expect(jsonData.data.updateCartPaymentDynamicProperties.payments[0].dynamicProperties).to.be.not.empty;\r",
																	"pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Check value\", function () {\r",
																	"        pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
																	"    });\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartPaymentDynamicProperties($command: InputUpdateCartPaymentDynamicPropertiesType!) {\r\nupdateCartPaymentDynamicProperties(command: $command) {\r\nid\r\npayments {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"paymentId\": \"{{paymentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Payment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Boolean_0_0_0\",\r\n\"value\":{{bool1}}\r\n},{\r\n\"name\": \"CartModule_Payment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_Payment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Html_0_1_0\",\r\n\"value\": \"{{html3}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_Payment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_Payment_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add cart shipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261941 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add cart shipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C261793 AddOrUpdateShipment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"    pm.collectionVariables.set(\"shipmentId1\",jSonData.data.addOrUpdateCartShipment.shipments[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: update cart shipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261944 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"    \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 22\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: update cart shipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C261882 AddOrUpdateShipment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long_update\"));\r",
																	"    pm.collectionVariables.set(\"shipmentId1\",jSonData.data.addOrUpdateCartShipment.shipments[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"{{long_update}}\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: Add dynamic properties for shipments in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C328912 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartShipmentDynamicProperties($command: InputUpdateCartShipmentDynamicPropertiesType!) {\r\nupdateCartShipmentDynamicProperties(command: $command) {\r\nid\r\nshipments{\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"shipmentId\":\"{{shipmentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Boolean_0_0_0\",\r\n\"value\": {{bool1}}\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_1\",\r\n\"value\": \"{{short2}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_1_0\",\r\n\"value\": \"{{short4}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: Add dynamic properties for shipments in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C315796 Add CartShipmentDynamicProperties\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.updateCartShipmentDynamicProperties).to.not.eql(null);     \r",
																	"pm.expect(jsonData.data.updateCartShipmentDynamicProperties.id).to.be.a(\"string\");    \r",
																	"pm.expect(jsonData.data.updateCartShipmentDynamicProperties.shipments[0]).to.be.an(\"object\");\r",
																	"pm.expect(jsonData.data.updateCartShipmentDynamicProperties.shipments[0].id).to.be.a(\"string\");\r",
																	"pm.expect(data.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartShipmentDynamicProperties($command: InputUpdateCartShipmentDynamicPropertiesType!) {\r\nupdateCartShipmentDynamicProperties(command: $command) {\r\nid\r\nshipments{\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"shipmentId\":\"{{shipmentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Boolean_0_0_0\",\r\n\"value\": {{bool1}}\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_1\",\r\n\"value\": \"{{short2}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_1_0\",\r\n\"value\": \"{{short4}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n} ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: Update dynamic properties for shipments in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261944 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartShipmentDynamicProperties($command: InputUpdateCartShipmentDynamicPropertiesType!) {\r\nupdateCartShipmentDynamicProperties(command: $command) {\r\nid\r\nshipments{\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"shipmentId\":\"{{shipmentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Boolean_0_0_0\",\r\n\"value\": {{bool1}}\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_1\",\r\n\"value\": \"{{short2}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_1_0\",\r\n\"value\": \"{{short4}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: Update dynamic properties for shipments in cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C327819 Add CartShipmentDynamicProperties\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.updateCartShipmentDynamicProperties).to.not.eql(null);     \r",
																	"pm.expect(jsonData.data.updateCartShipmentDynamicProperties.id).to.be.a(\"string\");    \r",
																	"pm.expect(jsonData.data.updateCartShipmentDynamicProperties.shipments[0]).to.be.an(\"object\");\r",
																	"pm.expect(jsonData.data.updateCartShipmentDynamicProperties.shipments[0].id).to.be.a(\"string\");\r",
																	"pm.expect(data.errors).to.be.undefined;\r",
																	"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long_update\"));\r",
																	"\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation updateCartShipmentDynamicProperties($command: InputUpdateCartShipmentDynamicPropertiesType!) {\r\nupdateCartShipmentDynamicProperties(command: $command) {\r\nid\r\nshipments{\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
																"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"shipmentId\":\"{{shipmentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Boolean_0_0_0\",\r\n\"value\": {{bool1}}\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_0_0\",\r\n\"value\": \"{{long_update}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_1\",\r\n\"value\": \"{{short2}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_1_0\",\r\n\"value\": \"{{short4}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n} ]\r\n}\r\n}  "
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "after [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"\r",
																	"pm.test(\"Set total1\", function(){\r",
																	"    var json = pm.response.json();\r",
																	"pm.collectionVariables.set(\"total1\", json.data.cart.total.amount);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: validate coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261809 Check validateCoupon\", function(){\r",
																	"var jSon = pm.response.json();\r",
																	"pm.expect(jSon.data.validateCoupon).to.be.a(\"boolean\");\r",
																	"pm.expect(data.error).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation validateCoupon ($command: InputValidateCouponType!) {\n    validateCoupon (command: $command)\n    \n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": null,\n    \"coupon\": \"{{xapi_promo_code}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261902 Check AddCoupon\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addCoupon($command: InputAddCouponType!) {\naddCoupon(command: $command) {\nid\nname\ncustomerName\ncoupons {\ncode\nisAppliedSuccessfully\n}\ndiscounts{\ncoupon\n}\ndiscountTotal {\namount\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"couponCode\": \"{{xapi_promo_code}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check AddCoupon\", function(){\r",
																	"var jSon = pm.response.json();\r",
																	"pm.expect(jSon.data.addCoupon).to.not.empty;\r",
																	"pm.expect(jSon.data.addCoupon.coupons[0]).to.be.an(\"object\");\r",
																	"pm.expect(jSon.data.addCoupon.coupons[0].code).to.be.a(\"string\");\r",
																	"pm.expect(jSon.data.addCoupon.coupons[0].isAppliedSuccessfully).to.be.equal(true);\r",
																	"pm.expect(data.error).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addCoupon($command: InputAddCouponType!) {\naddCoupon(command: $command) {\nid\nname\ncustomerName\ncoupons {\ncode\nisAppliedSuccessfully\n}\ndiscounts{\ncoupon\n}\ndiscountTotal {\namount\n}\ntotal{amount}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"couponCode\": \"{{xapi_promo_code}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: get cart after add coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\ndiscounts{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: get cart after add coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"\r",
																	"pm.test(\"C261789 Check totals\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"total2\", jsonData.data.cart.total.amount);\r",
																	"pm.expect(jsonData.data.cart.total.amount).to.be.not.equal(\"total1\")\r",
																	"\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\ncoupons{\n    code\n}\n\ntotal{\n    amount\n}\ndiscounts{\n    amount\n    \n}\n\n\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: remove coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"coupons = 0\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.removeCoupon.coupons).to.be.empty;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCoupon($command: InputRemoveCouponType!) {\nremoveCoupon(command: $command) {\nid\nname\ncustomerName\ncoupons {\ncode\nisAppliedSuccessfully\n}\ndiscounts{\ncoupon\n}\ntotal{amount}\ndiscountTotal {\namount\n}\nitems{name}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"couponCode\": \"{{xapi_promo_code}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: remove coupon",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261904 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCoupon($command: InputRemoveCouponType!) {\nremoveCoupon(command: $command) {\nid\nname\ncustomerName\ncoupons {\ncode\nisAppliedSuccessfully\n}\ndiscounts{\ncoupon\n}\ndiscountTotal {\namount\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"couponCode\": \"{{xapi_promo_code}}\"\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get cart after remove coupon [admin]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"C261903 Check totals\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"var total1 = pm.collectionVariables.get(\"total1\");\r",
																	"pm.expect(jsonData.data.cart.total.amount).to.be.equal(total1);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId1}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\ncoupons{\n    code\n}\n\ntotal{\n    amount\n}\ndiscounts{\n    amount\n    \n}\n\n\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: add cart address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261921 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"City 18\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: add cart address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261791 Check addOrUpdateCartAddress \", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress.id).to.be.not.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"    pm.collectionVariables.set(\"cartAddress\",json.data.addOrUpdateCartAddress.addresses[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"City 18\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: update cart address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261923 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"City 18\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: update cart address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261922 Check UpdateCartAddress \", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress.id).to.be.not.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long_update\"));\r",
																	";\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"{{long_update}}\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: remove cart address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261930 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCartAddress ($command: InputRemoveCartAddressType!) {\nremoveCartAddress (command: $command) {\nid\naddresses{\nid\ncity\n\n}\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"addressId\": \"KeyTest\"\n      }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: remove cart address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261928 removeCartAddress\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.removeCartAddress).to.be.not.empty;\r",
																	"    pm.expect(json.data.removeCartAddress.id).to.be.not.empty;\r",
																	"    pm.expect(json.data.removeCartAddress.addresses[0].id).to.be.a(\"string\");\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCartAddress ($command: InputRemoveCartAddressType!) {\nremoveCartAddress (command: $command) {\nid\naddresses{\nid\ncity\n\n}\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"addressId\": \"KeyTest\"\n      }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: clear shipments",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261952 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearShipments ($command: InputClearShipmentsType!) {\nclearShipments (command: $command) {\nid\nshipments{\nid\nshipmentMethodCode\nshipmentMethodOption\ndeliveryAddress{\nid\nline1\nline2\n}\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: clear shipments",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261950 clearShipments\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.clearShipments).to.be.not.empty;\r",
																	"    pm.expect(json.data.clearShipments.shipments).to.be.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearShipments ($command: InputClearShipmentsType!) {\nclearShipments (command: $command) {\nid\nshipments{\nid\nshipmentMethodCode\nshipmentMethodOption\ndeliveryAddress{\nid\nline1\nline2\n}\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: remove shipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261949 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeShipment ($command: InputRemoveShipmentType!) {\nremoveShipment (command: $command) {\nid\nshipments{\nid\nshipmentMethodCode\nshipmentMethodOption\ndeliveryAddress{\nid\nline1\nline2\n}\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"shipmentId\": \"shipmentID_1\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: remove shipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261946 removeShipment\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.removeShipment).to.be.not.empty;\r",
																	"    pm.expect(json.data.removeShipment.shipments).to.be.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeShipment ($command: InputRemoveShipmentType!) {\nremoveShipment (command: $command) {\nid\nshipments{\nid\nshipmentMethodCode\nshipmentMethodOption\ndeliveryAddress{\nid\nline1\nline2\n}\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"shipmentId\": \"shipmentID_1\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: clear payments",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261938 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearPayments ($command: InputClearPaymentsType!) {\nclearPayments (command: $command) {\nid\npayments{\nid\nouterId\namount{\namount\n}\nbillingAddress{\nline1\n}\n}\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: clear payments",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261799 clearPayments\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.clearPayments).to.be.not.empty;\r",
																	"    pm.expect(json.data.clearPayments.payments).to.be.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearPayments ($command: InputClearPaymentsType!) {\nclearPayments (command: $command) {\nid\npayments{\nid\nouterId\namount{\namount\n}\nbillingAddress{\nline1\n}\n}\n}\n}",
																"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: clear cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261908 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: clear cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261811 clearCart\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_2: remove cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C261914 Access denied\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
																	"    console.log(jsonData.errors[0].message);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCart ($command: InputRemoveCartType!) {\n    removeCart (command: $command)\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token_1: remove cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C261802 RemoveCart\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.removeCart).to.be.equal(true);\r",
																	"    pm.expect(data.error).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCart ($command: InputRemoveCartType!) {\n    removeCart (command: $command)\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{Token2}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "Delete contact, promo, users",
											"item": [
												{
													"name": "Delete contact_1",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete contact_2",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete users",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\",\"{{userName2}}\"\r\n    ]\r\n  }\r\n}\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete promo",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/marketing/promotions?ids={{promotionId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"marketing",
																"promotions"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{promotionId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Cart Admin [ID]",
									"item": [
										{
											"name": "Taxes on/off[ID]",
											"item": [
												{
													"name": "Get cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set cartId1, userId1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
																	"    pm.collectionVariables.set(\"userId1\", jsonData.data.cart.customerId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Switch off \"TaxCalculationEnabled\"",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"{{storeId}}\",\r\n   \"description\":null,\r\n   \"storeState\":\"Open\",\r\n   \"timeZone\":null,\r\n   \"country\":\"USA\",\r\n   \"region\":null,\r\n   \"defaultLanguage\":\"en-US\",\r\n   \"defaultCurrency\":\"USD\",\r\n   \"catalog\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"creditCardSavePolicy\":false,\r\n   \"url\":\"https://vcplatform-storefront.qa.govirto.com\",\r\n   \"secureUrl\":\"\",\r\n   \"email\":\"noreply@mail.com\",\r\n   \"adminEmail\":null,\r\n   \"emailName\":null,\r\n   \"adminEmailName\":null,\r\n   \"displayOutOfStock\":false,\r\n   \"outerId\":null,\r\n   \"mainFulfillmentCenterId\":\"vendor-fulfillment\",\r\n   \"additionalFulfillmentCenterIds\":[\r\n      \"142ba5568ae4454aad553ece41b9c3b5\"\r\n   ],\r\n   \"mainReturnsFulfillmentCenterId\":\"vendor-fulfillment\",\r\n   \"returnsFulfillmentCenterIds\":[\r\n      \"142ba5568ae4454aad553ece41b9c3b5\"\r\n   ],\r\n   \"languages\":[\r\n      \"en-US\",\r\n      \"fr-FR\",\r\n      \"de-DE\"\r\n   ],\r\n   \"currencies\":[\r\n      \"USD\",\r\n      \"XPT\",\r\n      \"EUR\"\r\n   ],\r\n   \"trustedGroups\":[\r\n      \"Clothing\"\r\n   ],\r\n   \"seoObjectType\":\"Store\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"name\":null,\r\n         \"semanticUrl\":\"Electronique\",\r\n         \"pageTitle\":\"Electronique\",\r\n         \"metaDescription\":null,\r\n         \"imageAltDescription\":null,\r\n         \"metaKeywords\":null,\r\n         \"storeId\":\"{{storeId}}\",\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"fr-FR\",\r\n         \"id\":\"15b0752d92cb47b69001f31b10127514\"\r\n      },\r\n      {\r\n         \"name\":null,\r\n         \"semanticUrl\":\"{{storeId}}\",\r\n         \"pageTitle\":\"{{storeId}}\",\r\n         \"metaDescription\":null,\r\n         \"imageAltDescription\":null,\r\n         \"metaKeywords\":null,\r\n         \"storeId\":\"{{storeId}}\",\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\",\r\n         \"id\":\"27546a48097b4e59900da9a4f5a17ac8\"\r\n      },\r\n      {\r\n         \"name\":null,\r\n         \"semanticUrl\":\"{{storeId}}\",\r\n         \"pageTitle\":\"{{storeId}}\",\r\n         \"metaDescription\":null,\r\n         \"imageAltDescription\":null,\r\n         \"metaKeywords\":null,\r\n         \"storeId\":\"{{storeId}}\",\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"de-DE\",\r\n         \"id\":\"cfecfc3f5ce5486eaaf52886da7c957c\"\r\n      }\r\n   ],\r\n   \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n   \"dynamicProperties\":[\r\n      {\r\n         \"objectId\":null,\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"{{storeId}}\",\r\n               \"locale\":null,\r\n               \"value\":\"22\",\r\n               \"valueId\":null,\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"6bd7d811-cf42-4934-b3aa-13e8615e2ebc\",\r\n               \"propertyName\":\"a2\"\r\n            }\r\n         ],\r\n         \"name\":\"a2\",\r\n         \"description\":null,\r\n         \"objectType\":null,\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"displayOrder\":null,\r\n         \"valueType\":\"Undefined\",\r\n         \"displayNames\":null,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"modifiedDate\":null,\r\n         \"createdBy\":null,\r\n         \"modifiedBy\":null,\r\n         \"id\":\"6bd7d811-cf42-4934-b3aa-13e8615e2ebc\"\r\n      },\r\n      {\r\n         \"objectId\":null,\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"{{storeId}}\",\r\n               \"locale\":null,\r\n               \"value\":\"22\",\r\n               \"valueId\":null,\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"3b45fa7a-da75-4249-aa19-47411d228a2e\",\r\n               \"propertyName\":\"a13\"\r\n            }\r\n         ],\r\n         \"name\":\"a13\",\r\n         \"description\":null,\r\n         \"objectType\":null,\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"displayOrder\":null,\r\n         \"valueType\":\"Undefined\",\r\n         \"displayNames\":null,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"modifiedDate\":null,\r\n         \"createdBy\":null,\r\n         \"modifiedBy\":null,\r\n         \"id\":\"3b45fa7a-da75-4249-aa19-47411d228a2e\"\r\n      },\r\n      {\r\n         \"objectId\":null,\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"{{storeId}}\",\r\n               \"locale\":null,\r\n               \"value\":\"\",\r\n               \"valueId\":null,\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"Default_Theme_Name_Property\",\r\n               \"propertyName\":\"DefaultThemeName\"\r\n            }\r\n         ],\r\n         \"name\":\"DefaultThemeName\",\r\n         \"description\":null,\r\n         \"objectType\":null,\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"displayOrder\":null,\r\n         \"valueType\":\"Undefined\",\r\n         \"displayNames\":null,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"modifiedDate\":null,\r\n         \"createdBy\":null,\r\n         \"modifiedBy\":null,\r\n         \"id\":\"Default_Theme_Name_Property\"\r\n      }\r\n   ],\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":false,\r\n         \"id\":\"b30ecd04-89a4-4284-ab8a-0dada0bcb019\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.TaxCalculationEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":false\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"dbeeebd3-c9e5-45b6-9ea8-fc59461e336f\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.AllowAnonymousUsers\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.IsSpa\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"e8629d31-9dcc-495b-a313-2c069552fd96\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.EmailVerificationEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"2435f940-03f0-44fc-9d65-6095b77ca5b0\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.EnablePriceRoundingForTotalsCalculation\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"Average\",\r\n         \"id\":\"82767a2f-7d41-450e-976f-e3deecac1bcb\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"CustomerReviews.Calculation.Method\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"Average\"\r\n            },\r\n            {\r\n               \"value\":\"Wilson\"\r\n            }\r\n         ],\r\n         \"defaultValue\":\"Average\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"Average\",\r\n               \"value\":\"Average\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"Collapsed\",\r\n         \"id\":\"36a8aba8-f5a9-44f5-90f7-5f2c392c009c\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"SEO\",\r\n         \"name\":\"Stores.SeoLinksType\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"None\"\r\n            },\r\n            {\r\n               \"value\":\"Short\"\r\n            },\r\n            {\r\n               \"value\":\"Collapsed\"\r\n            },\r\n            {\r\n               \"value\":\"Long\"\r\n            }\r\n         ],\r\n         \"defaultValue\":\"Collapsed\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"Collapsed\",\r\n               \"value\":\"Collapsed\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Statuses\",\r\n         \"name\":\"Customer.OrganizationDefaultStatus\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Statuses\",\r\n         \"name\":\"Customer.ContactDefaultStatus\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"5957c0a3-c85f-486b-850d-1c2545808fcb\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders\",\r\n         \"name\":\"Order.CustomerOrderNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"CO{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"CO{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"PI{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"815089b1-4680-414a-8342-c9db7741af9a\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders\",\r\n         \"name\":\"Order.PaymentInNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"PI{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"PI{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"PI{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"SH{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"c0e0d94f-3b7f-43d8-aa69-a7db9d35e01d\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders\",\r\n         \"name\":\"Order.ShipmentNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"SH{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"SH{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"SH{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"93bd782d-dd42-40ae-a851-7be3706b2b17\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes\",\r\n         \"name\":\"Quotes.QuoteRequestNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"RFQ{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes\",\r\n         \"name\":\"Quotes.EnableQuotes\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":\"ae801337-2ebc-4841-8131-a412fae472df\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.CategoryPageUpdateFrequency\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"always\"\r\n            },\r\n            {\r\n               \"value\":\"hourly\"\r\n            },\r\n            {\r\n               \"value\":\"daily\"\r\n            },\r\n            {\r\n               \"value\":\"weekly\"\r\n            },\r\n            {\r\n               \"value\":\"monthly\"\r\n            },\r\n            {\r\n               \"value\":\"yearly\"\r\n            },\r\n            {\r\n               \"value\":\"never\"\r\n            }\r\n         ],\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.CategoryPagePriority\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":\"658d4ae8-db6a-4e18-ae15-67ac0ec58d0b\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.ProductPageUpdateFrequency\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"always\"\r\n            },\r\n            {\r\n               \"value\":\"hourly\"\r\n            },\r\n            {\r\n               \"value\":\"daily\"\r\n            },\r\n            {\r\n               \"value\":\"weekly\"\r\n            },\r\n            {\r\n               \"value\":\"monthly\"\r\n            },\r\n            {\r\n               \"value\":\"yearly\"\r\n            },\r\n            {\r\n               \"value\":\"never\"\r\n            }\r\n         ],\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.ProductPagePriority\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":\"62e80748-bfbb-4073-a6a7-fbeaf9b91186\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.BlogPageUpdateFrequency\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"always\"\r\n            },\r\n            {\r\n               \"value\":\"hourly\"\r\n            },\r\n            {\r\n               \"value\":\"daily\"\r\n            },\r\n            {\r\n               \"value\":\"weekly\"\r\n            },\r\n            {\r\n               \"value\":\"monthly\"\r\n            },\r\n            {\r\n               \"value\":\"yearly\"\r\n            },\r\n            {\r\n               \"value\":\"never\"\r\n            }\r\n         ],\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.BlogPagePriority\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.EnableTracking\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleTagManagerId\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleAnalyticsTrackingId\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.CreateECommerceTransaction\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.ReverseECommerceTransaction\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"b2211248-ac53-481a-843e-d3577a1d0379\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Return\",\r\n         \"groupName\":\"Return\",\r\n         \"name\":\"Return.ReturnNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"RET{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"RET{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"16e8e1f9-c3ba-4a28-af9f-7ba7fdae4bd0\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions\",\r\n         \"name\":\"Subscription.EnableSubscriptions\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"0d411da2-d07e-42fb-a47f-4556faecbcee\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions\",\r\n         \"name\":\"Subscription.SubscriptionNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"SU{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"SU{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabledForAnonymous\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"bdbb5d75-c78c-4116-b5f9-d415e4ab0385\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews\",\r\n         \"name\":\"CustomerReviews.CanSubmitReviewWhenHasOrder\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"typeName\":\"Store\",\r\n   \"scopes\":null,\r\n   \"createdDate\":\"2015-10-06T22:39:51.553Z\",\r\n   \"modifiedDate\":\"2022-08-17T08:05:53.4670416Z\",\r\n   \"createdBy\":\"unknown\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{storeId}}\",\r\n   \"additionalLanguages\":[\r\n      \"fr-FR\",\r\n      \"de-DE\"\r\n   ],\r\n   \"additionalCurrencies\":[\r\n      \"XPT\",\r\n      \"EUR\"\r\n   ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/stores",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"stores"
															]
														}
													},
													"response": []
												},
												{
													"name": "Deactivate avatax tax",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"storeId\":\"{{storeId}}\",\r\n   \"code\":\"AvaTaxRateProvider\",\r\n   \"logoUrl\":null,\r\n   \"isActive\":false,\r\n   \"priority\":0,\r\n   \"typeName\":\"AvaTaxRateProvider\",\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\",\r\n         \"objectType\":\"AvaTaxRateProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"DEFAULT\",\r\n         \"id\":\"e67c0956-28b0-49be-9a72-19cd4cc2c683\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.AvalaraTax\",\r\n         \"groupName\":\"Tax|Avalara\",\r\n         \"name\":\"Avalara.Credentials.CompanyCode\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\",\r\n         \"objectType\":\"AvaTaxRateProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"https://rest.avatax.com/\",\r\n         \"id\":\"2ce6c28a-504c-4026-88c8-aa4bdeb67297\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.AvalaraTax\",\r\n         \"groupName\":\"Tax|Avalara\",\r\n         \"name\":\"Avalara.Credentials.ServiceUrl\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\",\r\n         \"objectType\":\"AvaTaxRateProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"https://admin-avatax.avalara.net/\",\r\n         \"id\":\"79bf15af-e4c8-475c-a009-6c994c966a8a\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.AvalaraTax\",\r\n         \"groupName\":\"Tax|Avalara\",\r\n         \"name\":\"Avalara.Credentials.AdminAreaUrl\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\",\r\n         \"objectType\":\"AvaTaxRateProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.AvalaraTax\",\r\n         \"groupName\":\"Tax|Avalara\",\r\n         \"name\":\"Avalara.ScheduledOrdersSynchronization.IsEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\",\r\n         \"objectType\":\"AvaTaxRateProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"0 0 * * *\",\r\n         \"id\":\"ea1f5639-81de-42d3-a322-b88862f1a17c\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.AvalaraTax\",\r\n         \"groupName\":\"Tax|Avalara\",\r\n         \"name\":\"Avalara.ScheduledOrdersSynchronization.CronExpression\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"0 0 * * *\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\",\r\n         \"objectType\":\"AvaTaxRateProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.AvalaraTax\",\r\n         \"groupName\":\"Tax|Avalara\",\r\n         \"name\":\"Avalara.ScheduledOrdersSynchronization.LastExecutionDate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"DateTime\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false\r\n      }\r\n   ],\r\n   \"id\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/taxes",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"taxes"
															]
														}
													},
													"response": []
												},
												{
													"name": "Activate fixed tax",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"storeId\":\"{{storeId}}\",\r\n   \"code\":\"FixedRate\",\r\n   \"logoUrl\":\"http://virtocommerce.com/Content/images/logo.jpg\",\r\n   \"isActive\":true,\r\n   \"priority\":0,\r\n   \"typeName\":\"FixedRateTaxProvider\",\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"f4cdda81d9c84a8ba5306b3da0fea979\",\r\n         \"objectType\":\"FixedRateTaxProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":10,\r\n         \"id\":\"784bdacd-fd82-4afb-96c6-1b2c8975b5c4\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Tax\",\r\n         \"groupName\":\"FixedTaxProvider\",\r\n         \"name\":\"VirtoCommerce.Core.FixedTaxRateProvider.Rate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":0,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":1,\r\n               \"value\":10\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"id\":\"f4cdda81d9c84a8ba5306b3da0fea979\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/taxes",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"taxes"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add item",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check items\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.addItemsCart.items).to.be.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        total{amount}\r\n        taxTotal{amount}\r\n        items {\r\n            productId,\r\n            name,\r\n            quantity\r\n        \r\n        }\r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 1\r\n    }\r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get cart taxTotal",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C346135 Check taxTotal == 0\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.cart.taxTotal.amount).to.be.eql(0);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId1}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\n   \r\nid\r\ncustomerId\r\ntaxTotal{amount}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\n}\r\n\r\n\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Switch on \"TaxCalculationEnabled\"",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"{{storeId}}\",\r\n   \"description\":null,\r\n   \"storeState\":\"Open\",\r\n   \"timeZone\":null,\r\n   \"country\":\"USA\",\r\n   \"region\":null,\r\n   \"defaultLanguage\":\"en-US\",\r\n   \"defaultCurrency\":\"USD\",\r\n   \"catalog\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"creditCardSavePolicy\":false,\r\n   \"url\":\"https://vcplatform-storefront.qa.govirto.com\",\r\n   \"secureUrl\":\"\",\r\n   \"email\":\"noreply@mail.com\",\r\n   \"adminEmail\":null,\r\n   \"emailName\":null,\r\n   \"adminEmailName\":null,\r\n   \"displayOutOfStock\":false,\r\n   \"outerId\":null,\r\n   \"mainFulfillmentCenterId\":\"vendor-fulfillment\",\r\n   \"additionalFulfillmentCenterIds\":[\r\n      \"142ba5568ae4454aad553ece41b9c3b5\"\r\n   ],\r\n   \"mainReturnsFulfillmentCenterId\":\"vendor-fulfillment\",\r\n   \"returnsFulfillmentCenterIds\":[\r\n      \"142ba5568ae4454aad553ece41b9c3b5\"\r\n   ],\r\n   \"languages\":[\r\n      \"en-US\",\r\n      \"fr-FR\",\r\n      \"de-DE\"\r\n   ],\r\n   \"currencies\":[\r\n      \"USD\",\r\n      \"XPT\",\r\n      \"EUR\"\r\n   ],\r\n   \"trustedGroups\":[\r\n      \"Clothing\"\r\n   ],\r\n   \"seoObjectType\":\"Store\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"name\":null,\r\n         \"semanticUrl\":\"Electronique\",\r\n         \"pageTitle\":\"Electronique\",\r\n         \"metaDescription\":null,\r\n         \"imageAltDescription\":null,\r\n         \"metaKeywords\":null,\r\n         \"storeId\":\"{{storeId}}\",\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"fr-FR\",\r\n         \"id\":\"15b0752d92cb47b69001f31b10127514\"\r\n      },\r\n      {\r\n         \"name\":null,\r\n         \"semanticUrl\":\"{{storeId}}\",\r\n         \"pageTitle\":\"{{storeId}}\",\r\n         \"metaDescription\":null,\r\n         \"imageAltDescription\":null,\r\n         \"metaKeywords\":null,\r\n         \"storeId\":\"{{storeId}}\",\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\",\r\n         \"id\":\"27546a48097b4e59900da9a4f5a17ac8\"\r\n      },\r\n      {\r\n         \"name\":null,\r\n         \"semanticUrl\":\"{{storeId}}\",\r\n         \"pageTitle\":\"{{storeId}}\",\r\n         \"metaDescription\":null,\r\n         \"imageAltDescription\":null,\r\n         \"metaKeywords\":null,\r\n         \"storeId\":\"{{storeId}}\",\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"de-DE\",\r\n         \"id\":\"cfecfc3f5ce5486eaaf52886da7c957c\"\r\n      }\r\n   ],\r\n   \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n   \"dynamicProperties\":[\r\n      {\r\n         \"objectId\":null,\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"{{storeId}}\",\r\n               \"locale\":null,\r\n               \"value\":\"22\",\r\n               \"valueId\":null,\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"6bd7d811-cf42-4934-b3aa-13e8615e2ebc\",\r\n               \"propertyName\":\"a2\"\r\n            }\r\n         ],\r\n         \"name\":\"a2\",\r\n         \"description\":null,\r\n         \"objectType\":null,\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"displayOrder\":null,\r\n         \"valueType\":\"Undefined\",\r\n         \"displayNames\":null,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"modifiedDate\":null,\r\n         \"createdBy\":null,\r\n         \"modifiedBy\":null,\r\n         \"id\":\"6bd7d811-cf42-4934-b3aa-13e8615e2ebc\"\r\n      },\r\n      {\r\n         \"objectId\":null,\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"{{storeId}}\",\r\n               \"locale\":null,\r\n               \"value\":\"22\",\r\n               \"valueId\":null,\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"3b45fa7a-da75-4249-aa19-47411d228a2e\",\r\n               \"propertyName\":\"a13\"\r\n            }\r\n         ],\r\n         \"name\":\"a13\",\r\n         \"description\":null,\r\n         \"objectType\":null,\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"displayOrder\":null,\r\n         \"valueType\":\"Undefined\",\r\n         \"displayNames\":null,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"modifiedDate\":null,\r\n         \"createdBy\":null,\r\n         \"modifiedBy\":null,\r\n         \"id\":\"3b45fa7a-da75-4249-aa19-47411d228a2e\"\r\n      },\r\n      {\r\n         \"objectId\":null,\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"{{storeId}}\",\r\n               \"locale\":null,\r\n               \"value\":\"\",\r\n               \"valueId\":null,\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"Default_Theme_Name_Property\",\r\n               \"propertyName\":\"DefaultThemeName\"\r\n            }\r\n         ],\r\n         \"name\":\"DefaultThemeName\",\r\n         \"description\":null,\r\n         \"objectType\":null,\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"displayOrder\":null,\r\n         \"valueType\":\"Undefined\",\r\n         \"displayNames\":null,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"modifiedDate\":null,\r\n         \"createdBy\":null,\r\n         \"modifiedBy\":null,\r\n         \"id\":\"Default_Theme_Name_Property\"\r\n      }\r\n   ],\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"b30ecd04-89a4-4284-ab8a-0dada0bcb019\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.TaxCalculationEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":false\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"dbeeebd3-c9e5-45b6-9ea8-fc59461e336f\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.AllowAnonymousUsers\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.IsSpa\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"e8629d31-9dcc-495b-a313-2c069552fd96\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.EmailVerificationEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"2435f940-03f0-44fc-9d65-6095b77ca5b0\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.EnablePriceRoundingForTotalsCalculation\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"Average\",\r\n         \"id\":\"82767a2f-7d41-450e-976f-e3deecac1bcb\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"CustomerReviews.Calculation.Method\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"Average\"\r\n            },\r\n            {\r\n               \"value\":\"Wilson\"\r\n            }\r\n         ],\r\n         \"defaultValue\":\"Average\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"Average\",\r\n               \"value\":\"Average\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"Collapsed\",\r\n         \"id\":\"36a8aba8-f5a9-44f5-90f7-5f2c392c009c\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"SEO\",\r\n         \"name\":\"Stores.SeoLinksType\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"None\"\r\n            },\r\n            {\r\n               \"value\":\"Short\"\r\n            },\r\n            {\r\n               \"value\":\"Collapsed\"\r\n            },\r\n            {\r\n               \"value\":\"Long\"\r\n            }\r\n         ],\r\n         \"defaultValue\":\"Collapsed\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"Collapsed\",\r\n               \"value\":\"Collapsed\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Statuses\",\r\n         \"name\":\"Customer.OrganizationDefaultStatus\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Statuses\",\r\n         \"name\":\"Customer.ContactDefaultStatus\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"5957c0a3-c85f-486b-850d-1c2545808fcb\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders\",\r\n         \"name\":\"Order.CustomerOrderNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"CO{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"CO{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"PI{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"815089b1-4680-414a-8342-c9db7741af9a\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders\",\r\n         \"name\":\"Order.PaymentInNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"PI{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"PI{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"PI{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"SH{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"c0e0d94f-3b7f-43d8-aa69-a7db9d35e01d\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders\",\r\n         \"name\":\"Order.ShipmentNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"SH{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"SH{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"SH{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"93bd782d-dd42-40ae-a851-7be3706b2b17\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes\",\r\n         \"name\":\"Quotes.QuoteRequestNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"RFQ{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes\",\r\n         \"name\":\"Quotes.EnableQuotes\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":\"ae801337-2ebc-4841-8131-a412fae472df\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.CategoryPageUpdateFrequency\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"always\"\r\n            },\r\n            {\r\n               \"value\":\"hourly\"\r\n            },\r\n            {\r\n               \"value\":\"daily\"\r\n            },\r\n            {\r\n               \"value\":\"weekly\"\r\n            },\r\n            {\r\n               \"value\":\"monthly\"\r\n            },\r\n            {\r\n               \"value\":\"yearly\"\r\n            },\r\n            {\r\n               \"value\":\"never\"\r\n            }\r\n         ],\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.CategoryPagePriority\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":\"658d4ae8-db6a-4e18-ae15-67ac0ec58d0b\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.ProductPageUpdateFrequency\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"always\"\r\n            },\r\n            {\r\n               \"value\":\"hourly\"\r\n            },\r\n            {\r\n               \"value\":\"daily\"\r\n            },\r\n            {\r\n               \"value\":\"weekly\"\r\n            },\r\n            {\r\n               \"value\":\"monthly\"\r\n            },\r\n            {\r\n               \"value\":\"yearly\"\r\n            },\r\n            {\r\n               \"value\":\"never\"\r\n            }\r\n         ],\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.ProductPagePriority\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":\"62e80748-bfbb-4073-a6a7-fbeaf9b91186\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.BlogPageUpdateFrequency\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"always\"\r\n            },\r\n            {\r\n               \"value\":\"hourly\"\r\n            },\r\n            {\r\n               \"value\":\"daily\"\r\n            },\r\n            {\r\n               \"value\":\"weekly\"\r\n            },\r\n            {\r\n               \"value\":\"monthly\"\r\n            },\r\n            {\r\n               \"value\":\"yearly\"\r\n            },\r\n            {\r\n               \"value\":\"never\"\r\n            }\r\n         ],\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.BlogPagePriority\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.EnableTracking\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleTagManagerId\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleAnalyticsTrackingId\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.CreateECommerceTransaction\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.ReverseECommerceTransaction\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"b2211248-ac53-481a-843e-d3577a1d0379\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Return\",\r\n         \"groupName\":\"Return\",\r\n         \"name\":\"Return.ReturnNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"RET{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"RET{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"16e8e1f9-c3ba-4a28-af9f-7ba7fdae4bd0\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions\",\r\n         \"name\":\"Subscription.EnableSubscriptions\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"0d411da2-d07e-42fb-a47f-4556faecbcee\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions\",\r\n         \"name\":\"Subscription.SubscriptionNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"SU{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"SU{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabledForAnonymous\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"bdbb5d75-c78c-4116-b5f9-d415e4ab0385\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews\",\r\n         \"name\":\"CustomerReviews.CanSubmitReviewWhenHasOrder\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"typeName\":\"Store\",\r\n   \"scopes\":null,\r\n   \"createdDate\":\"2015-10-06T22:39:51.553Z\",\r\n   \"modifiedDate\":\"2022-08-17T08:05:53.4670416Z\",\r\n   \"createdBy\":\"unknown\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{storeId}}\",\r\n   \"additionalLanguages\":[\r\n      \"fr-FR\",\r\n      \"de-DE\"\r\n   ],\r\n   \"additionalCurrencies\":[\r\n      \"XPT\",\r\n      \"EUR\"\r\n   ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/stores",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"stores"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get cart taxTotal",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C346136 Check taxTotal > 0\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.cart.taxTotal.amount).greaterThan(0)\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId1}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\n   \r\nid\r\ncustomerId\r\ntaxTotal{amount}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\n}\r\n\r\n\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Clear cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"clearCart\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "Delete promo",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/marketing/promotions?ids={{promotionId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"marketing",
														"promotions"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{promotionId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get all carts",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C261110 Items not empty\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"     pm.expect(jsonData.data.carts.items).to.be.not.empty;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query carts {\n  carts(storeId: \"{{storeId}}\") {\n    items {\n      id\n      name\n      customerName\n    }\n  }\n}\n\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C251512 Set cartId, userId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"cartId\", jsonData.data.cart.id);\r",
															"    pm.collectionVariables.set(\"userId\", jsonData.data.cart.customerId);\r",
															"});\r",
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"Check available payment method\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.availablePaymentMethods).to.not.empty;\r",
															"     pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"Check available shipment method\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.availableShippingMethods).to.not.empty;\r",
															" pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\ncustomerName\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
														"variables": "{}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check items\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.addItemsCart.items[0,1]).to.be.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n      items {\r\nid\r\nname\r\nquantity\r\nlistPrice{\r\namount\r\n}\r\nnote\r\n}\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId2}}\",\r\n        \"quantity\": 5\r\n    }\r\n    ]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cart after add items",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"C279150 Check items in cart\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.items[0,1]).to.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															"pm.test(\"Set lineitemId\", function(){\r",
															" var jasonData =pm.response.json();  \r",
															"pm.collectionVariables.set(\"lineItemId1\", jasonData.data.cart.items[0].id);\r",
															"pm.collectionVariables.set(\"lineItemId2\", jasonData.data.cart.items[1].id);\r",
															"pm.collectionVariables.set(\"cartId\", jasonData.data.cart.id);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove cart item",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C261899 Check after remove lineitem\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(pm.response.text()).to.not.include(pm.collectionVariables.get(\"lineItemId1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"lineItemId2\"));\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeCartItem ($command: InputRemoveItemType!) {\nremoveCartItem (command: $command) {\nid\nitems{\nid\nquantity\nproduct{\nid\n}\n}\n}\n}",
														"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId1}}\"\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add item",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C261890 Check additem\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.addItem).to.not.eql(null);     \r",
															"pm.expect(jsonData.data.addItem.id).to.be.a(\"string\");    \r",
															"pm.expect(jsonData.data.addItem.items[0,1]).to.be.an(\"object\");\r",
															"pm.expect(data.errors).to.be.undefined;\r",
															"\r",
															"pm.collectionVariables.set(\"lineItemId1\", jsonData.data.addItem.items[0].id);\r",
															"pm.collectionVariables.set(\"lineItemId2\", jsonData.data.addItem.items[1].id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addItem($command: InputAddItemType!) {\naddItem(command: $command) {\nid\nitems {\nid\nname\nquantity\nlistPrice{\namount\n}\nnote\n}\ntotal{\namount\n}\ndiscountTotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"\",\n    \"cartId\": \"{{cartId}}\",\n    \"productId\": \"8b7b07c165924a879392f4f51a6f7ce0\",\n    \"quantity\": 1,\n    \"comment\": \"{{comment}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change cart item qty",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261893 Check after change qty\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(pm.response.text()).to.include(\"33\");\r",
															"    pm.expect(pm.response.text()).to.include(\"6\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation changeCartItemQuantity ($command: InputChangeCartItemQuantityType!) {\nchangeCartItemQuantity (command: $command) {\nid\nitems{\nid\nname\nquantity\n}\ntotal{\namount\n}\n}\n}",
														"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId2}}\",\n\"quantity\": 33\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "changeCartItemQuantity=0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C328548 Check after change qty\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.changeCartItemQuantity.items).length(1);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation changeCartItemQuantity ($command: InputChangeCartItemQuantityType!) {\nchangeCartItemQuantity (command: $command) {\nid\nitems{\nid\nname\nquantity\n}\ntotal{\namount\n}\n}\n}",
														"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId2}}\",\n\"quantity\": 0\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change cart item price",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261895 Check after change price\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.changeCartItemPrice.items[0].id).equal(pm.collectionVariables.get(\"lineItemId1\"))\r",
															"    pm.expect(data.data.changeCartItemPrice.items[0].listPrice.amount).to.exist\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation changeCartItemPrice($command: InputChangeCartItemPriceType!) {\nchangeCartItemPrice(command: $command) {\n    id\nitemsQuantity\ntotal {\namount\n}\nitems {\nid\nlistPrice{\namount\n}\nsalePrice{\namount\n}\nproduct {\nid\nprice {\nactual {\namount\n}\nlist {\namount\n}\nsale {\namount\n}\n}\n}\ndiscountTotal {\namount\n}\n}\n}\n}",
														"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId1}}\",\n\"price\": 10000\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change comment",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261887 Add comment\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.changeComment.comment).to.eql(pm.collectionVariables.get(\"newComment\"))\r",
															";\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation changeComment ($command: InputChangeCommentType) {\nchangeComment (command: $command) {\nid\nname\ncomment\n}\n}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"comment\": \"{{newComment}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change cart item comment",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C262086 Check after change lineitems comment\", function () {\r",
															"    var data = pm.response.json();\r",
															"     pm.expect(data.data.changeCartItemComment.items[0].note).equal(pm.collectionVariables.get(\"lineItemsComment\"))\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation changeCartItemComment($command: InputChangeCartItemCommentType) {\nchangeCartItemComment(command: $command) {\nid\ncomment\nitems {\nid\nlistPrice {\namount\n}\nnote\n}\n}\n}",
														"variables": "{\n\"command\":{\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"lineItemId\": \"{{lineItemId1}}\",\n\"comment\": \"{{lineItemsComment}}\"\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Set cartId\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"});\r",
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"C265593 Check available shipment method\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.availableShippingMethods).to.not.empty;\r",
															" pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"C265594 Check available payment method\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.availablePaymentMethods).to.not.empty;\r",
															"     pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add dynamic property to cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C327832 Add dynamicproperty to cart\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.updateCartDynamicProperties.dynamicProperties[0]).to.be.an(\"Object\"); \r",
															"pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															" pm.test(\"C327786 Check values short text\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															" });\r",
															"\r",
															" pm.test(\"C327787 Check values long text\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															" });\r",
															"\r",
															" pm.test(\"C327788 Check values int\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327789 Check values decimal\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															" });\r",
															"\r",
															"   pm.test(\"C327790 Check values html\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327791 Check values image\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327792 Check values bool\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327793 Check values datetime\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327794 Check values dictionary\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3\"));\r",
															" });\r",
															"\r",
															" pm.test(\"C327795 Check values multivalue\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															" });\r",
															"\r",
															"  pm.test(\"C327796 Check values Multilingual \", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short6\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															" });\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateCartDynamicProperties($command: InputUpdateCartDynamicPropertiesType!) {\r\nupdateCartDynamicProperties(command: $command) {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n} ",
														"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",  \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Boolean_0_0_0\",\r\n\"value\": {{bool1}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_1_0\",\r\n\"value\": \"{{short6}}\",\r\n\"cultureName\":\"en-US\"\r\n}\r\n,{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update dynamic property to cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"    \r",
															"pm.test(\"C341199 Update dynamic property to cart\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short2_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data_update\"));\r",
															" });\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateCartDynamicProperties($command: InputUpdateCartDynamicPropertiesType!) {\r\nupdateCartDynamicProperties(command: $command) {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n} ",
														"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",  \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_0_0\",\r\n\"value\": \"{{short2_update}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_DateTime_0_0_0\",\r\n\"value\": \"{{data_update}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Decimal_0_0_0\",\r\n\"value\": {{decimal_update}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Html_0_0_0\",\r\n\"value\": \"{{html_update}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Image_0_0_0\",\r\n\"value\": \"{{image_update}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_Integer_1_0_0\",\r\n\"value\": {{int_update}}\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_LongText_0_1_0\",\r\n\"value\": \"{{long_update}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_0_1_0\",\r\n\"value\": \"{{short6}}\",\r\n\"cultureName\":\"en-US\"\r\n}\r\n,{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_ShoppingCart_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n} ]\r\n}\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add dynamic properties for lineitems in cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C327833 Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"    \r",
															"pm.test(\"C327797 Check values short text\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															" });\r",
															" \r",
															"pm.test(\"C327798 Check values long text\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327799 Check values int\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327800 Check values decimal\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327801 Check values html\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327802 Check values image\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327803 Check values bool\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool2\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327804 Check values datetime\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327805 Check values dictionary\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3\"));\r",
															" });\r",
															"\r",
															" pm.test(\"C327806 Check values multivalue\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															" });\r",
															"\r",
															"  pm.test(\"C327807 Check values Multilingual \", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short6\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															" });\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateCartItemDynamicProperties($command: InputUpdateCartItemDynamicPropertiesType!) {\r\nupdateCartItemDynamicProperties(command: $command) {\r\nid\r\nitems {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"lineItemId\": \"{{lineItemId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},{\r\n\"name\": \"CartModule_LineItem_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Decimal_0_0_0\",\r\n\"value\":{{decimal1}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_LineItem_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},\r\n{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short6}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update dynamic properties for lineitems in cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"    \r",
															"pm.test(\"C341198 Update dynamic properties for lineitems in cart\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short2_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data_update\"));\r",
															" });\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateCartItemDynamicProperties($command: InputUpdateCartItemDynamicPropertiesType!) {\r\nupdateCartItemDynamicProperties(command: $command) {\r\nid\r\nitems {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"lineItemId\": \"{{lineItemId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},{\r\n\"name\": \"CartModule_LineItem_DateTime_0_0_0\",\r\n\"value\": \"{{data_update}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Decimal_0_0_0\",\r\n\"value\":{{decimal_update}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Html_0_0_0\",\r\n\"value\": \"{{html_update}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Image_0_0_0\",\r\n\"value\": \"{{image_update}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int_update}}\r\n},{\r\n\"name\": \"CartModule_LineItem_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_LongText_0_1_0\",\r\n\"value\": \"{{long_update}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_0_1\",\r\n\"value\": \"222\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},\r\n{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short6}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short2_update}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add cart payment",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C261932 AddPayment\", function(){\r",
															"    var jSonData = pm.response.json();\r",
															"    pm.expect(jSonData.data.addOrUpdateCartPayment.id).to.not.eql(null);\r",
															"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).to.be.an(\"object\");\r",
															"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
															"    pm.collectionVariables.set(\"paymentId1\",jSonData.data.addOrUpdateCartPayment.payments[0].id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
														"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update cart payment",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"UpdatePayment\", function(){\r",
															"    var jSonData = pm.response.json();\r",
															"    pm.expect(jSonData.data.addOrUpdateCartPayment.id).to.not.eql(null);\r",
															"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).to.be.an(\"object\");\r",
															"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
														"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{paymentId1}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"{{payment_update}}\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"{{payment_update}}\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check payment update",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															"pm.test(\"C261935 Check update payment method\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.payments[0].billingAddress.name).to.be.eql(pm.collectionVariables.get(\"payment_update\"));\r",
															"     pm.expect(data.data.cart.payments[0].billingAddress.city).to.be.eql(pm.collectionVariables.get(\"payment_update\"));\r",
															"    \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\n\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    billingAddress{\n        middleName\n        name\n        city\n\n    }\n}\n\nshipments\n{\n    id\n}\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add dynamic properties for payments in cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C315779 Add dynamicPropertiesPayment tatus code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"    \r",
															"pm.test(\"C327821 Check values short text\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															" });\r",
															" \r",
															"pm.test(\"C327822 Check values long text\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327823 Check values int\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327824 Check values decimal\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327825 Check values html\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327826 Check values image\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327827 Check values bool\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327828 Check values datetime\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327829 Check values dictionary\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3\"));\r",
															" });\r",
															"\r",
															" pm.test(\"C327830 Check values multivalue\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															" });\r",
															"\r",
															"  pm.test(\"C327831 Check values Multilingual \", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short6\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															" });\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateCartPaymentDynamicProperties($command: InputUpdateCartPaymentDynamicPropertiesType!) {\r\nupdateCartPaymentDynamicProperties(command: $command) {\r\nid\r\npayments {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"paymentId\": \"{{paymentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Payment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Boolean_0_0_0\",\r\n\"value\":{{bool1}}\r\n},{\r\n\"name\": \"CartModule_Payment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},\r\n{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short6}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_Payment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Html_0_1_0\",\r\n\"value\": \"{{html3}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_Payment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_Payment_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_0_1_0\",\r\n\"value\": \"{{short4}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update dynamic properties for payments in cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"    \r",
															"pm.test(\"C327820 Update dynamic properties for payments in cart\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short2_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data_update\"));\r",
															" });\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateCartPaymentDynamicProperties($command: InputUpdateCartPaymentDynamicPropertiesType!) {\r\nupdateCartPaymentDynamicProperties(command: $command) {\r\nid\r\npayments {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"paymentId\": \"{{paymentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Payment_ShortText_0_0_0\",\r\n\"value\": \"{{short2_update}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Boolean_0_0_0\",\r\n\"value\":{{bool2}}\r\n},{\r\n\"name\": \"CartModule_Payment_DateTime_0_0_0\",\r\n\"value\": \"{{data_update}}\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},\r\n{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short6}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_Decimal_0_0_0\",\r\n\"value\": {{decimal_update}}\r\n},{\r\n\"name\": \"CartModule_Payment_Html_0_0_0\",\r\n\"value\": \"{{html_update}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Html_0_1_0\",\r\n\"value\": \"{{html3}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_Payment_Image_0_0_0\",\r\n\"value\": \"{{image_update}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n\"value\": {{int_update}}\r\n},{\r\n\"name\": \"CartModule_Payment_LongText_0_0_0\",\r\n\"value\": \"{{long_update}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_0_1_0\",\r\n\"value\": \"{{short4}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add cart shipment",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C261942 Add Shipment\", function(){\r",
															"    var jSonData = pm.response.json();\r",
															"    pm.expect(jSonData.data.addOrUpdateCartShipment.id).to.not.eql(null);\r",
															"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).to.be.an(\"object\");\r",
															"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"    pm.collectionVariables.set(\"shipmentId1\",jSonData.data.addOrUpdateCartShipment.shipments[0].id);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
														"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update cart shipment",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Update Shipment\", function(){\r",
															"    var jSonData = pm.response.json();\r",
															"    pm.expect(jSonData.data.addOrUpdateCartShipment.id).to.not.eql(null);\r",
															"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).to.be.an(\"object\");\r",
															"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
														"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{shipmentId1}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"{{int1}}\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"{{shipment_update}}\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check shipment update",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															"pm.test(\"C261945 Check update payment method\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.shipments[0].weightUnit).to.be.eql(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(data.data.cart.shipments[0].deliveryAddress.city).to.be.eql(pm.collectionVariables.get(\"shipment_update\"));\r",
															"    \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\n\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    billingAddress{\n        middleName\n        name\n        city\n\n    }\n}\n\nshipments\n{\n    id\n    weightUnit\n    deliveryAddress{\n        city\n    }\n}\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add dynamic properties for shipments in cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C327818 Add CartShipmentDynamicProperties Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C327834 Check values short text\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															" });\r",
															" \r",
															"pm.test(\"C327835 Check values long text\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327836 Check values int\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327837 Check values decimal\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327838 Check values html\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327839 Check values image\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327840 Check values bool\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327841 Check values datetime\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															" });\r",
															"\r",
															"pm.test(\"C327842 Check values dictionary\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short2\"));\r",
															" });\r",
															"\r",
															" pm.test(\"C327843 Check values multivalue\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															" });\r",
															"\r",
															"  pm.test(\"C327844 Check values Multilingual \", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short6\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateCartShipmentDynamicProperties($command: InputUpdateCartShipmentDynamicPropertiesType!) {\r\nupdateCartShipmentDynamicProperties(command: $command) {\r\nid\r\nshipments{\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"shipmentId\":\"{{shipmentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Boolean_0_0_0\",\r\n\"value\": {{bool1}}\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_1\",\r\n\"value\": \"{{short2}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_1_0\",\r\n\"value\": \"{{short4}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short6}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update dynamic properties for shipments in cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"    \r",
															"pm.test(\"C341197 Update dynamic properties for shipment in cart\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short2_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image_update\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data_update\"));\r",
															" });\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateCartShipmentDynamicProperties($command: InputUpdateCartShipmentDynamicPropertiesType!) {\r\nupdateCartShipmentDynamicProperties(command: $command) {\r\nid\r\nshipments{\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
														"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"shipmentId\":\"{{shipmentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_0\",\r\n\"value\": \"{{short2_update}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_DateTime_0_0_0\",\r\n\"value\": \"{{data_update}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Decimal_0_0_0\",\r\n\"value\": {{decimal_update}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_0_0\",\r\n\"value\": \"{{html_update}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_Image_0_0_0\",\r\n\"value\": \"{{image_update}}\"\r\n},\r\n{\r\n\"name\": \"CartModule_Shipment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int_update}}\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_0_0\",\r\n\"value\": \"{{long_update}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_0_1\",\r\n\"value\": \"{{short2}}\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_0_1_0\",\r\n\"value\": \"{{short4}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short6}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Set total1\", function(){\r",
															"    var json = pm.response.json();\r",
															"pm.collectionVariables.set(\"total1\", json.data.cart.total.amount);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add promotion",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Promo added\", function () {\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"promotionId\"));\r",
															";\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"isAllowCombiningWithSelf\":false,\r\n   \"dynamicExpression\":{\r\n      \"all\":true,\r\n      \"not\":false,\r\n      \"id\":\"PromotionConditionAndRewardTree\",\r\n      \"availableChildren\":[\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCustomerCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"id\":\"ConditionIsRegisteredUser\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionIsEveryone\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionIsFirstTimeBuyer\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"UserGroupsContainsCondition\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCatalogCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"id\":\"ConditionCategoryIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionCodeContains\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionCurrencyIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionEntryIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"quantity\":0,\r\n                  \"quantitySecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionInStockQuantity\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionHasNoSalePrice\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCartCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsInCategoryAreInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsOfEntryAreInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"subTotal\":0.0,\r\n                  \"subTotalSecond\":0.0,\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionCartSubtotalLeast\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"id\":\"BlockReward\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardCartGetOfAbsSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardCartGetOfRelSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"id\":\"RewardItemGetFreeNumItemOfProduct\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardItemGetOfAbs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"numItem\":0,\r\n                  \"id\":\"RewardItemGetOfAbsForNum\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"numItem\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemGetOfRelForNum\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"quantity\":0,\r\n                  \"id\":\"RewardItemGiftNumItem\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardShippingGetOfAbsShippingMethod\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardShippingGetOfRelShippingMethod\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardPaymentGetOfAbs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardPaymentGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"product\":{\r\n                     \r\n                  },\r\n                  \"forNthQuantity\":0,\r\n                  \"inEveryNthQuantity\":0,\r\n                  \"itemLimit\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemForEveryNumInGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"conditionalProduct\":{\r\n                     \r\n                  },\r\n                  \"amount\":0.0,\r\n                  \"product\":{\r\n                     \r\n                  },\r\n                  \"forNthQuantity\":0,\r\n                  \"inEveryNthQuantity\":0,\r\n                  \"itemLimit\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemForEveryNumOtherItemInGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         }\r\n      ],\r\n      \"children\":[\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCustomerCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"id\":\"ConditionIsRegisteredUser\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionIsEveryone\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionIsFirstTimeBuyer\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"UserGroupsContainsCondition\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               {\r\n                  \"id\":\"ConditionIsEveryone\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCatalogCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"id\":\"ConditionCategoryIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionCodeContains\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionCurrencyIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionEntryIs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"quantity\":0,\r\n                  \"quantitySecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionInStockQuantity\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"id\":\"ConditionHasNoSalePrice\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"all\":false,\r\n            \"not\":false,\r\n            \"id\":\"BlockCartCondition\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsInCategoryAreInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"numItemSecond\":0,\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionAtNumItemsOfEntryAreInCart\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"subTotal\":0.0,\r\n                  \"subTotalSecond\":0.0,\r\n                  \"excludingCategoryIds\":[\r\n                     \r\n                  ],\r\n                  \"excludingProductIds\":[\r\n                     \r\n                  ],\r\n                  \"compareCondition\":\"AtLeast\",\r\n                  \"id\":\"ConditionCartSubtotalLeast\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               \r\n            ]\r\n         },\r\n         {\r\n            \"id\":\"BlockReward\",\r\n            \"availableChildren\":[\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardCartGetOfAbsSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardCartGetOfRelSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"numItem\":0,\r\n                  \"id\":\"RewardItemGetFreeNumItemOfProduct\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardItemGetOfAbs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"numItem\":0,\r\n                  \"id\":\"RewardItemGetOfAbsForNum\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"numItem\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemGetOfRelForNum\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"quantity\":0,\r\n                  \"id\":\"RewardItemGiftNumItem\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardShippingGetOfAbsShippingMethod\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardShippingGetOfRelShippingMethod\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"id\":\"RewardPaymentGetOfAbs\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardPaymentGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"amount\":0.0,\r\n                  \"product\":{\r\n                     \r\n                  },\r\n                  \"forNthQuantity\":0,\r\n                  \"inEveryNthQuantity\":0,\r\n                  \"itemLimit\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemForEveryNumInGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               },\r\n               {\r\n                  \"conditionalProduct\":{\r\n                     \r\n                  },\r\n                  \"amount\":0.0,\r\n                  \"product\":{\r\n                     \r\n                  },\r\n                  \"forNthQuantity\":0,\r\n                  \"inEveryNthQuantity\":0,\r\n                  \"itemLimit\":0,\r\n                  \"maxLimit\":0.0,\r\n                  \"id\":\"RewardItemForEveryNumOtherItemInGetOfRel\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ],\r\n            \"children\":[\r\n               {\r\n                  \"amount\":5.5,\r\n                  \"id\":\"RewardCartGetOfAbsSubtotal\",\r\n                  \"availableChildren\":[\r\n                     \r\n                  ],\r\n                  \"children\":[\r\n                     \r\n                  ]\r\n               }\r\n            ]\r\n         }\r\n      ]\r\n   },\r\n   \"storeIds\":[\r\n      \"Electronics\"\r\n   ],\r\n   \"name\":\"xApi_Promotion\",\r\n   \"type\":\"DynamicPromotion\",\r\n   \"isActive\":true,\r\n   \"priority\":0,\r\n   \"isExclusive\":false,\r\n   \"hasCoupons\":false,\r\n   \"maxUsageCount\":0,\r\n   \"maxUsageOnOrder\":0,\r\n   \"maxPersonalUsageCount\":0,\r\n   \"startDate\":\"2021-09-23T22:00:00Z\",\r\n   \"createdDate\":\"2021-09-23T12:46:47.29702Z\",\r\n   \"modifiedDate\":\"2021-09-23T12:46:47.29702Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{promotionId}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/marketing/promotions",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"marketing",
														"promotions"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add coupon to promo",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\r\n   {\r\n      \"promotionId\":\"{{promotionId}}\",\r\n      \"isNew\":true,\r\n      \"code\":\"{{xapi_promo_code}}\",\r\n      \"maxUsesNumber\":10,\r\n      \"maxUsesPerUser\":10\r\n   }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/marketing/promotions/coupons/add",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"marketing",
														"promotions",
														"coupons",
														"add"
													]
												}
											},
											"response": []
										},
										{
											"name": "Validate coupon",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C327845 Check validateCoupon\", function(){\r",
															"var jSon = pm.response.json();\r",
															"pm.expect(jSon.data.validateCoupon).to.be.a(\"boolean\");\r",
															"pm.expect(data.error).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation validateCoupon ($command: InputValidateCouponType!) {\n    validateCoupon (command: $command)\n    \n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": null,\n    \"coupon\": \"{{xapi_promo_code}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add coupon",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check AddCoupon\", function(){\r",
															"var jSon = pm.response.json();\r",
															"pm.expect(jSon.data.addCoupon).to.not.empty;\r",
															"pm.expect(jSon.data.addCoupon.coupons[0]).to.be.an(\"object\");\r",
															"pm.expect(jSon.data.addCoupon.coupons[0].code).to.be.a(\"string\");\r",
															"pm.expect(jSon.data.addCoupon.coupons[0].isAppliedSuccessfully).to.be.equal(true);\r",
															"pm.expect(data.error).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addCoupon($command: InputAddCouponType!) {\naddCoupon(command: $command) {\nid\nname\ncustomerName\ncoupons {\ncode\nisAppliedSuccessfully\n}\ndiscounts{\ncoupon\n}\ndiscountTotal {\namount\n}\n}\n}",
														"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"couponCode\": \"{{xapi_promo_code}}\"\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"Check items in cart\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.items).to.not.empty\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"C261901 Check totals\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.cart.total).to.be.not.equal(\"total1\")\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\ndiscounts{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove coupon",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check removeCoupon\", function(){\r",
															"var json = pm.response.json();\r",
															"pm.expect(json.data.removeCoupon).not.empty;\r",
															"pm.expect(json.data.removeCoupon.coupons).to.be.empty;\r",
															"pm.expect(data.error).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeCoupon($command: InputRemoveCouponType!) {\nremoveCoupon(command: $command) {\nid\nname\ncustomerName\ncoupons {\ncode\nisAppliedSuccessfully\n}\ndiscounts{\ncoupon\n}\ndiscountTotal {\namount\n}\n}\n}",
														"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId}}\",\n\"cartType\": \"null\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"couponCode\": \"{{xapi_promo_code}}\"\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Check items in cart\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.items).to.not.empty\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"C261905 Check totals\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"var total1 = pm.collectionVariables.get(\"total1\");\r",
															"pm.expect(jsonData.data.cart.total.amount).to.be.equal(total1);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\nitems\n{\n    id\n    name\n}\ncoupons{\n    code\n}\ncomment\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\nitems\n{\nid\nname\nproductId\nfulfillmentCenterId\nfulfillmentCenterName\ndynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n\nlistPrice {\namount\n}\n}\navailableShippingMethods {\ncode\noptionName\nlogoUrl\ncurrency {\ncode\n}\ntotal {\namount\n}\noptionDescription\nprice {\namount\n}\npriority\n}\navailablePaymentMethods {\ncode\ncurrency{\ncode\n}\nlogoUrl\nisAvailableForPartial\ntaxTotal{\namount\n}\npaymentMethodGroupType\nprice {\namount\n}\npriority\nisAvailableForPartial\n}\ntaxTotal {\namount\n}\ntotal{\n    amount\n}\npayments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n\nshipments\n{\n    id\n    dynamicProperties {\nname\nvalue\nvalueType\n  dictionaryItem{\n    id\n    name\n    label\n  }\n}\n}\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add cart address",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261920 Check addOrUpdateCartAddress \", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
															"    pm.expect(json.data.addOrUpdateCartAddress.id).to.be.not.empty;\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"    pm.collectionVariables.set(\"cartAddress\",json.data.addOrUpdateCartAddress.addresses[0].id);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
														"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update cart address",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check UpdateCartAddress \", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
															"    pm.expect(json.data.addOrUpdateCartAddress.id).to.be.not.empty;\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
														"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"{{cartAddress}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"{{shipment_update}}\",\n\"line2\": \"{{payment_update}}\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check cart address update",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"C261924 Check update cart address\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.addresses[0].line1).to.be.eql(pm.collectionVariables.get(\"shipment_update\"));\r",
															"    pm.expect(data.data.cart.addresses[0].line2).to.be.eql(pm.collectionVariables.get(\"payment_update\"));\r",
															"    \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\ncart (\nstoreId:\"{{storeId}}\"\nuserId: \"{{userId}}\"\ncurrencyCode: \"{{currencyCode}}\"\ncultureName: \"{{cultureName}}\"\ncartName: \"{{cartName}}\"\n)\n{\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove cart address",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261929 removeCartAddress\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.removeCartAddress).to.be.not.empty;\r",
															"    pm.expect(json.data.removeCartAddress.id).to.be.not.empty;\r",
															"    pm.expect(json.data.removeCartAddress.addresses[0].id).to.be.a(\"string\");\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeCartAddress ($command: InputRemoveCartAddressType!) {\nremoveCartAddress (command: $command) {\nid\naddresses{\nid\n}\n}\n}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"addressId\": \"KeyTest\"\n      }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear shipments",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261951 clearShipments\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearShipments).to.be.not.empty;\r",
															"    pm.expect(json.data.clearShipments.shipments).to.be.empty;\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearShipments ($command: InputClearShipmentsType!) {\nclearShipments (command: $command) {\nid\nshipments{\nid\nshipmentMethodCode\nshipmentMethodOption\ndeliveryAddress{\nid\nline1\nline2\n}\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove shipment",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261947 removeShipment\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.removeShipment).to.be.not.empty;\r",
															"    pm.expect(json.data.removeShipment.shipments).to.be.empty;\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeShipment ($command: InputRemoveShipmentType!) {\nremoveShipment (command: $command) {\nid\nshipments{\nid\nshipmentMethodCode\nshipmentMethodOption\ndeliveryAddress{\nid\nline1\nline2\n}\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"shipmentId\": \"shipmentID_1\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear payments",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261939 clearPayments\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearPayments).to.be.not.empty;\r",
															"    pm.expect(json.data.clearPayments.payments).to.be.empty;\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearPayments ($command: InputClearPaymentsType!) {\nclearPayments (command: $command) {\nid\npayments{\nid\nouterId\namount{\namount\n}\nbillingAddress{\nline1\n}\n}\n}\n}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261907 clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261915 RemoveCart\", function(){\r",
															"    var jSonData = pm.response.json();\r",
															"    pm.expect(jSonData.data.removeCart).to.be.equal(true);\r",
															"    pm.expect(data.error).to.be.undefined;\r",
															"});\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeCart ($command: InputRemoveCartType!) {\n    removeCart (command: $command)\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete promo",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/marketing/promotions?ids={{promotionId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"marketing",
														"promotions"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{promotionId}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Delete products",
									"item": [
										{
											"name": "Delete product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId2}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId3}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId3}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						},
						{
							"name": "Add multiple items [ID]",
							"item": [
								{
									"name": "Create products",
									"item": [
										{
											"name": "Create normal_product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Normal_Product\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the normal_product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Normal_Product\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId1}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId1}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the normal_product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(25);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"inStockQuantity\": 25,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create no_price_product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId2\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId2\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct2\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code2\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304561\",\r\n    \"name\": \"No_Price_Product\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the no_price_product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(25);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId2}}\",\r\n  \"inStockQuantity\": 25,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId2}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create no_stock_product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId3\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId3\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct3\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code3\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304562\",\r\n    \"name\": \"Not_In_Stock_Product_3\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the no_stock_product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId3}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code3}}\",\r\n    \"name\": \"Not_In_Stock_Product_3\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product3\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product3\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product3\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId3}}\",\r\n      \"list\": {{ProductPrice3}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId3}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId3}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty 0 to the no_stock_product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(0);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId3}}\",\r\n  \"inStockQuantity\": 0,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId3}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId3}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get product 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Product_4 not exist\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products/Not_Exist_Product",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products",
														"Not_Exist_Product"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create can't_be_purchased_product_4",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId4\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId4\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct4\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code4\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Сant_be_purchased_product\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"isBuyable\": false,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the can't_be_purchased_product_4",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId4}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code4}}\",\r\n    \"name\": \"Сant_be_purchased_product\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"Сant_be_purchased_product\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Сant_be_purchased_product\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId4}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId4}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId4}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty Сant_be_purchased_product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId4}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId4}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId4}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create normal_product_5",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId5\", jsonData.id);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-2343045605\",\r\n    \"name\": \"Normal_Product5\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the normal_product_5",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId5}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-2343045605\",\r\n    \"name\": \"Normal_Product5\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId5}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId5}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId5}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create normal_product_6",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId6\", jsonData.id);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-2343045606\",\r\n    \"name\": \"Normal_Product6\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the normal_product_6",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId6}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-2343045606\",\r\n    \"name\": \"Normal_Product6\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId6}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId6}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId6}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create normal_product_7",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId7\", jsonData.id);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-2343045607\",\r\n    \"name\": \"Normal_Product7\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the normal_product_7",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId7}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-2343045607\",\r\n    \"name\": \"Normal_Product7\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId7}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId7}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId7}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create normal_product_8",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId8\", jsonData.id);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-2343045608\",\r\n    \"name\": \"Normal_Product8\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the normal_product_8",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId8}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-2343045608\",\r\n    \"name\": \"Normal_Product8\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId8}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId8}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId8}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create normal_product_9",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId9\", jsonData.id);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-2343045609\",\r\n    \"name\": \"Normal_Product9\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the normal_product_9",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId9}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-2343045609\",\r\n    \"name\": \"Normal_Product9\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId9}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId9}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId9}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create normal_product_10",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId10\", jsonData.id);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-23430456010\",\r\n    \"name\": \"Normal_Product10\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the normal_product_10",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId10}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-23430456010\",\r\n    \"name\": \"Normal_Product10\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId10}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId10}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId10}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create normal_product_11",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId11\", jsonData.id);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-23430456011\",\r\n    \"name\": \"Normal_Product11\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the normal_product_11",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId11}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-23430456011\",\r\n    \"name\": \"Normal_Product11\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId11}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId11}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId11}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create normal_product_12",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId12\", jsonData.id);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-23430456012\",\r\n    \"name\": \"Normal_Product12\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the normal_product_12",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId12}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-23430456012\",\r\n    \"name\": \"Normal_Product12\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId12}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId12}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId12}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create normal_product_13",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId13\", jsonData.id);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-23430456013\",\r\n    \"name\": \"Normal_Product13\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the normal_product_13",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId13}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-23430456013\",\r\n    \"name\": \"Normal_Product13\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId13}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId13}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId13}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"8b7b07c165924a879392f4f51a6f7ce0\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/8b7b07c165924a879392f4f51a6f7ce0",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"8b7b07c165924a879392f4f51a6f7ce0"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"f9330eb5ed78427abb4dc4089bc37d9f\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/f9330eb5ed78427abb4dc4089bc37d9f",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"f9330eb5ed78427abb4dc4089bc37d9f"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"d154d30d76d548fb8505f5124d18c1f3\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/d154d30d76d548fb8505f5124d18c1f3",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"d154d30d76d548fb8505f5124d18c1f3"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_4",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"1486f5a1a25f48a999189c081792a379\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/1486f5a1a25f48a999189c081792a379",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"1486f5a1a25f48a999189c081792a379"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_5",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId5}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId5}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId5}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_6",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId6}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId6}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId6}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_7",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId7}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId7}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId7}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_8",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId8}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId8}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId8}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_9",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId9}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId9}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId9}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_10",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId10}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId10}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId10}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_11",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId11}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId11}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId11}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_12",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId12}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId12}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId12}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_13",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId13}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId13}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId13}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index products",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check Index\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId2}}\", \"{{ProductId1}}\",\"{{ProductId3}}\",\"{{ProductId4}}\",\"{{ProductId5}}\",\"{{ProductId6}}\",\"{{ProductId7}}\",\"{{ProductId8}}\",\"{{ProductId9}}\",\"{{ProductId10}}\",\"{{ProductId11}}\",\"{{ProductId12}}\",\"{{ProductId13}}\"\r\n        ]\r\n    }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Create user and get token",
									"item": [
										{
											"name": "Clear",
											"item": [
												{
													"name": "Delete users",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\",\"{{userName2}}\"\r\n    ]\r\n  }\r\n}\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete contact_1",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete contact_2",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Create",
											"item": [
												{
													"name": "Сreate contact_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 2000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add user_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
																"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"Password1\",\n    \"userName\": \"{{userName1}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId1}}\"\n      }}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Set customerId1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Set CustomerId1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"userId1\",jsonData.data.contact.securityAccounts[0].id);\r",
																	"    pm.collectionVariables.set(\"userName1\",jsonData.data.contact.securityAccounts[0].userName)\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n  securityAccounts{\n      id\n      userName\n  }\n  }\n    }\n",
																"variables": "{\n  \"id\": \"{{contactId1}}\"\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token for user_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set Token1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"Token1\", jsonData.access_token);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {
															"content-type": true
														}
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "grand_type",
																"value": "",
																"type": "text",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=password&scope=offline_access&username={{userName1}}&password=Password1",
															"options": {
																"raw": {
																	"language": "text"
																}
															}
														},
														"url": {
															"raw": "{{url}}/connect/token",
															"host": [
																"{{url}}"
															],
															"path": [
																"connect",
																"token"
															]
														}
													},
													"response": []
												},
												{
													"name": "Сreate contact_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId2\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId2\", jsonData.data.createContact.id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 2000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact2\",\n\"memberType\": \"Contac2\",\n\"addresses\": [],\n\"fullName\": \"Contact2\",\n\"firstName\": \"Contact2\",\n\"lastName\": \"Contact2\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add user_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
																"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"Password1\",\n    \"userName\": \"{{userName2}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId2}}\"\n      }}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Set customerId2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Set CustomerId1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"userId2\",jsonData.data.contact.securityAccounts[0].id);\r",
																	"    pm.collectionVariables.set(\"userName2\",jsonData.data.contact.securityAccounts[0].userName)\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n  securityAccounts{\n      id\n      userName\n  }\n  }\n    }\n",
																"variables": "{\n  \"id\": \"{{contactId2}}\"\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											]
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Add multiple items (variations)",
									"item": [
										{
											"name": "Get cart_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Set cartId2\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token1}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId1}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items (product without price not added)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C279149 Product without price not added\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addItemsCart.items[0].productId).to.be.equal(pm.collectionVariables.get(\"ProductId1\"));\r",
															"    pm.expect(jsonData.data.addItemsCart.items[1]).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity,\r\n            name\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId2}}\",\r\n        \"quantity\": 5\r\n    }   \r\n    ]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items (product with stock qty=0 not added)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C279148 Product with stock qty=0 not added\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addItemsCart.items[0].productId).to.be.equal(pm.collectionVariables.get(\"ProductId1\"));\r",
															"pm.expect(jsonData.data.addItemsCart.items[1]).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity,\r\n            name\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId3}}\",\r\n        \"quantity\": 5\r\n    }   \r\n    ]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items (product not exist)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C279147 Product with stock qty=0 not added\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addItemsCart.items[0].productId).to.be.equal(pm.collectionVariables.get(\"ProductId1\"));\r",
															"pm.expect(jsonData.data.addItemsCart.items[1]).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity,\r\n            name\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"Not_Exist_Product\",\r\n        \"quantity\": 5\r\n    }   \r\n    ]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear cart_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items (large number of items)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C279151 10 products added\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.addItemsCart.items[0].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[1].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[2].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[3].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[4].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[5].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[6].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[7].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[8].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[9].quantity).to.equal(2);\r",
															"});\r",
															"\r",
															"pm.test(\"C279136 10 products added\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.addItemsCart.items[0].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[1].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[2].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[3].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[4].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[5].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[6].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[7].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[8].quantity).to.equal(2);\r",
															"pm.expect(jsonData.data.addItemsCart.items[9].quantity).to.equal(2);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token1}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity,\r\n            name\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId11}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId12}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId13}}\",\r\n        \"quantity\": 2\r\n    }, {\r\n        \"productId\": \"{{ProductId5}}\",\r\n        \"quantity\": 2\r\n    },{\r\n        \"productId\": \"{{ProductId6}}\",\r\n        \"quantity\": 2\r\n    },{\r\n        \"productId\": \"{{ProductId7}}\",\r\n        \"quantity\": 2\r\n    },{\r\n        \"productId\": \"{{ProductId8}}\",\r\n        \"quantity\": 2\r\n    },{\r\n        \"productId\": \"{{ProductId9}}\",\r\n        \"quantity\": 2\r\n    },{\r\n        \"productId\": \"{{ProductId10}}\",\r\n        \"quantity\": 2\r\n    }  \r\n    ]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear cart_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items (product cant be purchased)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C279211 Сant_be_purchased_product not added\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addItemsCart.items[0].productId).to.be.equal(pm.collectionVariables.get(\"ProductId1\"));\r",
															"    pm.expect(jsonData.data.addItemsCart.items[1]).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity,\r\n            name\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId4}}\",\r\n        \"quantity\": 5\r\n    }   \r\n    ]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear cart_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items (same product)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C327969 Product_1 added to cart with quantity_1 + quantity_2 \", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addItemsCart.items[0].productId).to.be.equal(pm.collectionVariables.get(\"ProductId1\"));\r",
															"    pm.expect(jsonData.data.addItemsCart.items[0].quantity).to.be.to.be.equal(7);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity,\r\n            name\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 5\r\n    }   \r\n    ]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear cart_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get cart_2 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Set cartId2\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"cartId2\", jsonData.data.cart.id);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId2}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items to cart_2 by user_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"C279152 Add multiple items (User authorization token). Other user. Access denied\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors[0].message).to.be.not.empty;\r",
															"    console.log(jsonData.errors[0].message);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token1}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity,\r\n            name\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId2}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId2}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n    \"productId\": \"{{ProductId10}}\",\r\n    \"quantity\": 5\r\n} \r\n    ]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{Token1}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Clear all",
									"item": [
										{
											"name": "Remove cart_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"RemoveCart\", function(){\r",
															"    var jSonData = pm.response.json();\r",
															"    pm.expect(jSonData.data.removeCart).to.be.equal(true);\r",
															"    pm.expect(data.error).to.be.undefined;\r",
															"});\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeCart ($command: InputRemoveCartType!) {\n    removeCart (command: $command)\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove cart_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"RemoveCart\", function(){\r",
															"    var jSonData = pm.response.json();\r",
															"    pm.expect(jSonData.data.removeCart).to.be.equal(true);\r",
															"    pm.expect(data.error).to.be.undefined;\r",
															"});\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeCart ($command: InputRemoveCartType!) {\n    removeCart (command: $command)\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId2}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete users",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\",\"{{userName2}}\"\r\n    ]\r\n  }\r\n}\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete contact_1",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete contact_2",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId2}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId3}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId3}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_4",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId4}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId4}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_5",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId5}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId5}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_6",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId6}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId6}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_7",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId7}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId7}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_8",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId8}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId8}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_9",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId9}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId9}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_10",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId10}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId10}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_11",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId11}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId11}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_12",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId12}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId12}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_13",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId13}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId13}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{AdminToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Partial update [ID]",
							"item": [
								{
									"name": "Get cart",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Set cartId1, userId1\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
													"    pm.collectionVariables.set(\"userId1\", jsonData.data.cart.customerId);\r",
													"});\r",
													"pm.test(\"Check cart by user ID\", function () {\r",
													"    var data = pm.response.json();\r",
													"    pm.expect(data.data.cart).to.not.eql(null);\r",
													"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
													"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
													"    pm.expect(data.errors).to.be.undefined;\r",
													"});\r",
													"pm.test(\"Check available payment method\", function () {\r",
													"    var data = pm.response.json();\r",
													"    pm.expect(data.data.cart.availablePaymentMethods).to.not.empty;\r",
													"     pm.expect(data.errors).to.be.undefined;\r",
													"});\r",
													"pm.test(\"Check available shipment method\", function () {\r",
													"    var data = pm.response.json();\r",
													"    pm.expect(data.data.cart.availableShippingMethods).to.not.empty;\r",
													" pm.expect(data.errors).to.be.undefined;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add cart address",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.addOrUpdateCartAddress.addresses).to.not.empty;\r",
													"    pm.expect(jsonData.data.addOrUpdateCartAddress.addresses[0]).to.be.an(\"object\");\r",
													"    pm.collectionVariables.set(\"cartAddressId\", jsonData.data.addOrUpdateCartAddress.addresses[0].id);\r",
													"       \r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\r\n  addOrUpdateCartAddress(command: $command) {\r\n    id\r\n    addresses {\r\n        id\r\n        key\r\n      addressType\r\n      city\r\n      countryCode\r\n      countryName\r\n      email\r\n      firstName\r\n      id\r\n      lastName\r\n      line1\r\n      line2\r\n      middleName\r\n      name\r\n      organization\r\n      phone\r\n      postalCode\r\n      regionId\r\n      regionName\r\n      zip\r\n    }\r\n  }\r\n}",
												"variables": "{\r\n  \"command\": {\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{default}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\":\"{{cultureName}}\",\r\n    \"cartType\": \"null\",\r\n        \"address\": {\r\n      \"id\": \"{{$randomUUID}}\",\r\n      \"key\": \"{{$randomUUID}}\",\r\n      \"city\": \"city name test\",\r\n      \"countryCode\": \"123\",\r\n      \"countryName\": \"country name\",\r\n      \"email\": \"email@email\",\r\n      \"firstName\": \"test first name\",\r\n      \"lastName\": \"test last name\",\r\n       \"middleName\": \"test test\",\r\n      \"line1\": \"line1\",\r\n      \"line2\": \"line2\",\r\n      \"name\": \"address name\",\r\n      \"organization\": \"organization\",\r\n      \"phone\": \"777-777-7777\",\r\n      \"postalCode\": \"13456\",\r\n      \"regionId\": \"region1\",\r\n      \"regionName\": \"region name\",\r\n      \"zip\":\"13413\",\r\n      \"addressType\": 1\r\n    }\r\n  }\r\n}\r\n\r\n"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payment to cart",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check add paymnet address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.addOrUpdateCartPayment.payments).to.not.empty;\r",
													"    pm.expect(jsonData.data.addOrUpdateCartPayment).to.be.an(\"object\");\r",
													"    pm.collectionVariables.set(\"billingAddressId1\", jsonData.data.addOrUpdateCartPayment.payments[0].id);\r",
													"    pm.collectionVariables.set(\"billingKey\", jsonData.data.addOrUpdateCartPayment.payments[0].billingAddress.key);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\r\n  addOrUpdateCartPayment(command: $command) {\r\n    id\r\n    payments {\r\n      id\r\n      outerId\r\n      paymentGatewayCode\r\n      price {\r\n        amount\r\n      }\r\n      amount {\r\n        amount\r\n      }\r\n      billingAddress {\r\n        id\r\n        key\r\n        city\r\n        countryCode\r\n        countryName\r\n        email\r\n        firstName\r\n        lastName\r\n        line1\r\n        line2\r\n        middleName\r\n        name\r\n        organization\r\n        phone\r\n        postalCode\r\n        regionId\r\n        regionName\r\n        zip\r\n      }\r\n    }\r\n  }\r\n}",
												"variables": "{\r\n\"command\": {\r\n\"cartId\": \"{{cartId1}}\",\r\n\"storeId\": \"{{storeId}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\":\"{{cultureName}}\",\r\n\"cartType\": \"null\",\r\n\"payment\": {\r\n\"id\": \"{{$randomUUID}}\",\r\n\"outerId\": \"paymentouterud_default_test_1\",\r\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\r\n\"billingAddress\": {\r\n\"id\": \"{{$randomUUID}}\",\r\n\"key\": \"{{$randomUUID}}\",\r\n\"city\": \"City 17\",\r\n\"countryCode\": \"RU\",\r\n\"countryName\": \"Russia\",\r\n\"email\": \"addressCart email test\",\r\n\"firstName\": \"First test name\",\r\n\"lastName\": \"Last name test\",\r\n\"line1\": \"Address Line 1\",\r\n\"line2\": \"Address line 2\",\r\n\"middleName\": \"Test Middle Name\",\r\n\"name\": \"First name address\",\r\n\"organization\": \"OrganizationTestName\",\r\n\"phone\": \"88005553535\",\r\n\"postalCode\": \"111111\",\r\n\"regionId\": \"Test region\",\r\n\"regionName\": \"Region 15\",\r\n\"zip\": \"13413\",\r\n\"addressType\": 1\r\n},\r\n\"currency\": \"USD\",\r\n\"price\": 1050,\r\n\"amount\": 1050\r\n}\r\n}\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add shipment to cart",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check add shipment to cart\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.addOrUpdateCartShipment.shipments).to.not.empty;\r",
													"    pm.expect(jsonData.data.addOrUpdateCartShipment).to.be.an(\"object\");\r",
													"    pm.collectionVariables.set(\"shippingAddressId1\", jsonData.data.addOrUpdateCartShipment.shipments[0].id);\r",
													"    pm.collectionVariables.set(\"shipmentKey\", jsonData.data.addOrUpdateCartShipment.shipments[0].deliveryAddress.key);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation addOrUpdateCartShipment($command: InputAddOrUpdateCartShipmentType!) {\r\n  addOrUpdateCartShipment(command: $command) {\r\n    shipments {\r\n      id\r\n      shipmentMethodCode\r\n      shipmentMethodOption\r\n      fulfillmentCenterId\r\n      price{\r\n        amount\r\n      }\r\n      deliveryAddress {\r\n        id\r\n        key\r\n        city\r\n        countryCode\r\n        countryName\r\n        email\r\n        firstName\r\n        lastName\r\n        line1\r\n        line2\r\n        middleName\r\n        name\r\n        organization\r\n        phone\r\n        postalCode\r\n        regionId\r\n        regionName\r\n        zip\r\n      }\r\n    }\r\n  }\r\n}",
												"variables": "{\r\n  \"command\": {\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{customerId}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\":\"{{cultureName}}\",\r\n    \"cartType\": \"null\",\r\n    \"shipment\": {\r\n      \"id\": \"{{$randomUUID}}\",\r\n      \"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\r\n      \"height\": 123,\r\n      \"length\": 432,\r\n      \"measureUnit\": \"mm\",\r\n      \"shipmentMethodCode\": \"FixedRate\",\r\n      \"shipmentMethodOption\": \"Ground\",\r\n      \"volumetricWeight\": 151,\r\n      \"weight\": 15643,\r\n      \"weightUnit\": \"116\",\r\n      \"width\": 114,\r\n      \"deliveryAddress\": {\r\n        \"id\":\"{{$randomUUID}}\",\r\n        \"city\": \"City 17\",\r\n        \"countryCode\": \"RU\",\r\n        \"countryName\": \"Russia\",\r\n        \"email\": \"addressCart email test\",\r\n        \"firstName\": \"First test name\",\r\n        \"key\": \"{{$randomUUID}}\",\r\n        \"lastName\": \"Last name test\",\r\n        \"line1\": \"Address Line 1\",\r\n        \"line2\": \"Address line 2\",\r\n        \"middleName\": \"Test Middle Name\",\r\n        \"name\": \"First name address\",\r\n        \"organization\": \"OrganizationTestName\",\r\n        \"phone\": \"88005553535\",\r\n        \"postalCode\": \"111111\",\r\n        \"regionId\": \"Test region\",\r\n        \"regionName\": \"Region 15\",\r\n        \"zip\": \"13413\",\r\n        \"addressType\": 1\r\n      },\r\n      \"currency\": \"USD\",\r\n      \"price\": 10.00\r\n    }\r\n  }\r\n}\r\n\r\n"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update address",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check update address\", function(){\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.addOrUpdateCartAddress.addresses).to.not.empty;\r",
													"    pm.expect(jsonData.data.addOrUpdateCartAddress.addresses[0]).to.be.an(\"object\");\r",
													"    pm.expect(jsonData.data.addOrUpdateCartAddress.addresses[0].city).to.equal(\"Rostov\");\r",
													"    pm.expect(jsonData.data.addOrUpdateCartAddress.addresses[0].lastName).to.equal(\"Ivanova\");\r",
													"    pm.expect(jsonData.data.addOrUpdateCartAddress.addresses[0].id).to.equal(pm.collectionVariables.get(\"cartAddressId\"));\r",
													"   \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\r\n  addOrUpdateCartAddress(command: $command) {\r\n    id\r\n    addresses {\r\n      id\r\n      key\r\n      addressType\r\n      city\r\n      countryCode\r\n      countryName\r\n      email\r\n      firstName\r\n      lastName\r\n      line1\r\n      line2\r\n      middleName\r\n      name\r\n      organization\r\n      phone\r\n      regionId\r\n      regionName\r\n      zip\r\n    }\r\n  }\r\n}",
												"variables": "{\r\n  \"command\": {\r\n\"cartId\": \"{{cartId1}}\",\r\n\"storeId\": \"{{storeId}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\":\"{{cultureName}}\",\r\n\"cartType\": \"null\",\r\n\r\n   \"address\": {\r\n      \"addressType\": 1,\r\n      \"id\":\"{{cartAddressId}}\",\r\n      \"key\":\"{{cartAddressId}}\",\r\n       \"countryName\": \"Russia\",\r\n       \"lastName\": \"Ivanova\",\r\n       \"firstName\": \"test first name\",\r\n       \"city\": \"Rostov\"\r\n\r\n}\r\n}\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update shipment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check update shipment\", function(){\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.addOrUpdateCartShipment.shipments).to.not.empty;\r",
													"    pm.expect(jsonData.data.addOrUpdateCartShipment).to.be.an(\"object\");\r",
													"    pm.expect(jsonData.data.addOrUpdateCartShipment.shipments[0].deliveryAddress.city).to.equal(\"Kirov\");\r",
													"    pm.expect(jsonData.data.addOrUpdateCartShipment.shipments[0].id).to.equal(pm.collectionVariables.get(\"shippingAddressId1\"));\r",
													"    });\r",
													"    \r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!)\r\n{\r\n  addOrUpdateCartShipment(command: $command) {\r\nshipments {\r\nid\r\nshipmentMethodCode\r\nshipmentMethodOption\r\nfulfillmentCenterId\r\n  height\r\n  length\r\ndeliveryAddress {\r\nid\r\nkey\r\n            city\r\n            countryCode\r\n            countryName\r\n            email\r\n            firstName\r\n            lastName\r\n            middleName\r\n            line1\r\n            line2\r\n            name\r\n            organization\r\n            phone\r\n            regionId\r\n            regionName\r\n            zip\r\n        }\r\n    }\r\n}\r\n}",
												"variables": "{\r\n\"command\": {\r\n\"cartId\": \"{{cartId1}}\",\r\n\"storeId\": \"{{storeId}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\":\"{{cultureName}}\",\r\n\"cartType\": \"null\",\r\n\"shipment\": {\r\n      \"id\": \"{{shippingAddressId1}}\",\r\n      \"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\r\n      \"height\": 222,\r\n      \"length\": 555,\r\n           \"deliveryAddress\": {\r\n            \"id\": \"{{shipmentKey}}\",\r\n            \"key\":\"{{shipmentKey}}\",\r\n            \"countryName\": \"Russia\",\r\n            \"lastName\": \"Ivanova\",\r\n            \"firstName\": \"test first name\",\r\n            \"city\": \"Kirov\"\r\n                     },\r\n      \"currency\": \"USD\",\r\n      \"price\": 10.00\r\n    }\r\n  }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update payment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check update payment\", function(){\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.addOrUpdateCartPayment.payments).to.not.empty;\r",
													"    pm.expect(jsonData.data.addOrUpdateCartPayment).to.be.an(\"object\");\r",
													"\r",
													"\r",
													"pm.test(\"Check update value for billing address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.addOrUpdateCartPayment.payments[0].billingAddress.city).to.equal(\"Berlin\");\r",
													"    pm.expect(jsonData.data.addOrUpdateCartPayment.payments[0].billingAddress.countryCode).to.equal(\"DE\");\r",
													"    pm.expect(jsonData.data.addOrUpdateCartPayment.payments[0].billingAddress.countryName).to.equal(\"Germany\");\r",
													"    pm.expect(jsonData.data.addOrUpdateCartPayment.payments[0].billingAddress.firstName).to.equal(\"Anna\");\r",
													"    pm.expect(jsonData.data.addOrUpdateCartPayment.payments[0].billingAddress.lastName).to.equal(\"Ivanova\");\r",
													"    pm.expect(jsonData.data.addOrUpdateCartPayment.payments[0].id).to.equal(pm.collectionVariables.get(\"billingAddressId1\"));\r",
													"    \r",
													"    });\r",
													"    \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\r\naddOrUpdateCartPayment(command: $command) {\r\nid\r\npayments{\r\nid\r\nbillingAddress {\r\nid\r\nkey\r\ncity\r\ncountryCode\r\ncountryName\r\nemail\r\n  firstName\r\n  lastName\r\nline1\r\nline2\r\nmiddleName\r\nname\r\norganization\r\nphone\r\nregionId\r\nregionName\r\nzip\r\n}\r\n}\r\n}\r\n}",
												"variables": "{\r\n\"command\": {\r\n\"cartId\": \"{{cartId1}}\",\r\n\"storeId\": \"{{storeId}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\":\"{{cultureName}}\",\r\n\"cartType\": null,\r\n  \"payment\": {\r\n    \"id\": \"{{billingAddressId1}}\",\r\n\"billingAddress\": {\r\n\"id\": \"{{billingKey}}\",\r\n\"key\":\"{{billingKey}}\",\r\n  \"firstName\": \"Anna\",\r\n  \"lastName\":\"Ivanova\",\r\n\"city\": \"Berlin\",\r\n\"countryCode\": \"DE\",\r\n\"countryName\": \"Germany\"\r\n}\r\n}\r\n}\r\n}\r\n\r\n"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check updated value",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"C315457 Check update value for address\", function(){\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.cart.addresses).to.not.empty;\r",
													"    pm.expect(jsonData.data.cart.addresses[0]).to.be.an(\"object\");\r",
													"    pm.expect(jsonData.data.cart.addresses[0].city).to.equal(\"Rostov\");\r",
													"    pm.expect(jsonData.data.cart.addresses[0].lastName).to.equal(\"Ivanova\");\r",
													"     \r",
													"});\r",
													"\r",
													"pm.test(\"C315458 Check update value for shipment\", function(){\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.cart.shipments).to.not.empty;\r",
													"    pm.expect(jsonData.data.cart.shipments[0]).to.be.an(\"object\");\r",
													"    pm.expect(jsonData.data.cart.shipments[0].deliveryAddress.city).to.equal(\"Kirov\");\r",
													"    });\r",
													"\r",
													"pm.test(\"C315459 Check update value for billing address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.cart.payments[0].billingAddress.city).to.equal(\"Berlin\");\r",
													"    pm.expect(jsonData.data.cart.payments[0].billingAddress.countryCode).to.equal(\"DE\");\r",
													"    pm.expect(jsonData.data.cart.payments[0].billingAddress.countryName).to.equal(\"Germany\");\r",
													"    pm.expect(jsonData.data.cart.payments[0].billingAddress.firstName).to.equal(\"Anna\");\r",
													"    pm.expect(jsonData.data.cart.payments[0].billingAddress.lastName).to.equal(\"Ivanova\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId1}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"\"\r\n)\r\n{\r\nid\r\naddresses{\r\n  addressType\r\n  id\r\n  key\r\n            city\r\n            countryCode\r\n            countryName\r\n            email\r\n            firstName\r\n            lastName\r\n            line1\r\n            line2\r\n            name\r\n            organization\r\n            phone\r\n            zip\r\n            regionId\r\n            regionName\r\n            \r\n}\r\nitems\r\n{\r\n  productId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\n    id\r\n    name\r\n}\r\nitems\r\n{\r\nid\r\nname\r\n}\r\n  shipments {\r\nid\r\nshipmentMethodCode\r\nshipmentMethodOption\r\nfulfillmentCenterId\r\n    height\r\n    length\r\ndeliveryAddress {\r\nid\r\nkey\r\n            city\r\n            countryCode\r\n            countryName\r\n            email\r\n            firstName\r\n            lastName\r\n            line1\r\n            line2\r\n            name\r\n            organization\r\n            phone\r\n            regionId\r\n            regionName\r\n            zip\r\n        }\r\n    }\r\npayments\r\n{\r\n    id\r\n  billingAddress\r\n {\r\n  id\r\n  key\r\n    city\r\n    firstName\r\n    lastName\r\n    line1\r\n    line2\r\n    countryName\r\n    phone\r\n    regionId\r\n    regionName\r\n    zip\r\n    countryCode\r\n  }\r\n}\r\n}\r\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Order From Cart [ID]",
							"item": [
								{
									"name": "Add Products",
									"item": [
										{
											"name": "Create product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Product1\",\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":0,\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId1}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId1}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(25);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"inStockQuantity\": 25,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index product",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check Index\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId1}}\"\r\n        ]\r\n    }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Admin",
									"item": [
										{
											"name": "Get cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Set cartId1, userId1\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
															"    pm.collectionVariables.set(\"userId1\", jsonData.data.cart.customerId);\r",
															"});\r",
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"Check available payment method\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.availablePaymentMethods).to.not.empty;\r",
															"     pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"Check available shipment method\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.availableShippingMethods).to.not.empty;\r",
															" pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 5000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check items\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.addItemsCart.items).to.be.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        total{amount}\r\n        items {\r\n            productId,\r\n            name,\r\n            quantity\r\n        \r\n        }\r\n        \r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 1\r\n    }\r\n    ]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add cart payment",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"AddOrUpdatePayment\", function(){\r",
															"    var jSonData = pm.response.json();\r",
															"    pm.expect(jSonData.data.addOrUpdateCartPayment.id).to.not.eql(null);\r",
															"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).to.be.an(\"object\");\r",
															"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
															"    pm.collectionVariables.set(\"paymentId1\",jSonData.data.addOrUpdateCartPayment.payments[0].id);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
														"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"PaddressCart@email.com\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add cart shipment",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"AddOrUpdateShipment\", function(){\r",
															"    var jSonData = pm.response.json();\r",
															"    pm.expect(jSonData.data.addOrUpdateCartShipment.id).to.not.eql(null);\r",
															"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).to.be.an(\"object\");\r",
															"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"    pm.collectionVariables.set(\"shipmentId1\",jSonData.data.addOrUpdateCartShipment.shipments[0].id);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
														"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart@email.com\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add cart address",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check addOrUpdateCartAddress \", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
															"    pm.expect(json.data.addOrUpdateCartAddress.id).to.be.not.empty;\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"    pm.collectionVariables.set(\"cartAddress\",json.data.addOrUpdateCartAddress.addresses[0].id);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
														"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"City 18\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart@emai.ru\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId1}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\n    validationErrors(ruleSet:\"items\"){errorMessage}\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    validationErrors{errorMessage}\r\nid\r\nname\r\nproductId\r\n}\r\n\r\n\r\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create order from cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"CreateOrderFromCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.collectionVariables.set(\"orderId1\", json.data.createOrderFromCart.id);\r",
															"    pm.expect(json.data.createOrderFromCart).to.be.not.empty;\r",
															"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\ncreateOrderFromCart (command: $command) {\nid\nitems{\nid\nname\nquantity\nfulfillmentCenterId\nfulfillmentCenterName\n}\ntotal{\namount\n}\ndiscountTotal{\namount\n}\ntaxTotal{\namount\n}\ntotal{\namount\n}\n}\n}",
														"variables": "{\n\"command\": {\n    \"cartId\": \"{{cartId1}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261917 checkOrder\", function () {\r",
															"  var data = pm.response.json().data.order.items;\r",
															"    pm.expect(data.length).to.equal(1);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n    subTotal{amount}\r\n    items {\r\n      id\r\n      name\r\n        price{\r\n        amount\r\n              }\r\n\r\n    }\r\n\r\n  }\r\n}\r\n",
														"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Clear all",
									"item": [
										{
											"name": "Delete product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId1}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							],
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Merge carts [ID]",
							"item": [
								{
									"name": "Preparation",
									"item": [
										{
											"name": "Add products",
											"item": [
												{
													"name": "Create normal_product_10",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set ProductId1\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.collectionVariables.set(\"ProductId10\", jsonData.id);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"DDR-23430456010\",\r\n    \"name\": \"Normal_Product10\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create normal_product_11",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set ProductId1\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.collectionVariables.set(\"ProductId11\", jsonData.id);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"DDR-23430456011\",\r\n    \"name\": \"Normal_Product11\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create normal_product_12",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set ProductId1\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.collectionVariables.set(\"ProductId12\", jsonData.id);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"DDR-23430456012\",\r\n    \"name\": \"Normal_Product12\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create normal_product_13",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set ProductId1\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.collectionVariables.set(\"ProductId13\", jsonData.id);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"DDR-23430456013\",\r\n    \"name\": \"Normal_Product13\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add price to the normal_product_10",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"productId\": \"{{ProductId10}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-23430456010\",\r\n    \"name\": \"Normal_Product10\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId10}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/products/{{ProductId10}}/prices",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"products",
																"{{ProductId10}}",
																"prices"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add price to the normal_product_11",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"productId\": \"{{ProductId11}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-23430456011\",\r\n    \"name\": \"Normal_Product11\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId11}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/products/{{ProductId11}}/prices",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"products",
																"{{ProductId11}}",
																"prices"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add price to the normal_product_12",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"productId\": \"{{ProductId12}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-23430456012\",\r\n    \"name\": \"Normal_Product12\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId12}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/products/{{ProductId12}}/prices",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"products",
																"{{ProductId12}}",
																"prices"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add price to the normal_product_13",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"productId\": \"{{ProductId13}}\",\r\n  \"product\": {\r\n    \"code\": \"DDR-23430456013\",\r\n    \"name\": \"Normal_Product13\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId13}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/products/{{ProductId13}}/prices",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"products",
																"{{ProductId13}}",
																"prices"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add stock qty to the normal_product_10",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add stock qty to the product\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId10}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/products/{{ProductId10}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"products",
																"{{ProductId10}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add stock qty to the normal_product_11",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add stock qty to the product\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId11}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/products/{{ProductId11}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"products",
																"{{ProductId11}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add stock qty to the normal_product_12",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add stock qty to the product\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId12}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/products/{{ProductId12}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"products",
																"{{ProductId12}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add stock qty to the normal_product_13",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add stock qty to the product\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId13}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/products/{{ProductId13}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"products",
																"{{ProductId13}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index products",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check Index\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId10}}\", \"{{ProductId11}}\",\"{{ProductId12}}\",\"{{ProductId13}}\"\r\n        ]\r\n    }\r\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{AdminToken}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "Add users and get tokens",
											"item": [
												{
													"name": "Create contact_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add user_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
																"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"Password1\",\n    \"userName\": \"{{userName1}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId1}}\"\n      }}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index contact_1",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{contactId1}}\"]}]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check added user_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Set userId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"userId1\", jsonData.data.contact.securityAccounts[0].id);\r",
																	"\r",
																	"\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": false
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact {\r\n    contact (id: \"{{contactId1}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n      userName\r\n      email\r\n      id\r\n    }\r\n    }\r\n}\r\n",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token for user_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set Token1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"Token1\", jsonData.access_token);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {
															"content-type": true
														}
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "grand_type",
																"value": "",
																"type": "text",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=password&scope=offline_access&username={{userName1}}&password=Password1",
															"options": {
																"raw": {
																	"language": "text"
																}
															}
														},
														"url": {
															"raw": "{{url}}/connect/token",
															"host": [
																"{{url}}"
															],
															"path": [
																"connect",
																"token"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create contact_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId3\", jsonData.data.createContact.id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact3\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact3\",\n\"firstName\": \"Contact3\",\n\"lastName\": \"Contact3\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add user_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
																"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"Password1\",\n    \"userName\": \"{{userName3}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId3}}\"\n      }}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index contact_3",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[{\"documentType\":\"Member\",\"documentIds\":[\"{{contactId3}}\"]}]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check added user_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Set userId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"userId3\", jsonData.data.contact.securityAccounts[0].id);\r",
																	"\r",
																	"\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": false
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact {\r\n    contact (id: \"{{contactId3}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n      userName\r\n      email\r\n      id\r\n    }\r\n    }\r\n}\r\n",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Token for user_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set Token1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"Token3\", jsonData.access_token);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {
															"content-type": true
														}
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "grand_type",
																"value": "",
																"type": "text",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=password&scope=offline_access&username={{userName3}}&password=Password1",
															"options": {
																"raw": {
																	"language": "text"
																}
															}
														},
														"url": {
															"raw": "{{url}}/connect/token",
															"host": [
																"{{url}}"
															],
															"path": [
																"connect",
																"token"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{AdminToken}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										}
									]
								},
								{
									"name": "Merge Admin",
									"item": [
										{
											"name": "Get cart_1 (user cart)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Set cartId1, userId1\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
															"});\r",
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId1}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\ncustomerName\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nlistPrice {amount}\r\n}\r\n\r\ntotal {amount}\r\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get cart_2 (anon cart)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Set cartId2, userId2\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"cartId2\", jsonData.data.cart.id);\r",
															"    pm.collectionVariables.set(\"userId2\", jsonData.data.cart.customerId);\r",
															"});\r",
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\ncustomerName\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nlistPrice {amount}\r\n}\r\n\r\ntotal {amount}\r\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear cart_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261907 clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId2}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId2}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items to cart_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check items\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.addItemsCart.items[0,1]).to.be.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        customerName\r\n        customerId\r\n        id\r\n        items {\r\n            productId,\r\n            quantity\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId10}}\",\r\n        \"quantity\": 1\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId11}}\",\r\n        \"quantity\": 3\r\n    }]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items to cart_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check items\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.addItemsCart.items[0,1]).to.be.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        customerName\r\n        customerId\r\n        id\r\n        items {\r\n            productId,\r\n            quantity\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId2}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId2}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId12}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId13}}\",\r\n        \"quantity\": 5\r\n    }]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Merge carts",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Count number of items\", function () {\r",
															"    var data = pm.response.json().data.mergeCart.items;\r",
															"    pm.expect(data.length).to.equal(4);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation mergeCart ($command: InputMergeCartType!) {\nmergeCart (command: $command) {\nid\nitems{\nid\nname\nquantity\n}\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"secondCartId\":\"{{cartId2}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cart after merge",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"C261912 Count number of items\", function () {\r",
															"    var data = pm.response.json().data.cart.items;\r",
															"    pm.expect(data.length).to.equal(4);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId1}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\n\r\n\r\n\r\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear cart_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261907 clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear cart_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261907 clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId2}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId2}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Merge Anon",
									"item": [
										{
											"name": "Add items to cart_1 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check items\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.addItemsCart.items[0,1]).to.be.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        customerName\r\n        customerId\r\n        id\r\n        items {\r\n            productId,\r\n            quantity\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId10}}\",\r\n        \"quantity\": 1\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId11}}\",\r\n        \"quantity\": 3\r\n    }]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items to cart_2 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check items\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.addItemsCart.items[0,1]).to.be.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        customerName\r\n        customerId\r\n        id\r\n        items {\r\n            productId,\r\n            quantity\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId2}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId2}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId12}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId13}}\",\r\n        \"quantity\": 5\r\n    }]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Merge carts",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"C261909 Access denied\", function () {\r",
															"      var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors).to.not.empty;\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError:\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation mergeCart ($command: InputMergeCartType!) {\nmergeCart (command: $command) {\nid\nitems{\nid\nname\nquantity\n}\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"secondCartId\":\"{{cartId2}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear cart_1 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261907 clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear cart_2 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261907 clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId2}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId2}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Merge User",
									"item": [
										{
											"name": "Add items to cart_1 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check items\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.addItemsCart.items[0,1]).to.be.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        customerName\r\n        customerId\r\n        id\r\n        items {\r\n            productId,\r\n            quantity\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId10}}\",\r\n        \"quantity\": 1\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId11}}\",\r\n        \"quantity\": 3\r\n    }]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add items to cart_2 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check items\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.addItemsCart.items[0,1]).to.be.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        customerName\r\n        customerId\r\n        id\r\n        items {\r\n            productId,\r\n            quantity\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId2}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId2}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId12}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId13}}\",\r\n        \"quantity\": 5\r\n    }]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Merge carts - belong to user",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Count number of items\", function () {\r",
															"    var data = pm.response.json().data.mergeCart.items;\r",
															"    pm.expect(data.length).to.equal(4);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token1}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation mergeCart ($command: InputMergeCartType!) {\nmergeCart (command: $command) {\nid\nitems{\nid\nname\nquantity\n}\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"secondCartId\":\"{{cartId2}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cart after merge [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"C261801 Count number of items\", function () {\r",
															"    var data = pm.response.json().data.cart.items;\r",
															"    pm.expect(data.length).to.equal(4);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId1}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\n\r\n\r\n\r\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Merge carts - cart don't belong to user",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"C261910 Access denied\", function () {\r",
															"      var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors).to.not.empty;\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError:\");\r",
															"});\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token3}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation mergeCart ($command: InputMergeCartType!) {\nmergeCart (command: $command) {\nid\nitems{\nid\nname\nquantity\n}\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": 0,\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"cartId\": \"{{cartId2}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId2}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"secondCartId\":\"{{cartId1}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove cart_1 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"RemoveCart 1\", function(){\r",
															"    var jSonData = pm.response.json();\r",
															"    pm.expect(jSonData.data.removeCart).to.be.equal(true);\r",
															"    pm.expect(data.error).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeCart ($command: InputRemoveCartType!) {\n    removeCart (command: $command)\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove cart_2 [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"RemoveCart\", function(){\r",
															"    var jSonData = pm.response.json();\r",
															"    pm.expect(jSonData.data.removeCart).to.be.equal(true);\r",
															"    pm.expect(data.error).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation removeCart ($command: InputRemoveCartType!) {\n    removeCart (command: $command)\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId2}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Clear all",
									"item": [
										{
											"name": "Delete product_10",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId10}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId10}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_11",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId11}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId11}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_12",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId12}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId12}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_13",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId13}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId13}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete users",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Delete users [admin]\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.deleteUsers).to.not.empty;\r",
															"    pm.expect(jsonData.data.deleteUsers.succeeded).to.be.equal(true);\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\",  \"{{userName3}}\"\r\n    ]\r\n  }\r\n}\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete contact_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Delete Contact_1 [admin]\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.deleteContact).to.eql(true);\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete contact_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Delete Contact_1 [admin]\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.deleteContact).to.eql(true);\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId3}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							],
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Add or update dynamic properties in the cart [ID]",
							"item": [
								{
									"name": "Products",
									"item": [
										{
											"name": "Create product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId2\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId2\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct2\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code2\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304561\",\r\n    \"name\": \"Product2\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId3\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId3\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct3\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code3\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304562\",\r\n    \"name\": \"Product3\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId1}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId1}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId2}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code2}}\",\r\n    \"name\": \"Product2\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId2}}\",\r\n      \"list\": {{ProductPrice2}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId2}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId2}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId3}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code3}}\",\r\n    \"name\": \"Product3\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product3\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product3\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product3\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId3}}\",\r\n      \"list\": {{ProductPrice3}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId3}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId3}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the produc_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(250);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"inStockQuantity\": 250,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the produc_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(250);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId2}}\",\r\n  \"inStockQuantity\": 250,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId2}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the produc_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(250);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId3}}\",\r\n  \"inStockQuantity\": 250,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId3}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId3}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Properties",
									"item": [
										{
											"name": "Get cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Set variables\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"cartId\", jsonData.data.cart.id);\r",
															"    pm.collectionVariables.set(\"userId\", jsonData.data.cart.customerId);\r",
															"});\r",
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"Check available payment method\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.availablePaymentMethods).to.not.empty;\r",
															"     pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"Check available shipment method\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart.availableShippingMethods).to.not.empty;\r",
															" pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add item dynamic properties",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check item dynamic properties\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(jsonData.data.addItem.items[0].dynamicProperties[0].name).to.be.a(\"string\");\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addItem ($command: InputAddItemType!) {\r\n    addItem (command: $command) {\r\n        id\r\n        items {\r\n            productId\r\n            dynamicProperties {\r\n              name\r\n              value\r\n            }\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n        \"cartId\": \"{{cartId}}\",\r\n        \"storeId\": \"{{storeId}}\",\r\n        \"cartName\": \"{{cartName}}\",\r\n        \"userId\": \"{{userId}}\",\r\n        \"currencyCode\": \"{{currencyCode}}\",\r\n        \"cultureName\": \"{{cultureName}}\",\r\n           \"productId\": \"{{ProductId1}}\",\r\n          \"quantity\": 1,\r\n            \"dynamicProperties\": [\r\n                {\r\n  \"name\":\"CartModule_LineItem_Boolean_0_0_0\",\r\n  \"value\":{{bool1}}\r\n                },\r\n  {              \r\n \"name\":\"CartModule_LineItem_DateTime_0_0_0\",\r\n \"value\":\"{{data1}}\"\r\n  },\r\n  {\r\n\"name\":\"CartModule_LineItem_Decimal_0_0_0\",\r\n\"value\":{{decimal1}}\r\n  },\r\n{\r\n\"name\":\"CartModule_LineItem_Decimal_1_0_0\",\r\n\"value\":{{decimal2}}\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Decimal_1_0_0\",\r\n\"value\":{{decimal3}}\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Html_0_0_0\",\r\n\"value\":\"{{html1}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Html_0_1_0\",\r\n\"value\":\"{{html3}}\",\r\n\"cultureName\":\"de-DE\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Image_0_0_0\",\r\n\"value\":\"{{image}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Integer_0_0_0\",\r\n\"value\":{{int1}}\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\":{{int2}}\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\":{{int3}}\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_LongText_0_0_0\",\r\n\"value\":\"{{long1}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_LongText_0_1_0\",\r\n\"value\":\"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_0_0_0\",\r\n\"value\":\"{{short1}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_0_0_1\",\r\n\"value\":\"{{short2}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_0_1_1\",\r\n\"value\":\"{{short3}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_0_0\",\r\n\"value\":\"{{short6}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_0_0\",\r\n\"value\":\"{{short7}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_0_1\",\r\n\"value\":\"{{short13}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_0_1\",\r\n\"value\":\"{{short14}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\":\"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\":\"{{short9}}\",\r\n\"cultureName\":\"de-DE\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_1_1\",\r\n\"value\":\"{{short12}}\",\r\n\"cultureName\":\"de-DE\"\r\n}\r\n]\r\n     }\r\n  }"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties afterAdd(cart_lineitem1)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C315778 Check values\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short6\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short7\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short13\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short14\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short8\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short9\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short12\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add multiple items dynamic properties",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check multiple items dynamicProperties\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n  addItemsCart(command: $command) {\r\n        id\r\n        items {\r\n            productId\r\n            dynamicProperties {\r\n              name\r\n              value\r\n            }\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n        \"cartId\": \"{{cartId}}\",\r\n        \"storeId\": \"{{storeId}}\",\r\n        \"cartName\": \"{{cartName}}\",\r\n        \"userId\": \"{{userId}}\",\r\n        \"currencyCode\": \"{{currencyCode}}\",\r\n        \"cultureName\": \"{{cultureName}}\",\r\n        \"cartItems\": [{\r\n          \"productId\": \"{{ProductId2}}\",\r\n          \"quantity\": 2\r\n        },\r\n        {\r\n        \"productId\": \"{{ProductId3}}\",\r\n        \"quantity\": 5,\r\n                   \"dynamicProperties\": [\r\n   {\r\n  \"name\":\"CartModule_LineItem_Boolean_0_0_0\",\r\n  \"value\":{{bool1}}\r\n                },\r\n  {              \r\n \"name\":\"CartModule_LineItem_DateTime_0_0_0\",\r\n \"value\":\"{{data1}}\"\r\n  },\r\n  {\r\n\"name\":\"CartModule_LineItem_Decimal_0_0_0\",\r\n\"value\":{{decimal1}}\r\n  },\r\n{\r\n\"name\":\"CartModule_LineItem_Decimal_1_0_0\",\r\n\"value\":{{decimal2}}\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Decimal_1_0_0\",\r\n\"value\":{{decimal3}}\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Html_0_0_0\",\r\n\"value\":\"{{html1}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Html_0_1_0\",\r\n\"value\":\"{{html2}}\",\r\n\"cultureName\":\"de-DE\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Image_0_0_0\",\r\n\"value\":\"{{image}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Integer_0_0_0\",\r\n\"value\":{{int1}}\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\":{{int2}}\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_Integer_1_0_0\",\r\n\"value\":{{int3}}\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_LongText_0_0_0\",\r\n\"value\":\"{{long1}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_LongText_0_1_0\",\r\n\"value\":\"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_0_0_0\",\r\n\"value\":\"{{short1}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_0_0_1\",\r\n\"value\":\"{{short2}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_0_1_1\",\r\n\"value\":\"{{short3}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_0_0\",\r\n\"value\":\"{{short6}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_0_0\",\r\n\"value\":\"{{short7}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_0_1\",\r\n\"value\":\"{{short13}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_0_1\",\r\n\"value\": \"{{short14}}\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\":\"{{short4}}\",\r\n\"cultureName\":\"en-US\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_1_0\",\r\n\"value\":\"{{short5}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},\r\n{\r\n\"name\":\"CartModule_LineItem_ShortText_1_1_1\",\r\n\"value\":\"{{short12}}\",\r\n\"cultureName\":\"de-DE\"\r\n}\r\n]\r\n    } ]\r\n          \r\n \r\n     }\r\n  }"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties afterAdd(cart_lineitem)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C327810 Check values\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short6\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short7\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short13\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short14\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short8\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short9\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short12\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add payment dynamic properties",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check add payment dynamic properties\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\r\n    addOrUpdateCartPayment(command: $command) {\r\n        id\r\n        payments {\r\n          id\r\n         dynamicProperties {\r\n          name\r\n          value\r\n        }\r\n      }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \r\n    \"payment\": {\r\n  \r\n      \"dynamicProperties\": [\r\n           {\r\n  \"name\":\"CartModule_LineItem_Boolean_0_0_0\",\r\n  \"value\":\"{{bool1}}\"\r\n                },\r\n               {\r\n          \"name\": \"CartModule_Payment_DateTime_0_0_0\",\r\n          \"value\": \"{{data1}}\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_Decimal_0_0_0\",\r\n          \"value\": {{decimal1}}\r\n        },\r\n        {\r\n            \"name\":\"CartModule_Payment_Decimal_1_0_0\",\r\n            \"value\":{{decimal2}}\r\n        },\r\n        {\r\n            \"name\":\"CartModule_Payment_Decimal_1_0_0\",\r\n            \"value\": {{decimal3}}\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_Html_0_0_0\",\r\n          \"value\": \"{{html1}}\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_Html_0_1_0\",\r\n          \"value\": \"{{html2}}\",\r\n          \"cultureName\": \"en-US\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_Image_0_0_0\",\r\n          \"value\": \"{{image}}\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_Integer_0_0_0\",\r\n          \"value\":{{int1}}\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n          \"value\":{{int2}}\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_Integer_1_0_0\",\r\n          \"value\":{{int3}}\r\n        },\r\n        {\r\n          \"name\": \"CartModulePayment_LongText_0_0_0\",\r\n          \"value\": \"{{long1}}\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_LongText_0_1_0\",\r\n          \"value\":\"{{long2}}\",\r\n          \"cultureName\": \"fr-FR\"\r\n        },\r\n       {\r\n          \"name\": \"CartModule_Payment_ShortText_0_0_1\",\r\n          \"value\": \"{{short13}}\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_ShortText_0_0_1\",\r\n          \"value\": \"{{short14}}\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n          \"value\": \"{{short8}}\",\r\n          \"cultureName\": \"en-US\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n          \"value\": \"{{short9}}\",\r\n          \"cultureName\": \"de-DE\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_ShortText_1_1_0\",\r\n          \"value\": \"{{short10}}\",\r\n          \"cultureName\": \"fr-FR\"\r\n        },\r\n        {\r\n            \"name\":\"CartModule_Payment_ShortText_1_1_1\",\r\n            \"value\":\"{{short11}}\",\r\n            \"cultureName\":\"de-DE\"\r\n        },\r\n        {\r\n            \"name\":\"CartModule_Payment_ShortText_1_1_1\",\r\n            \"value\":\"{{short12}}\",\r\n             \"cultureName\":\"en-US\" \r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties afterAdd(cart_paymnet)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check values\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short11\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short10\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short12\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short13\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short14\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short8\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short9\"));\r",
															"   \r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\npayments\r\n{\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update paymnet dynamic properties",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Check update paymnet dynamic properties\", function(){\r",
															"\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal_update\"));\r",
															"\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\r\n    addOrUpdateCartPayment(command: $command) {\r\n        id\r\n        payments {\r\n          id\r\n         dynamicProperties {\r\n          name\r\n          value\r\n        }\r\n      }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"payment\": {\r\n    \r\n      \"dynamicProperties\": [\r\n        {\r\n          \"name\": \"CartModule_Payment_DateTime_0_0_0\",\r\n          \"value\": \"{{data_update}}\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_Decimal_0_0_0\",\r\n          \"value\": {{decimal_update}}\r\n        },\r\n        {\r\n          \"name\": \"CartModulePayment_LongText_0_0_0\",\r\n          \"value\": \"{{long_update}}\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Payment_LongText_0_1_0\",\r\n          \"value\": \"{{html_update}}\",\r\n          \"cultureName\": \"fr-FR\"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties afterUpdate(cart_paymnet)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C315780 Check values\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html_update\"));\r",
															"  \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\npayments\r\n{\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add shipment dynamic properties",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Check add shipment dynamic properties\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal2\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartShipment($command: InputAddOrUpdateCartShipmentType!) {\r\n    addOrUpdateCartShipment(command: $command) {\r\n        shipments {\r\n          id\r\n          dynamicProperties {\r\n            name\r\n            value\r\n          }\r\n        }\r\n  \t}\r\n}",
														"variables": "{\r\n    \"command\": {\r\n        \"cartId\": \"{{cartId}}\",\r\n        \"storeId\": \"{{storeId}}\",\r\n        \"cartName\": \"{{cartName}}\",\r\n        \"userId\": \"{{userId}}\",\r\n        \"currencyCode\": \"{{currencyCode}}\",\r\n        \"cultureName\": \"{{cultureName}}\",\r\n        \"shipment\": {\r\n           \r\n            \"dynamicProperties\": [\r\n            {\r\n              \"name\": \"CartModule_Shipment_Boolean_0_0_0\",\r\n              \"value\": {{bool2}}\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_DateTime_0_0_0\",\r\n              \"value\": \"{{data1}}\"\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_Decimal_0_0_0\",\r\n              \"value\": {{decimal1}}\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_Decimal_1_0_0\",\r\n              \"value\": {{decimal2}}\r\n            },\r\n              {\r\n              \"name\": \"CartModule_Shipment_Decimal_1_0_0\",\r\n              \"value\": {{decimal3}}\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_Html_0_1_0\",\r\n              \"value\": \"{{html4}}\",\r\n              \"cultureName\":\"fr-FR\"\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_Image_0_0_0\",\r\n              \"value\": \"{{image}}\"\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_Integer_0_0_0\",\r\n              \"value\":{{int1}}\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n              \"value\":{{int2}}\r\n            },\r\n             {\r\n              \"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n              \"value\": {{int3}}\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_LongText_0_0_0\",\r\n              \"value\": \"{{long1}}\"\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_LongText_0_1_0\",\r\n              \"value\": \"{{long2}}\",\r\n              \"cultureName\": \"en-US\"\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_ShortText_0_0_0\",\r\n              \"value\": \"{{short1}}\"\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_ShortText_0_0_1\",\r\n              \"value\": \"{{short3}}\"\r\n               },\r\n            {\r\n              \"name\": \"CartModule_Shipment_ShortText_0_1_1\",\r\n              \"value\": \"6882b02b-d42e-4ba3-82f2-0f16c45c8da7\",\r\n              \"cultureName\": \"fr-FR\"\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_ShortText_1_0_0\",\r\n              \"value\": \"{{short6}}\"\r\n            },\r\n             {\r\n              \"name\": \"CartModule_Shipment_ShortText_1_0_0\",\r\n              \"value\": \"{{short7}}\"\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_ShortText_1_0_1\",\r\n              \"value\": \"{{short13}}\"\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_ShortText_1_0_1\",\r\n              \"value\": \"{{short14}}\"\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_ShortText_1_1_0\",\r\n              \"value\": \"{{short9}}\",\r\n              \"cultureName\":\"de-DE\"\r\n            },\r\n            {\r\n              \"name\": \"CartModule_Shipment_ShortText_1_1_1\",\r\n              \"value\": \"{{short15}}\",\r\n              \"cultureName\":\"de-DE\"\r\n                      }                       \r\n   \r\n            ]\r\n}\r\n    }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties afterAdd(cart_shipment)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check values\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal3\"));\r",
															"    //pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															"    //pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short6\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short7\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short13\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short14\"));\r",
															"    //pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short8\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short9\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short15\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update shipment dynamic properties",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check update shipment dynamic properties\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal_update\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation addOrUpdateCartShipment($command: InputAddOrUpdateCartShipmentType!) {\r\n    addOrUpdateCartShipment(command: $command) {\r\n        shipments {\r\n          id\r\n          dynamicProperties {\r\n            name\r\n            value\r\n          }\r\n        }\r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"shipment\": {\r\n    \"dynamicProperties\": [\r\n        {\r\n          \"name\": \"CartModule_Shipment_Decimal_1_0_0\",\r\n          \"value\": {{decimal_update}}\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Shipment_Html_0_1_0\",\r\n          \"value\": \"{{html_update}}\",\r\n          \"cultureName\": \"de-DE\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Shipment_Image_0_0_0\",\r\n          \"value\": \"{{image_update}}\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Shipment_Integer_0_0_0\",\r\n          \"value\": {{int_update}}\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n          \"value\": {{int2_update}}\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Shipment_Integer_1_0_0\",\r\n          \"value\": {{int3_update}}\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Shipment_LongText_0_0_0\",\r\n          \"value\": \"{{long_update}}\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Shipment_ShortText_0_0_0\",\r\n          \"value\": \"{{short_update}}\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Shipment_ShortText_0_0_1\",\r\n          \"value\": \"{{short2_update}}\"\r\n        },\r\n        {\r\n          \"name\": \"CartModule_Shipment_ShortText_0_1_1\",\r\n          \"value\": \"{{short3_update}}\",\r\n          \"cultureName\": \"en-US\"\r\n        },\r\n                {\r\n          \"name\": \"CartModule_Shipment_ShortText_1_0_0\",\r\n          \"value\": \"{{short4_update}}\"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties afterUpdate(cart_shipment)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C315797 Check values\", function () {\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3_update\"));\r",
															"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short4_update\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check cart with dynamic properties",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check dynamic properties for LineItems\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.cart.items[0].dynamicProperties[0]).to.be.not.empty;\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															"pm.test(\"Check dynamic properties for Shipments \", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.cart.shipments[0]).to.be.not.empty;\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															"pm.test(\"Check dynamic properties for Payments\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.cart.payments[0]).to.be.not.empty;\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}\r\n}\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete products",
									"item": [
										{
											"name": "Delete product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId2}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId3}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId3}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						},
						{
							"name": "Check unavailable product in cart [ID]",
							"item": [
								{
									"name": "Create product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Set variables\", function(){\r",
													"    var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
													"pm.collectionVariables.set(\"Nameofproduct\", jsonData.name);\r",
													"pm.collectionVariables.set(\"xapi_code\", jsonData.code);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"xapi-C0098\",\r\n    \"name\": \"xapi_Product\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 1,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add price to the product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{xapi_code}}\",\r\n    \"name\": \"{{Nameofproduct}}\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"outline\": \"{{categoryQA}}\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"{{Nameofproduct}}\",\r\n        \"objectId\": \"{{ProductId1}}\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"{{catalogQA}}\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"{{categoryQA}}\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"{{Nameofproduct}}\",\r\n                \"objectId\": \"{{ProductId1}}\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"{{Nameofproduct}}\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{ProductId1}}\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/products/{{ProductId1}}/prices",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"products",
												"{{ProductId1}}",
												"prices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add stock qty to the product - default",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Add stock qty to the product Default\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.inStockQuantity).to.eql(32);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"fulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"fulfillmentCenterName\":\"{{DefaultFFCName}}\",\r\n   \"fulfillmentCenter\":{\r\n      \"name\":\"{{DefaultFFCName}}\",\r\n      \"description\":\"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n      \"address\":{\r\n         \"addressType\":0,\r\n         \"countryCode\":\"USA\",\r\n         \"countryName\":\"United States\",\r\n         \"city\":\"Chicago\",\r\n         \"postalCode\":\"60640\",\r\n         \"line1\":\"5400 N. Lakewood Avenue\",\r\n         \"regionName\":\"Illinois\",\r\n         \"phone\":\"(312) 222-3333\",\r\n         \"isDefault\":false\r\n      },\r\n      \"createdDate\":\"2018-05-05T05:55:00.64Z\",\r\n      \"modifiedDate\":\"2021-11-18T11:54:44.6718532Z\",\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\"\r\n   },\r\n   \"productId\":\"{{ProductId1}}\",\r\n   \"inStockQuantity\":32,\r\n   \"reservedQuantity\":0,\r\n   \"reorderMinQuantity\":0,\r\n   \"preorderQuantity\":0,\r\n   \"backorderQuantity\":0,\r\n   \"allowBackorder\":false,\r\n   \"allowPreorder\":false,\r\n   \"inTransit\":0,\r\n   \"status\":\"Disabled\",\r\n   \"createdDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"modifiedDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"inventory",
												"products",
												"{{ProductId1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get cart",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Set cartId1 and userId1 \", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
													"    pm.collectionVariables.set(\"userId1\", jsonData.data.cart.customerId);\r",
													"});\r",
													"pm.test(\"Check cart by user ID\", function () {\r",
													"    var data = pm.response.json();\r",
													"    pm.expect(data.data.cart).to.not.eql(null);\r",
													"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
													"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
													"    pm.expect(data.errors).to.be.undefined;\r",
													"});\r",
													"pm.test(\"Check available payment method\", function () {\r",
													"    var data = pm.response.json();\r",
													"    pm.expect(data.data.cart.availablePaymentMethods).to.not.empty;\r",
													"     pm.expect(data.errors).to.be.undefined;\r",
													"});\r",
													"pm.test(\"Check available shipment method\", function () {\r",
													"    var data = pm.response.json();\r",
													"    pm.expect(data.data.cart.availableShippingMethods).to.not.empty;\r",
													" pm.expect(data.errors).to.be.undefined;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add product to cart",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check additem\", function(){\r",
													"    var jsonData = pm.response.json();\r",
													"pm.expect(jsonData.data.addItem).to.not.eql(null);     \r",
													"pm.expect(jsonData.data.addItem.id).to.be.a(\"string\");    \r",
													"pm.expect(jsonData.data.addItem.items[0]).to.be.an(\"object\");\r",
													"pm.expect(data.errors).to.be.undefined;\r",
													"});\r",
													"\r",
													"//pm.test(\"Set lineitemId\", function(){\r",
													" //var jasonData =pm.response.json();  \r",
													"// pm.collectionVariables.set(\"lineItemId\", jasonData.data.addItem.items[0].id);\r",
													"//});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation addItem($command: InputAddItemType!) {\naddItem(command: $command) {\nid\nitems {\nid\nquantity\nlistPrice{\namount\n}\nnote\n}\ntotal{\namount\n}\ndiscountTotal{\namount\n}\n}\n}",
												"variables": "{\n  \"after\": \"{{after}}\",\n  \"first\": {{first}},\n  \"query\": \"{{query}}\",\n  \"group\": \"\",\n  \"command\": {\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartId\": \"{{cartId1}}\",\n    \"cartType\": \"{{cartType}}\",\n    \"productId\": \"{{ProductId1}}\",\n    \"quantity\": 1,\n    \"price\": {{ProductPrice1}},\n    \"comment\": \"test_xapi\"\n      }\n}"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change isBuyable=false",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{xapi_code}}\",\r\n    \"name\": \"{{Nameofproduct}}\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"isBuyable\": false,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 1,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n    \"modifiedDate\": \"2001-01-01T00:00:00Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{ProductId1}}\",\r\n     \"reviews\": []     \r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check cart after changed isBuyable=false",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"\r",
													" pm.test(\"C318104 Check validationErrors.errorMessage\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.cart.validationErrors[0].errorMessage).to.equal(\"The product is not longer available for purchase\");\r",
													"    pm.expect(jsonData.data.cart.validationErrors[0].errorCode).to.equal(\"CART_PRODUCT_UNAVAILABLE\");\r",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query cart ($storeId: String!, $userId: String, $currencyCode: String!, $cultureName: String, $cartName: String) {\r\n    cart (storeId: $storeId, userId: $userId, currencyCode: $currencyCode, cultureName: $cultureName, cartName: $cartName) {\r\n        id\r\n        customerId\r\n        items {\r\n          validationErrors {\r\n            errorCode\r\n            errorMessage\r\n          }\r\n          id\r\n          name\r\n          quantity\r\n          product {\r\n            name\r\n          }\r\n        }\r\n        validationErrors (ruleSet: \"items\") {\r\n          errorCode\r\n          errorMessage\r\n        }\r\n    }\r\n}",
												"variables": "{\r\n        \"storeId\": \"{{storeId}}\",\r\n        \"userId\": \"{{userId1}}\",\r\n        \"currencyCode\": \"{{currencyCode}}\",\r\n        \"cultureName\": \"{{cultureName}}\"\r\n  }"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change isBuyable=true",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{xapi_code}}\",\r\n    \"name\": \"{{Nameofproduct}}\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"isBuyable\": true,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 1,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n      \"modifiedDate\": \"2001-01-01T00:00:00Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"{{ProductId1}}\",\r\n     \"reviews\": []     \r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change stock qty=0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Add stock qty to the product Default\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.inStockQuantity).to.eql(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"fulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"fulfillmentCenterName\":\"{{DefaultFFCName}}\",\r\n   \"fulfillmentCenter\":{\r\n      \"name\":\"{{DefaultFFCName}}\",\r\n      \"description\":\"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n      \"address\":{\r\n         \"addressType\":0,\r\n         \"countryCode\":\"USA\",\r\n         \"countryName\":\"United States\",\r\n         \"city\":\"Chicago\",\r\n         \"postalCode\":\"60640\",\r\n         \"line1\":\"5400 N. Lakewood Avenue\",\r\n         \"regionName\":\"Illinois\",\r\n         \"phone\":\"(312) 222-3333\",\r\n         \"isDefault\":false\r\n      },\r\n      \"createdDate\":\"2018-05-05T05:55:00.64Z\",\r\n      \"modifiedDate\":\"2021-11-18T11:54:44.6718532Z\",\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\"\r\n   },\r\n   \"productId\":\"{{ProductId1}}\",\r\n   \"inStockQuantity\":0,\r\n   \"reservedQuantity\":0,\r\n   \"reorderMinQuantity\":0,\r\n   \"preorderQuantity\":0,\r\n   \"backorderQuantity\":0,\r\n   \"allowBackorder\":false,\r\n   \"allowPreorder\":false,\r\n   \"inTransit\":0,\r\n   \"status\":\"Disabled\",\r\n   \"createdDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"modifiedDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"inventory",
												"products",
												"{{ProductId1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check cart after change stock qty=0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"\r",
													" pm.test(\"C328957 Check validationErrors.errorMessage\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.cart.validationErrors[0].errorMessage).to.equal(\"The product available qty is changed\");\r",
													"    pm.expect(jsonData.data.cart.validationErrors[0].errorCode).to.equal(\"PRODUCT_QTY_CHANGED\");\r",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query cart ($storeId: String!, $userId: String, $currencyCode: String!, $cultureName: String, $cartName: String) {\r\n    cart (storeId: $storeId, userId: $userId, currencyCode: $currencyCode, cultureName: $cultureName, cartName: $cartName) {\r\n        id\r\n        customerId\r\n        items {\r\n          validationErrors {\r\n            errorCode\r\n            errorMessage\r\n          }\r\n          id\r\n          name\r\n          quantity\r\n          product {\r\n            name\r\n          }\r\n        }\r\n        validationErrors (ruleSet: \"items\") {\r\n          errorCode\r\n          errorMessage\r\n        }\r\n    }\r\n}",
												"variables": "{\r\n        \"storeId\": \"{{storeId}}\",\r\n        \"userId\": \"{{userId1}}\",\r\n        \"currencyCode\": \"{{currencyCode}}\",\r\n        \"cultureName\": \"{{cultureName}}\"\r\n  }"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "ids",
													"value": "{{ProductId1}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404 not found\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/catalog/products/{{ProductId1}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"catalog",
												"products",
												"{{ProductId1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check cart after delete the product",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check validationErrors.errorCode\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.cart.validationErrors[0].errorCode).to.equal(\"CART_PRODUCT_UNAVAILABLE\");\r",
													"   });\r",
													"\r",
													" pm.test(\"Check validationErrors.errorMessage\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.cart.validationErrors[0].errorMessage).to.equal(\"The product is not longer available for purchase\");\r",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query cart ($storeId: String!, $userId: String, $currencyCode: String!, $cultureName: String, $cartName: String) {\r\n    cart (storeId: $storeId, userId: $userId, currencyCode: $currencyCode, cultureName: $cultureName, cartName: $cartName) {\r\n        id\r\n        customerId\r\n        items {\r\n          validationErrors {\r\n            errorCode\r\n            errorMessage\r\n          }\r\n          id\r\n          name\r\n          quantity\r\n          product {\r\n            name\r\n          }\r\n        }\r\n        validationErrors (ruleSet: \"items\") {\r\n          errorCode\r\n          errorMessage\r\n        }\r\n    }\r\n}",
												"variables": "{\r\n        \"storeId\": \"{{storeId}}\",\r\n        \"userId\": \"{{userId1}}\",\r\n        \"currencyCode\": \"{{currencyCode}}\",\r\n        \"cultureName\": \"{{cultureName}}\"\r\n  }"
											}
										},
										"url": {
											"raw": "{{url}}/graphql",
											"host": [
												"{{url}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{AdminToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "FFC [ID]",
							"item": [
								{
									"name": "Check FFC",
									"item": [
										{
											"name": "Prepare",
											"item": [
												{
													"name": "Add default and available",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"Electronics\",\r\n   \"storeState\":\"Open\",\r\n   \"country\":\"USA\",\r\n   \"defaultLanguage\":\"en-US\",\r\n   \"defaultCurrency\":\"USD\",\r\n   \"catalog\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"creditCardSavePolicy\":false,\r\n   \"url\":\"https://vcplatform-storefront.qa.govirto.com\",\r\n   \"secureUrl\":\"\",\r\n   \"email\":\"noreply@mail.com\",\r\n   \"displayOutOfStock\":false,\r\n   \"mainFulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"additionalFulfillmentCenterIds\":[\r\n      \"{{AvaibleFFCId}}\"\r\n   ],\r\n   \"mainReturnsFulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"returnsFulfillmentCenterIds\":[\r\n      \"{{AvaibleFFCId}}\"\r\n   ],\r\n   \"languages\":[\r\n      \"de-DE\",\r\n      \"fr-FR\",\r\n      \"en-US\"\r\n   ],\r\n   \"currencies\":[\r\n      \"XPT\",\r\n      \"EUR\",\r\n      \"USD\"\r\n   ],\r\n   \"trustedGroups\":[\r\n      \"Clothing\"\r\n   ],\r\n   \"seoObjectType\":\"Store\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"semanticUrl\":\"Electronique\",\r\n         \"pageTitle\":\"Electronique\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"fr-FR\",\r\n         \"id\":\"15b0752d92cb47b69001f31b10127514\"\r\n      },\r\n      {\r\n         \"semanticUrl\":\"Electronics\",\r\n         \"pageTitle\":\"Electronics\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\",\r\n         \"id\":\"27546a48097b4e59900da9a4f5a17ac8\"\r\n      },\r\n      {\r\n         \"semanticUrl\":\"Electronics\",\r\n         \"pageTitle\":\"Electronics\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"de-DE\",\r\n         \"id\":\"cfecfc3f5ce5486eaaf52886da7c957c\"\r\n      }\r\n   ],\r\n   \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n   \"dynamicProperties\":[\r\n      {\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"Electronics\",\r\n               \"value\":\"\",\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"Default_Theme_Name_Property\",\r\n               \"propertyName\":\"DefaultThemeName\"\r\n            }\r\n         ],\r\n         \"name\":\"DefaultThemeName\",\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"valueType\":\"Undefined\",\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"Default_Theme_Name_Property\"\r\n      },\r\n      {\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"Electronics\",\r\n               \"value\":\"{\\n  \\\"Attributes\\\": [\\n    {\\n      \\\"Key\\\": \\\"Brand\\\",\\n      \\\"FacetSize\\\": null,\\n      \\\"Order\\\": 0,\\n      \\\"Values\\\": [\\n        {\\n          \\\"Id\\\": \\\"3DR\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Apple\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Asus\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Beats By Dr Dre\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"BLU\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"DJI\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"E-flite\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"HTC\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"LG\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Microsoft\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Onkyo\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Panasonic\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Parrot\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Powerbeats\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Samsung\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Sony\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"SunBriteTV\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Teac\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Vizio\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Walkera\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"xFold\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"Key\\\": \\\"Color\\\",\\n      \\\"FacetSize\\\": null,\\n      \\\"Order\\\": 1,\\n      \\\"Values\\\": [\\n        {\\n          \\\"Id\\\": \\\"Black\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Bronze\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Camo green\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Gold\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Gold Platinum\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Gray\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Green\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Red\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Ruby red\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Sheer Gold\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Silver\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Space Gray\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Titanium grey\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"White\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"White Pearl\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"Key\\\": \\\"Display size\\\",\\n      \\\"FacetSize\\\": null,\\n      \\\"Order\\\": 2,\\n      \\\"Values\\\": null\\n    }\\n  ],\\n  \\\"AttributeRanges\\\": [],\\n  \\\"Prices\\\": [\\n    {\\n      \\\"Key\\\": \\\"price\\\",\\n      \\\"Currency\\\": \\\"USD\\\",\\n      \\\"Order\\\": 3,\\n      \\\"Values\\\": [\\n        {\\n          \\\"Id\\\": \\\"under-100\\\",\\n          \\\"Lower\\\": null,\\n          \\\"Upper\\\": \\\"100\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"100-200\\\",\\n          \\\"Lower\\\": \\\"100\\\",\\n          \\\"Upper\\\": \\\"200\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"200-600\\\",\\n          \\\"Lower\\\": \\\"200\\\",\\n          \\\"Upper\\\": \\\"600\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"600-1000\\\",\\n          \\\"Lower\\\": \\\"600\\\",\\n          \\\"Upper\\\": \\\"1000\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"over-1000\\\",\\n          \\\"Lower\\\": \\\"1000\\\",\\n          \\\"Upper\\\": null,\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        }\\n      ]\\n    },\\n    {\\n      \\\"Key\\\": \\\"price\\\",\\n      \\\"Currency\\\": \\\"EUR\\\",\\n      \\\"Order\\\": 4,\\n      \\\"Values\\\": [\\n        {\\n          \\\"Id\\\": \\\"under-100\\\",\\n          \\\"Lower\\\": null,\\n          \\\"Upper\\\": \\\"100\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"100-200\\\",\\n          \\\"Lower\\\": \\\"100\\\",\\n          \\\"Upper\\\": \\\"200\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"200-600\\\",\\n          \\\"Lower\\\": \\\"200\\\",\\n          \\\"Upper\\\": \\\"600\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"600-1000\\\",\\n          \\\"Lower\\\": \\\"600\\\",\\n          \\\"Upper\\\": \\\"1000\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"over-1000\\\",\\n          \\\"Lower\\\": \\\"1000\\\",\\n          \\\"Upper\\\": null,\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        }\\n      ]\\n    },\\n    {\\n      \\\"Key\\\": \\\"price\\\",\\n      \\\"Currency\\\": \\\"XPT\\\",\\n      \\\"Order\\\": 5,\\n      \\\"Values\\\": []\\n    }\\n  ]\\n}\",\r\n               \"valueType\":\"LongText\",\r\n               \"propertyId\":\"VirtoCommerce.Catalog_FilteredBrowsing_Property\",\r\n               \"propertyName\":\"FilteredBrowsing\"\r\n            }\r\n         ],\r\n         \"name\":\"FilteredBrowsing\",\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"valueType\":\"Undefined\",\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"VirtoCommerce.Catalog_FilteredBrowsing_Property\"\r\n      }\r\n   ],\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.TaxCalculationEnabled\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.AllowAnonymousUsers\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.IsSpa\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.EmailVerificationEnabled\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.EnablePriceRoundingForTotalsCalculation\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|SEO\",\r\n         \"name\":\"Stores.SeoLinksType\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            \"None\",\r\n            \"Short\",\r\n            \"Collapsed\",\r\n            \"Long\"\r\n         ],\r\n         \"defaultValue\":\"Collapsed\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders|Orders\",\r\n         \"name\":\"Order.CustomerOrderNewNumberTemplate\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n\r\n\r\n\r\n\r\n\r\n\r\n   ],\r\n   \"typeName\":\"Store\",\r\n   \"createdDate\":\"2015-10-06T22:39:51.553Z\",\r\n   \"modifiedDate\":\"2021-11-29T10:45:34.43732Z\",\r\n   \"createdBy\":\"unknown\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"Electronics\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/stores",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"stores"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create product_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set ProductId1\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
																	"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
																	"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create product_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set ProductId2\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.collectionVariables.set(\"ProductId2\", jsonData.id);\r",
																	"pm.collectionVariables.set(\"Nameofproduct2\", jsonData.name);\r",
																	"pm.collectionVariables.set(\"Code2\", jsonData.code);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"DDR-234304561\",\r\n    \"name\": \"Product2\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create product_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set ProductId3\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.collectionVariables.set(\"ProductId3\", jsonData.id);\r",
																	"pm.collectionVariables.set(\"Nameofproduct3\", jsonData.name);\r",
																	"pm.collectionVariables.set(\"Code3\", jsonData.code);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"DDR-234304562\",\r\n    \"name\": \"Product3\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add price to the product_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/products/{{ProductId1}}/prices",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"products",
																"{{ProductId1}}",
																"prices"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add price to the product_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"productId\": \"{{ProductId2}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code2}}\",\r\n    \"name\": \"Product2\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 100,\r\n    \"minQuantity\": 1,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId2}}\",\r\n      \"list\": {{ProductPrice2}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/products/{{ProductId2}}/prices",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"products",
																"{{ProductId2}}",
																"prices"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add price to the product_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"productId\": \"{{ProductId3}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code3}}\",\r\n    \"name\": \"Product3\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product3\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product3\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product3\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId3}}\",\r\n      \"list\": {{ProductPrice3}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/products/{{ProductId3}}/prices",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"products",
																"{{ProductId3}}",
																"prices"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add stock qty to the product_1 - available",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add stock qty to the product 1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.inStockQuantity).to.eql(132);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"fulfillmentCenterId\":\"{{AvaibleFFCId}}\",\r\n   \"fulfillmentCenterName\":\"{{AvailableFFCName}}\",\r\n   \"fulfillmentCenter\":{\r\n      \"name\":\"{{AvailableFFCName}}\",\r\n      \"description\":\"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n      \"address\":{\r\n         \"addressType\":0,\r\n         \"countryCode\":\"USA\",\r\n         \"countryName\":\"United States\",\r\n         \"city\":\"Chicago\",\r\n         \"postalCode\":\"60640\",\r\n         \"line1\":\"5400 N. Lakewood Avenue\",\r\n         \"regionName\":\"Illinois\",\r\n         \"phone\":\"(312) 222-3333\",\r\n         \"isDefault\":false\r\n      },\r\n      \"createdDate\":\"2018-05-05T05:55:00.64Z\",\r\n      \"modifiedDate\":\"2021-11-18T11:54:44.6718532Z\",\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\"\r\n   },\r\n   \"productId\":\"{{ProductId1}}\",\r\n   \"inStockQuantity\":132,\r\n   \"reservedQuantity\":0,\r\n   \"reorderMinQuantity\":0,\r\n   \"preorderQuantity\":0,\r\n   \"backorderQuantity\":0,\r\n   \"allowBackorder\":false,\r\n   \"allowPreorder\":false,\r\n   \"inTransit\":0,\r\n   \"status\":\"Disabled\",\r\n   \"createdDate\":\"0001-01-01T00:00:00Z\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"products",
																"{{ProductId1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add stock qty to the product_2 - default",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add stock qty to the product 2\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.inStockQuantity).to.eql(132);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"fulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"fulfillmentCenterName\":\"{{DefaultFFCName}}\",\r\n   \"fulfillmentCenter\":{\r\n      \"name\":\"{{DefaultFFCName}}\",\r\n      \"description\":\"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n      \"address\":{\r\n         \"addressType\":0,\r\n         \"countryCode\":\"USA\",\r\n         \"countryName\":\"United States\",\r\n         \"city\":\"Chicago\",\r\n         \"postalCode\":\"60640\",\r\n         \"line1\":\"5400 N. Lakewood Avenue\",\r\n         \"regionName\":\"Illinois\",\r\n         \"phone\":\"(312) 222-3333\",\r\n         \"isDefault\":false\r\n      },\r\n      \"createdDate\":\"2018-05-05T05:55:00.64Z\",\r\n      \"modifiedDate\":\"2021-11-18T11:54:44.6718532Z\",\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\"\r\n   },\r\n   \"productId\":\"{{ProductId2}}\",\r\n   \"inStockQuantity\":132,\r\n   \"reservedQuantity\":0,\r\n   \"reorderMinQuantity\":0,\r\n   \"preorderQuantity\":0,\r\n   \"backorderQuantity\":0,\r\n   \"allowBackorder\":false,\r\n   \"allowPreorder\":false,\r\n   \"inTransit\":0,\r\n   \"status\":\"Disabled\",\r\n   \"createdDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"modifiedDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/products/{{ProductId2}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"products",
																"{{ProductId2}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add stock qty to the product_3 - default",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add stock qty to the product 2\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.inStockQuantity).to.eql(132);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"fulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"fulfillmentCenterName\":\"{{DefaultFFCName}}\",\r\n   \"fulfillmentCenter\":{\r\n      \"name\":\"{{DefaultFFCName}}\",\r\n      \"description\":\"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n      \"address\":{\r\n         \"addressType\":0,\r\n         \"countryCode\":\"USA\",\r\n         \"countryName\":\"United States\",\r\n         \"city\":\"Chicago\",\r\n         \"postalCode\":\"60640\",\r\n         \"line1\":\"5400 N. Lakewood Avenue\",\r\n         \"regionName\":\"Illinois\",\r\n         \"phone\":\"(312) 222-3333\",\r\n         \"isDefault\":false\r\n      },\r\n      \"createdDate\":\"2018-05-05T05:55:00.64Z\",\r\n      \"modifiedDate\":\"2021-11-18T11:54:44.6718532Z\",\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\"\r\n   },\r\n   \"productId\":\"{{ProductId3}}\",\r\n   \"inStockQuantity\":132,\r\n   \"reservedQuantity\":0,\r\n   \"reorderMinQuantity\":0,\r\n   \"preorderQuantity\":0,\r\n   \"backorderQuantity\":0,\r\n   \"allowBackorder\":false,\r\n   \"allowPreorder\":false,\r\n   \"inTransit\":0,\r\n   \"status\":\"Disabled\",\r\n   \"createdDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"modifiedDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/products/{{ProductId3}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"products",
																"{{ProductId3}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index products",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check Index\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId2}}\", \"{{ProductId1}}\",\"{{ProductId3}}\"\r\n        ]\r\n    }\r\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "FFC",
											"item": [
												{
													"name": "Get Cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set cartId1, userId3\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
																	"    pm.collectionVariables.set(\"userId3\", jsonData.data.cart.customerId);\r",
																	"});\r",
																	"pm.test(\"Check cart by user ID\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart).to.not.eql(null);\r",
																	"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
																	"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Clear Cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"clearCart\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId3}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Checking that default FFC returns (add Items)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C292115 Checking that default FFC returns\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.addItemsCart.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
																	"pm.expect(jsonData.data.addItemsCart.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
																	";\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n    \r\n         items {\r\n      name\r\n      fulfillmentCenterId\r\n      fulfillmentCenterName\r\n    }\r\n        \r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId3}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [\r\n   \r\n    {\r\n        \"productId\": \"{{ProductId2}}\",\r\n        \"quantity\": 3\r\n    }\r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check min and max quantity",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Checking minQuantity = 1 and maxQuantity = 100\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.product.minQuantity).to.be.equal(0);\r",
																	"      pm.expect(jsonData.data.product.maxQuantity).to.be.equal(1000);\r",
																	"\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 3000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query product($id: String!, $storeId: String!, $userId: String, $currencyCode: String, $cultureName: String) {\r\n    product (id: $id, storeId: $storeId, userId: $userId, currencyCode: $currencyCode, cultureName: $cultureName) {\r\n      minQuantity\r\n      maxQuantity\r\n    }\r\n}\r\n\r\n\r\n",
																"variables": "{\r\n   \"id\": \"{{ProductId1}}\",\r\n   \"storeId\": \"{{storeId}}\",\r\n  \"currencyCode\": \"{{currencyCode}}\",\r\n  \"cultureName\": \"{{cultureName}}\"\r\n  }\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get fulfillment center of products - default",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C291224 Get fulfillment center of products - Default\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.cart.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
																	"    pm.expect(jsonData.data.cart.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
																	"\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId3}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{ items{\r\n      product{\r\n        name\r\n      }\r\n      fulfillmentCenterId\r\n      fulfillmentCenterName\r\n    }\r\n  }\r\n\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create order from cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"CreateOrderFromCart\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"orderId1\", json.data.createOrderFromCart.id);\r",
																	"    pm.expect(json.data.createOrderFromCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C292120 Check that default FFC returns while order creation\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.createOrderFromCart.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
																	"    pm.expect(jsonData.data.createOrderFromCart.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\ncreateOrderFromCart (command: $command) {\nid\nitems{\nid\nname\nquantity\nfulfillmentCenterId\nfulfillmentCenterName\n}\n}\n}",
																"variables": "{\n\"command\": {\n    \"cartId\": \"{{cartId1}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C291227 Get fulfillment center of products - Default (checkOrder)\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.order.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
																	"    pm.expect(jsonData.data.order.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n\r\nitems{\r\nid\r\nname\r\nquantity\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\n}\r\n   \r\n  \r\n  }\r\n}\r\n",
																"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set cartId1, userId3\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
																	"    pm.collectionVariables.set(\"userId3\", jsonData.data.cart.customerId);\r",
																	"});\r",
																	"pm.test(\"Check cart by user ID\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart).to.not.eql(null);\r",
																	"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
																	"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Clear cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"clearCart\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId3}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Checking that available FFC returns (add items)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"C292118 Checking that available FFC returns\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.addItemsCart.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
																	"    pm.expect(jsonData.data.addItemsCart.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n    \r\n         items {\r\n      name\r\n      fulfillmentCenterId\r\n      fulfillmentCenterName\r\n    }\r\n        \r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId3}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [\r\n   \r\n    {\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 3\r\n    }\r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get fulfillment center of products - available",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C291226 Get fulfillment center of products - Available\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.cart.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
																	"    pm.expect(jsonData.data.cart.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
																	"\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId3}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{ items{\r\n      product{\r\n        name\r\n      }\r\n      fulfillmentCenterId\r\n      fulfillmentCenterName\r\n    }\r\n  }\r\n\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create order from cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"CreateOrderFromCart\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"orderId1\", json.data.createOrderFromCart.id);\r",
																	"    pm.expect(json.data.createOrderFromCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});\r",
																	"pm.test(\"C292121 Check that available FFC returns while order creation\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.createOrderFromCart.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
																	"    pm.expect(jsonData.data.createOrderFromCart.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
																	"\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\ncreateOrderFromCart (command: $command) {\nid\nitems{\nid\nname\nquantity\nfulfillmentCenterId\nfulfillmentCenterName\n}\n}\n}",
																"variables": "{\n\"command\": {\n    \"cartId\": \"{{cartId1}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C291228 Get fulfillment center of products - Available (checkOrder)\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.order.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
																	"    pm.expect(jsonData.data.order.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n\r\nitems{\r\nid\r\nname\r\nquantity\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\n}\r\n   \r\n  \r\n  }\r\n}\r\n",
																"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set cartId1, userId3\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
																	"    pm.collectionVariables.set(\"userId3\", jsonData.data.cart.customerId);\r",
																	"});\r",
																	"pm.test(\"Check cart by user ID\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart).to.not.eql(null);\r",
																	"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
																	"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Clear cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"clearCart\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId3}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Checking that both default and available FFC returned (Add  item)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C292119 Available&Default in cart\", function () {\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n    \r\n         items {\r\n      name\r\n      fulfillmentCenterId\r\n      fulfillmentCenterName\r\n    }\r\n        \r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId3}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [\r\n   \r\n    {\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 3\r\n    },\r\n        {\r\n        \"productId\": \"{{ProductId3}}\",\r\n        \"quantity\": 3\r\n    }\r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get filfillment center of product - default and available",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C291376 Available&Default in cart (Get fulfillment center of product)\", function () {\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId3}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{ items{\r\n      product{\r\n        name\r\n      }\r\n      fulfillmentCenterId\r\n      fulfillmentCenterName\r\n    }\r\n  }\r\n\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create order from cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"CreateOrderFromCart\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"orderId1\", json.data.createOrderFromCart.id);\r",
																	"    pm.expect(json.data.createOrderFromCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"pm.test(\"C292123 Check that both default and available returned while order creation \", function () {\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
																	"});\r",
																	"    \r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\ncreateOrderFromCart (command: $command) {\nid\nitems{\nid\nname\nquantity\nfulfillmentCenterId\nfulfillmentCenterName\n}\n}\n}",
																"variables": "{\n\"command\": {\n    \"cartId\": \"{{cartId1}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C291375 Available&Default in cart (CheckOrder)\", function () {\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n\r\nitems{\r\nid\r\nname\r\nquantity\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\n}\r\n   \r\n  \r\n  }\r\n}\r\n",
																"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Clear all",
											"item": [
												{
													"name": "Delete product_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{ProductId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete product_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products?ids={{ProductId2}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{ProductId2}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete product_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products?ids={{ProductId3}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{ProductId3}}"
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "FFC queries",
									"item": [
										{
											"name": "Preparation",
											"item": [
												{
													"name": "Add FFC_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set variables\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"ffcId1\", jsonData.id);\r",
																	"    pm.collectionVariables.set(\"ffcName1\", jsonData.name);\r",
																	"    pm.collectionVariables.set(\"ffcDescription1\", jsonData.description);\r",
																	"    pm.collectionVariables.set(\"ffcShortDescription1\", jsonData.shortDescription);\r",
																	"    pm.collectionVariables.set(\"ffcGeoLocation1\", jsonData.geoLocation);\r",
																	"    pm.collectionVariables.set(\"ffcCity1\", jsonData.address.city);\r",
																	"    \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"1xapi_FFC1\",\r\n   \"description\":\"{{$randomCompanyName}}\",\r\n   \"shortDescription\":\"{{$randomCompanyName}}\",\r\n   \"geoLocation\":\"53.514950,49.407574\",\r\n   \"address\":{\r\n      \"addressType\":0,\r\n      \"countryCode\":\"ALB\",\r\n      \"countryName\":\"Albania\",\r\n      \"city\":\"{{$randomCity}}\",\r\n      \"postalCode\":\"zip\",\r\n      \"line1\":\"line1\",\r\n      \"regionName\":\"111\",\r\n      \"phone\":\"phone\",\r\n      \"email\":\"email@dd.com\",\r\n      \"isDefault\":false\r\n   }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/fulfillmentcenters",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"fulfillmentcenters"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add FFC_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set id\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"ffcId2\", jsonData.id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"Axapi_FFC2\",\r\n   \"description\":\"Description\",\r\n   \"shortDescription\":\"Spb\",\r\n   \"geoLocation\":\"59.938630,30.314130\",\r\n   \"address\":{\r\n      \"addressType\":0,\r\n      \"countryCode\":\"ALB\",\r\n      \"countryName\":\"Albania\",\r\n      \"city\":\"city\",\r\n      \"postalCode\":\"zip\",\r\n      \"line1\":\"line1\",\r\n      \"regionName\":\"111\",\r\n      \"phone\":\"phone\",\r\n      \"email\":\"email@dd.com\",\r\n      \"isDefault\":false\r\n   }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/fulfillmentcenters",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"fulfillmentcenters"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add FFC_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set id\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"ffcId3\", jsonData.id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"axapi_FFC3\",\r\n   \"description\":\"Description\",\r\n   \"shortDescription\":\"Helsinki\",\r\n   \"geoLocation\":\"60.169811,24.938240\",\r\n   \"address\":{\r\n      \"addressType\":0,\r\n      \"countryCode\":\"ALB\",\r\n      \"countryName\":\"Albania\",\r\n      \"city\":\"city\",\r\n      \"postalCode\":\"zip\",\r\n      \"line1\":\"line1\",\r\n      \"regionName\":\"111\",\r\n      \"phone\":\"phone\",\r\n      \"email\":\"email@dd.com\",\r\n      \"isDefault\":false\r\n   }\r\n}\r\n\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/fulfillmentcenters",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"fulfillmentcenters"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add FFC_4",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set id\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"ffcId4\", jsonData.id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"Zxapi_FFC4\",\r\n   \"description\":\"Description\",\r\n   \"shortDescription\":\"Msc\",\r\n   \"geoLocation\":\"55.752220,37.615560\",\r\n   \"address\":{\r\n      \"addressType\":0,\r\n      \"countryCode\":\"ALB\",\r\n      \"countryName\":\"Albania\",\r\n      \"city\":\"city\",\r\n      \"postalCode\":\"zip\",\r\n      \"line1\":\"line1\",\r\n      \"regionName\":\"111\",\r\n      \"phone\":\"phone\",\r\n      \"email\":\"email@dd.com\",\r\n      \"isDefault\":false\r\n   }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/fulfillmentcenters",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"fulfillmentcenters"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add store",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"xapiStore\",\r\n   \"storeState\":\"Open\",\r\n   \"defaultLanguage\":\"fr-FR\",\r\n   \"defaultCurrency\":\"USD\",\r\n   \"catalog\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"creditCardSavePolicy\":false,\r\n   \"displayOutOfStock\":false,\r\n   \"mainFulfillmentCenterId\":\"{{ffcId1}}\",\r\n   \"additionalFulfillmentCenterIds\":[\r\n      \"{{ffcId2}}\",\"{{ffcId3}}\",\"{{ffcId4}}\"\r\n   ],\r\n   \"returnsFulfillmentCenterIds\":[\r\n      \r\n   ],\r\n   \"languages\":[\r\n      \"fr-FR\"\r\n   ],\r\n   \"currencies\":[\r\n      \"USD\"\r\n   ],\r\n   \"trustedGroups\":[\r\n      \r\n   ],\r\n   \"seoObjectType\":\"Store\",\r\n   \"seoInfos\":[\r\n      \r\n   ],\r\n   \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n   \"dynamicProperties\":[\r\n      \r\n   ],\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.TaxCalculationEnabled\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.AllowAnonymousUsers\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.IsSpa\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.EmailVerificationEnabled\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.EnablePriceRoundingForTotalsCalculation\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|SEO\",\r\n         \"name\":\"Stores.SeoLinksType\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            \"None\",\r\n            \"Short\",\r\n            \"Collapsed\",\r\n            \"Long\"\r\n         ],\r\n         \"defaultValue\":\"Collapsed\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Customer|Statuses\",\r\n         \"name\":\"Customer.OrganizationDefaultStatus\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Customer|Statuses\",\r\n         \"name\":\"Customer.ContactDefaultStatus\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders|Orders\",\r\n         \"name\":\"Order.CustomerOrderNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders|Orders\",\r\n         \"name\":\"Order.PaymentInNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"PI{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders|Orders\",\r\n         \"name\":\"Order.ShipmentNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"SH{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes|Quotes\",\r\n         \"name\":\"Quotes.QuoteRequestNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes|Quotes\",\r\n         \"name\":\"Quotes.EnableQuotes\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.EnableTracking\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleTagManagerId\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleAnalyticsTrackingId\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.CreateECommerceTransaction\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.ReverseECommerceTransaction\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Return\",\r\n         \"groupName\":\"Return|Return\",\r\n         \"name\":\"Return.ReturnNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions|Subscriptions\",\r\n         \"name\":\"Subscription.EnableSubscriptions\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions|Subscriptions\",\r\n         \"name\":\"Subscription.SubscriptionNewNumberTemplate\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabled\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabledForAnonymous\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|Product Reviews\",\r\n         \"name\":\"CustomerReviews.CanSubmitReviewWhenHasOrder\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"code\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews|General\",\r\n         \"name\":\"CustomerReviews.Calculation.Method\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            \"Average\",\r\n            \"Wilson\"\r\n         ],\r\n         \"defaultValue\":\"Average\",\r\n         \"isDictionary\":false\r\n      }\r\n   ],\r\n   \"typeName\":\"Store\",\r\n   \"id\":\"{{storeId1}}\",\r\n   \"additionalLanguages\":[\r\n      \r\n   ],\r\n   \"additionalCurrencies\":[\r\n      \r\n   ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/stores",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"stores"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "FFC",
											"item": [
												{
													"name": "Get FFC - information",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C343410 check FFC information\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"\r",
																	"    //Check information about main FFC\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.id).to.be.eql(pm.collectionVariables.get(\"ffcId1\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.geoLocation).to.be.eql(pm.collectionVariables.get(\"ffcGeoLocation1\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.shortDescription).to.be.eql(pm.collectionVariables.get(\"ffcShortDescription1\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.name).to.be.eql(pm.collectionVariables.get(\"ffcName1\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.description).to.be.eql(pm.collectionVariables.get(\"ffcDescription1\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.address.city).to.be.eql(pm.collectionVariables.get(\"ffcCity1\"));\r",
																	"\r",
																	"    //Check information about nearest\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.nearest[0].geoLocation).to.be.not.null;\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.nearest[0].shortDescription).to.be.not.null;\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.nearest[0].name).to.be.not.null;\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.nearest[0].description).to.be.not.null;\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.nearest[0].address).to.be.not.null;\r",
																	"\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenter ( $id: String! ) {\r\nfulfillmentCenter(id:$id ){\r\n\r\nid\r\n  geoLocation\r\n  shortDescription\r\n  name\r\n  description\r\n  outerId\r\n  address{\r\n    city\r\n    countryCode\r\n    countryName\r\n    regionName\r\n    line1\r\n    email\r\n    phone\r\n\r\n}\r\n\r\nnearest{\r\nid\r\n  geoLocation\r\n  shortDescription\r\n  name\r\n  description\r\n  outerId\r\n  address{\r\n    city\r\n    countryCode\r\n    countryName\r\n    regionName\r\n    line1\r\n    email\r\n    phone\r\n\r\n}\r\n  }\r\n}\r\n    }\r\n\r\n",
																"variables": "{\r\n  \"id\": \"{{ffcId1}}\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get FFC - not empty geoLocation",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343584 Check nearest sort\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.nearest[0].id).to.be.eql(pm.collectionVariables.get(\"ffcId4\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.nearest[1].id).to.be.eql(pm.collectionVariables.get(\"ffcId2\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenter.nearest[2].id).to.be.eql(pm.collectionVariables.get(\"ffcId3\"));\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenter ( $id: String! ) {\r\nfulfillmentCenter(id:$id ){\r\n\r\nid\r\nshortDescription\r\ngeoLocation\r\nname\r\nnearest {\r\n  id\r\n  shortDescription\r\n  geoLocation\r\n  name\r\n\r\n}\r\n}\r\n}\r\n",
																"variables": "{\r\n  \"id\": \"{{ffcId1}}\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get FFC - set nearest count",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343585 (take: 2) -> nearest.lenght == 2\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect((jsonData.data.fulfillmentCenter.nearest).length).to.be.eql(2);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenter ( $id: String! ) {\r\nfulfillmentCenter(id:$id ){\r\n\r\nid\r\nname\r\ndescription\r\ngeoLocation\r\n\r\n    nearest(take:2) {\r\n  id\r\n  name\r\n  geoLocation\r\n      nearest {\r\n         id\r\n         name\r\n         geoLocation\r\n      }\r\n\r\n}\r\n}\r\n}\r\n",
																"variables": "{\r\n  \"id\": \"{{ffcId1}}\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "FFCs",
											"item": [
												{
													"name": "Get FFCs - information",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343403 Status code is 200\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items).to.be.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenters {\r\nfulfillmentCenters{\r\n  totalCount\r\n  items{\r\n    id\r\n  geoLocation\r\n  shortDescription\r\n  name\r\n  description\r\n  outerId\r\n  address{\r\n    city\r\n    countryCode\r\n    countryName\r\n    regionName\r\n    line1\r\n    email\r\n    phone\r\n\r\n}\r\n    nearest{\r\n      id\r\n  geoLocation\r\n  shortDescription\r\n  name\r\n  description\r\n  outerId\r\n  address{\r\n    city\r\n    countryCode\r\n    countryName\r\n    regionName\r\n    line1\r\n    email\r\n    phone\r\n\r\n}\r\n    }\r\n\r\n}\r\n}\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get FFCs - set ids",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343402 Set ids, check  information\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"\r",
																	"\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.totalCount).to.be.eql(2);\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ffcId1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ffcId2\"));\r",
																	"\r",
																	"    //Check information about main FFC\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].geoLocation).to.be.eql(pm.collectionVariables.get(\"ffcGeoLocation1\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].shortDescription).to.be.eql(pm.collectionVariables.get(\"ffcShortDescription1\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].name).to.be.eql(pm.collectionVariables.get(\"ffcName1\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].description).to.be.eql(pm.collectionVariables.get(\"ffcDescription1\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].address.city).to.be.eql(pm.collectionVariables.get(\"ffcCity1\"));\r",
																	"\r",
																	"    //Check information about nearest\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].nearest[0].geoLocation).to.be.not.null;\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].nearest[0].shortDescription).to.be.not.null;\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].nearest[0].name).to.be.not.null;\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].nearest[0].description).to.be.not.null;\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].nearest[0].address).to.be.not.null;\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenters($fulfillmentCenterIds:[String]) {\r\nfulfillmentCenters(fulfillmentCenterIds:$fulfillmentCenterIds){\r\n  totalCount\r\n  items{\r\n    id\r\n    name\r\n    shortDescription\r\n    description\r\n    geoLocation\r\n    address{\r\n      city\r\n      countryName\r\n    }\r\n    nearest{\r\n      id\r\n    name\r\n    shortDescription\r\n    description\r\n    geoLocation\r\n    address{\r\n      city\r\n      countryName\r\n    }  \r\n    }\r\n\r\n}\r\n}\r\n}",
																"variables": "{\r\n\"fulfillmentCenterIds\": [\"{{ffcId1}}\", \"{{ffcId2}}\"]\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get FFCs - set storeId",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343572 Get FFCs of specified store and check qty\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ffcId1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ffcId2\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ffcId3\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ffcId4\"));\r",
																	"\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.totalCount).to.be.eql(4);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenters( $storeId: String ) {\r\nfulfillmentCenters(storeId: $storeId){\r\n  totalCount\r\n  items{\r\n    id\r\n    name\r\n    shortDescription\r\n    geoLocation\r\n    address{\r\n      city\r\n      countryName\r\n    }\r\n\r\n}\r\n}\r\n}\r\n",
																"variables": "{\r\n\"storeId\":\"{{storeId1}}\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get FFCs - not empty geoLocation",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343581 Check nearest sorted\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].nearest[0].id).to.be.eql(pm.collectionVariables.get(\"ffcId4\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].nearest[1].id).to.be.eql(pm.collectionVariables.get(\"ffcId2\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].nearest[2].id).to.be.eql(pm.collectionVariables.get(\"ffcId3\"));\r",
																	"\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[1].nearest[0].id).to.be.eql(pm.collectionVariables.get(\"ffcId3\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[1].nearest[1].id).to.be.eql(pm.collectionVariables.get(\"ffcId4\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[1].nearest[2].id).to.be.eql(pm.collectionVariables.get(\"ffcId1\"));\r",
																	"\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[2].nearest[0].id).to.be.eql(pm.collectionVariables.get(\"ffcId2\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[2].nearest[1].id).to.be.eql(pm.collectionVariables.get(\"ffcId4\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[2].nearest[2].id).to.be.eql(pm.collectionVariables.get(\"ffcId1\"));\r",
																	"\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[3].nearest[0].id).to.be.eql(pm.collectionVariables.get(\"ffcId2\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[3].nearest[1].id).to.be.eql(pm.collectionVariables.get(\"ffcId1\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[3].nearest[2].id).to.be.eql(pm.collectionVariables.get(\"ffcId3\"));\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenters($storeId:String, $sort:String){\r\nfulfillmentCenters(storeId:$storeId, sort:$sort){\r\ntotalCount\r\nitems{\r\nid\r\nshortDescription\r\ngeoLocation\r\nnearest {\r\n  id\r\n  geoLocation\r\n  shortDescription\r\n\r\n}\r\n}\r\n}\r\n}",
																"variables": "{\r\n    \"storeId\":\"{{storeId1}}\",\r\n    \"sort\": \"name:asc\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get FFCs - set nearest count",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343582 (take: 2) -> nearest.lenght == 2\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect((jsonData.data.fulfillmentCenters.items[0].nearest).length).to.be.eql(2);\r",
																	"    pm.expect((jsonData.data.fulfillmentCenters.items[1].nearest).length).to.be.eql(2);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenters{\r\nfulfillmentCenters{\r\n  totalCount\r\n  items{\r\n    id\r\n    name\r\n    description\r\n    shortDescription\r\n    geoLocation\r\n \r\n    nearest(take:2 ) {\r\n      id\r\n      name\r\n      description\r\n      shortDescription\r\n      geoLocation\r\n    }\r\n  }\r\n}\r\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get FFCs - sort asc",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343404 Sort by asc (name)\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].id).to.be.eql(pm.collectionVariables.get(\"ffcId1\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[1].id).to.be.eql(pm.collectionVariables.get(\"ffcId2\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[2].id).to.be.eql(pm.collectionVariables.get(\"ffcId3\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[3].id).to.be.eql(pm.collectionVariables.get(\"ffcId4\"));\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenters($sort:String, $storeId: String) {\r\nfulfillmentCenters(sort:$sort, storeId: $storeId ){\r\n  totalCount\r\n  items{\r\n    id\r\n    name\r\n\r\n}\r\n}\r\n}\r\n\r\n\r\n\r\n",
																"variables": "{\r\n\"sort\":\"name:asc\",\r\n\"storeId\":\"{{storeId1}}\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get FFCs - sort desc",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343405 sort by desc (name)\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[3].id).to.be.eql(pm.collectionVariables.get(\"ffcId1\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[2].id).to.be.eql(pm.collectionVariables.get(\"ffcId2\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[1].id).to.be.eql(pm.collectionVariables.get(\"ffcId3\"));\r",
																	"    pm.expect(jsonData.data.fulfillmentCenters.items[0].id).to.be.eql(pm.collectionVariables.get(\"ffcId4\"));\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenters($sort:String, $storeId: String) {\r\nfulfillmentCenters(sort:$sort, storeId: $storeId ){\r\n  totalCount\r\n  items{\r\n    id\r\n    name\r\n}\r\n}\r\n}\r\n\r\n\r\n\r\n",
																"variables": "{\r\n\"sort\":\"name:desc\",\r\n\"storeId\":\"{{storeId1}}\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get FFCs - first",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343406 First 2\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect((jsonData.data.fulfillmentCenters.items).length).to.be.eql(2);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenters($first:Int, $storeId:String) {\r\nfulfillmentCenters(first:$first, storeId: $storeId){\r\n  totalCount\r\n  items{\r\n    id\r\n    name\r\n\r\n\r\n}\r\n}\r\n}",
																"variables": "{\r\n\"first\":2,\r\n\"storeId\":\"{{storeId1}}\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get FFCs - after",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343407 After 1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect((jsonData.data.fulfillmentCenters.items).length).to.be.eql(3);\r",
																	"    pm.expect(pm.response.text()).to.not.include(pm.collectionVariables.get(\"ffcId1\"));\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenters( $after:String, $storeId:String, $sort:String,) {\r\nfulfillmentCenters(after:$after, storeId:$storeId, sort:$sort,){\r\n  totalCount\r\n  items{\r\n    id\r\n    name\r\n\r\n}\r\n}\r\n}\r\n\r\n\r\n",
																"variables": "{\r\n\"after\":\"1\",\r\n\"storeId\":\"{{storeId1}}\",\r\n\"sort\":\"name:asc\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get FFCs - query",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"C343725 Query\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect((jsonData.data.fulfillmentCenters.items).length).to.be.eql(4);\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ffcId1\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ffcId2\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ffcId3\"));\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"ffcId4\"));\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query fulfillmentCenters($query: String ) {\r\nfulfillmentCenters(query: $query ){\r\n  totalCount\r\n  items{\r\n    id\r\n    name\r\n    shortDescription\r\n    geoLocation\r\n    address{\r\n      city\r\n      countryName\r\n    }\r\n\r\n}\r\n}\r\n}\r\n",
																"variables": "{\r\n\"query\":\"xapi_FFC\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Clear all",
											"item": [
												{
													"name": "Delete FFC_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"xapi_FFC\",\r\n   \"description\":\"Description\",\r\n   \"shortDescription\":\"Short description\",\r\n   \"geoLocation\":\"60.186165, 24.790521\",\r\n   \"address\":{\r\n      \"addressType\":0,\r\n      \"countryCode\":\"ALB\",\r\n      \"countryName\":\"Albania\",\r\n      \"city\":\"city\",\r\n      \"postalCode\":\"zip\",\r\n      \"line1\":\"line1\",\r\n      \"regionName\":\"111\",\r\n      \"phone\":\"phone\",\r\n      \"email\":\"email@dd.com\",\r\n      \"isDefault\":false\r\n   }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/fulfillmentcenters?ids={{ffcId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"fulfillmentcenters"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{ffcId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete FFC_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"xapi_FFC\",\r\n   \"description\":\"Description\",\r\n   \"shortDescription\":\"Short description\",\r\n   \"geoLocation\":\"60.186165, 24.790521\",\r\n   \"address\":{\r\n      \"addressType\":0,\r\n      \"countryCode\":\"ALB\",\r\n      \"countryName\":\"Albania\",\r\n      \"city\":\"city\",\r\n      \"postalCode\":\"zip\",\r\n      \"line1\":\"line1\",\r\n      \"regionName\":\"111\",\r\n      \"phone\":\"phone\",\r\n      \"email\":\"email@dd.com\",\r\n      \"isDefault\":false\r\n   }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/fulfillmentcenters?ids={{ffcId2}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"fulfillmentcenters"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{ffcId2}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete FFC_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"xapi_FFC\",\r\n   \"description\":\"Description\",\r\n   \"shortDescription\":\"Short description\",\r\n   \"geoLocation\":\"60.186165, 24.790521\",\r\n   \"address\":{\r\n      \"addressType\":0,\r\n      \"countryCode\":\"ALB\",\r\n      \"countryName\":\"Albania\",\r\n      \"city\":\"city\",\r\n      \"postalCode\":\"zip\",\r\n      \"line1\":\"line1\",\r\n      \"regionName\":\"111\",\r\n      \"phone\":\"phone\",\r\n      \"email\":\"email@dd.com\",\r\n      \"isDefault\":false\r\n   }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/fulfillmentcenters?ids={{ffcId3}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"fulfillmentcenters"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{ffcId3}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete FFC_4",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"xapi_FFC\",\r\n   \"description\":\"Description\",\r\n   \"shortDescription\":\"Short description\",\r\n   \"geoLocation\":\"60.186165, 24.790521\",\r\n   \"address\":{\r\n      \"addressType\":0,\r\n      \"countryCode\":\"ALB\",\r\n      \"countryName\":\"Albania\",\r\n      \"city\":\"city\",\r\n      \"postalCode\":\"zip\",\r\n      \"line1\":\"line1\",\r\n      \"regionName\":\"111\",\r\n      \"phone\":\"phone\",\r\n      \"email\":\"email@dd.com\",\r\n      \"isDefault\":false\r\n   }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/fulfillmentcenters?ids={{ffcId4}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"fulfillmentcenters"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{ffcId4}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete store",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/stores?ids={{storeId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"stores"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{storeId1}}"
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{AdminToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "X-order",
					"item": [
						{
							"name": "GetToken [ID]",
							"item": [
								{
									"name": "GetAdminToken",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    \r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Set admin token\", function () {\r",
													"   \r",
													"    var jsonData = pm.response.json();\r",
													"    pm.collectionVariables.set(\"AdminToken\", jsonData.access_token);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "grand_type",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=password&scope=offline_access&username=admin&password=store",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{url}}/connect/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"connect",
												"token"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Order [ID]",
							"item": [
								{
									"name": "Add Products, Users, Orders",
									"item": [
										{
											"name": "Products",
											"item": [
												{
													"name": "Create product_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set ProductId1\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
																	"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
																	"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create product_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set ProductId2\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.collectionVariables.set(\"ProductId2\", jsonData.id);\r",
																	"pm.collectionVariables.set(\"Nameofproduct2\", jsonData.name);\r",
																	"pm.collectionVariables.set(\"Code2\", jsonData.code);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"DDR-234304561\",\r\n    \"name\": \"Product2\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create product_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set ProductId3\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"pm.collectionVariables.set(\"ProductId3\", jsonData.id);\r",
																	"pm.collectionVariables.set(\"Nameofproduct3\", jsonData.name);\r",
																	"pm.collectionVariables.set(\"Code3\", jsonData.code);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"DDR-234304562\",\r\n    \"name\": \"Product3\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add price to the product",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/products/{{ProductId1}}/prices",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"products",
																"{{ProductId1}}",
																"prices"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add price to the product 2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"productId\": \"{{ProductId2}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code2}}\",\r\n    \"name\": \"Product2\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId2}}\",\r\n      \"list\": {{ProductPrice2}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/products/{{ProductId2}}/prices",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"products",
																"{{ProductId2}}",
																"prices"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add price to the product 3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"productId\": \"{{ProductId3}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code3}}\",\r\n    \"name\": \"Product3\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product3\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product3\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product3\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId3}}\",\r\n      \"list\": {{ProductPrice3}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/products/{{ProductId3}}/prices",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"products",
																"{{ProductId3}}",
																"prices"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add stock qty to the product",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add stock qty to the product\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.inStockQuantity).to.eql(25);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"inStockQuantity\": 25,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"products",
																"{{ProductId1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add stock qty to the product 2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add stock qty to the product\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.inStockQuantity).to.eql(25);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId2}}\",\r\n  \"inStockQuantity\": 25,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/products/{{ProductId2}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"products",
																"{{ProductId2}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add stock qty to the product",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Add stock qty to the product\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.inStockQuantity).to.eql(25);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId3}}\",\r\n  \"inStockQuantity\": 25,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/inventory/products/{{ProductId3}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"inventory",
																"products",
																"{{ProductId3}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Create Users 1,2",
											"item": [
												{
													"name": "Сreate Contact_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "create user_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Create user\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.createUser.succeeded).to.equal(true);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createUser ($command: InputCreateUserType!) {\r\n    createUser (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n      \r\n    }\r\n}",
																"variables": "{\r\n\"command\": {\r\n\"applicationUser\": { \r\n\"id\":\"{{$randomUUID}}\",      \r\n\"createdBy\": \"AutoTestPostman\",\r\n\"email\": \"{{$randomEmail}}\",\r\n\"password\":\"{{Password}}\",\r\n\"userName\": \"{{userName1}}\",\r\n\"userType\": \"Customer\",\r\n\"storeId\":\"{{storeId}}\",\r\n\"memberId\":\"{{contactId1}}\"\r\n}\r\n}\r\n}\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Set сustomerId1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Set userId1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"userId1\", jsonData.data.contact.securityAccounts[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n  securityAccounts{\n      id\n      userName\n      \n  }\n  }\n    }\n",
																"variables": "{\n  \"id\": \"{{contactId1}}\"\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "getUserToken 1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    \r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set user token\", function () {\r",
																	"   \r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"Token1\", jsonData.access_token);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=password&scope=offline_access&username={{userName1}}&password={{Password}}",
															"options": {
																"raw": {
																	"language": "text"
																}
															}
														},
														"url": {
															"raw": "{{url}}/connect/token",
															"host": [
																"{{url}}"
															],
															"path": [
																"connect",
																"token"
															]
														}
													},
													"response": []
												},
												{
													"name": "Сreate Contact_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set contactId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"contactId2\", jsonData.data.createContact.id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																"variables": "{\n\"command\": {\n\"name\": \"Contact2\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact2\",\n\"firstName\": \"Contact2\",\n\"lastName\": \"Contact2\"\n}\n}\n\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "create user_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Create user\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.createUser.succeeded).to.equal(true);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createUser ($command: InputCreateUserType!) {\r\n    createUser (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n      \r\n    }\r\n}",
																"variables": "{\r\n\"command\": {\r\n\"applicationUser\": { \r\n\"id\":\"{{$randomUUID}}\",      \r\n\"createdBy\": \"AutoTestPostman\",\r\n\"email\": \"{{$randomEmail}}\",\r\n\"password\":\"{{Password}}\",\r\n\"userName\": \"{{userName2}}\",\r\n\"userType\": \"Customer\",\r\n\"storeId\":\"{{storeId}}\",\r\n\"memberId\":\"{{contactId2}}\"\r\n}\r\n}\r\n}\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Set сustomerId2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Set userId2\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"userId2\", jsonData.data.contact.securityAccounts[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n  securityAccounts{\n      id\n      userName\n      \n  }\n  }\n    }\n",
																"variables": "{\n  \"id\": \"{{contactId2}}\"\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "getUserToken 2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    \r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Set user token\", function () {\r",
																	"   \r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"Token2\", jsonData.access_token);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 1000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=password&scope=offline_access&username={{userName2}}&password={{Password}}",
															"options": {
																"raw": {
																	"language": "text"
																}
															}
														},
														"url": {
															"raw": "{{url}}/connect/token",
															"host": [
																"{{url}}"
															],
															"path": [
																"connect",
																"token"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Create Orders for User_2",
											"item": [
												{
													"name": "getUserCart_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set Cart\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId2\", jsonData.data.cart.id);\r",
																	"   \r",
																	"});\r",
																	"pm.test(\"Check cart by user ID\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart).to.not.eql(null);\r",
																	"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
																	"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId2}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\ncustomerName\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "add items",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check items\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.addItemsCart.items[0,1]).to.be.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity,\r\n        \r\n        }\r\n        \r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId2}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId2}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 1\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId2}}\",\r\n        \"quantity\": 5\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId3}}\",\r\n        \"quantity\": 3\r\n    }\r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "addOrUpdateCartAddress",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Check addOrUpdateCartAddress \", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress.id).to.be.not.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"    \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId2}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId2}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"Paris\",\n\"countryCode\": \"FR\",\n\"countryName\": \"France\",\n\"email\": \"{{$randomEmail}}\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "addOrUpdateCartShipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"AddOrUpdateShipment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"    \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId2}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId2}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"Paris\",\n\"countryCode\": \"FR\",\n\"countryName\": \"France\",\n\"email\": \"{{$randomEmail}}\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "addOrUpdateCartPayment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"AddOrUpdatePayment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
																	" \r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId2}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId2}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"Paris\",\n\"countryCode\": \"FR\",\n\"countryName\": \"France\",\n\"email\": \"{{$randomEmail}}\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create order_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Create order_1\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"orderId4\", json.data.createOrderFromCart.id);\r",
																	"    pm.expect(json.data.createOrderFromCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\r\ncreateOrderFromCart (command: $command) {\r\nid\r\nitems{\r\nid\r\nname\r\nquantity\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\n}\r\ntotal{\r\namount\r\n}\r\ndiscountTotal{\r\namount\r\n}\r\ntaxTotal{\r\namount\r\n}\r\ntotal{\r\namount\r\n}\r\n}\r\n}",
																"variables": "{\r\n\"command\": {\r\n    \"cartId\": \"{{cartId2}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "removeCart_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RemoveCart\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.removeCart).to.be.equal(true);\r",
																	"    pm.expect(data.error).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCart ($command: InputRemoveCartType!) {\n    removeCart (command: $command)\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId2}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "getUserCart_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set cartId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId2\", jsonData.data.cart.id);\r",
																	"   \r",
																	"});\r",
																	"pm.test(\"Check cart by user ID\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart).to.not.eql(null);\r",
																	"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
																	"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId2}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "add items",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check items\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.addItemsCart.items[0,1]).to.be.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity,\r\n        \r\n        }\r\n        \r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId2}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId2}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 1\r\n    },\r\n  \r\n    {\r\n        \"productId\": \"{{ProductId2}}\",\r\n        \"quantity\": 1\r\n    }\r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "addOrUpdateCartAddress",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Check addOrUpdateCartAddress \", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress.id).to.be.not.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"    \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId2}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId2}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"Paris\",\n\"countryCode\": \"FR\",\n\"countryName\": \"France\",\n\"email\": \"3333addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "addOrUpdateCartShipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"AddOrUpdateShipment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"   \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId2}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId2}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"Paris\",\n\"countryCode\": \"FR\",\n\"countryName\": \"France\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "addOrUpdateCartPayment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"AddOrUpdatePayment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
																	"    \r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId2}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId2}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"Paris\",\n\"countryCode\": \"FR\",\n\"countryName\": \"France\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create order_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Create order_2\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"orderId5\", json.data.createOrderFromCart.id);\r",
																	"    pm.expect(json.data.createOrderFromCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\r\ncreateOrderFromCart (command: $command) {\r\nid\r\nitems{\r\nid\r\nname\r\nquantity\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\n}\r\ntotal{\r\namount\r\n}\r\ndiscountTotal{\r\namount\r\n}\r\ntaxTotal{\r\namount\r\n}\r\ntotal{\r\namount\r\n}\r\n}\r\n}",
																"variables": "{\r\n\"command\": {\r\n    \"cartId\": \"{{cartId2}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "removeCart_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RemoveCart\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.removeCart).to.be.equal(true);\r",
																	"    pm.expect(data.error).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCart ($command: InputRemoveCartType!) {\n    removeCart (command: $command)\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId2}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "getUserCart_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set cartId\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId2\", jsonData.data.cart.id);\r",
																	"    });\r",
																	"pm.test(\"Check cart by user ID\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart).to.not.eql(null);\r",
																	"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
																	"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"pm.test(\"Check available payment method\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart.availablePaymentMethods).to.not.empty;\r",
																	"     pm.expect(data.errors).to.be.undefined;\r",
																	"});\r",
																	"pm.test(\"Check available shipment method\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.cart.availableShippingMethods).to.not.empty;\r",
																	" pm.expect(data.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId2}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "add items",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check items\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.addItemsCart.items[0,1]).to.be.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity,\r\n        \r\n        }\r\n        \r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId2}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId2}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 2\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId2}}\",\r\n        \"quantity\": 3\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId3}}\",\r\n        \"quantity\": 1\r\n    }\r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "addOrUpdateCartAddress",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Check addOrUpdateCartAddress \", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress.id).to.be.not.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"    \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId2}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId2}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"Paris\",\n\"countryCode\": \"FR\",\n\"countryName\": \"France\",\n\"email\": \"3333addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "addOrUpdateCartShipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"AddOrUpdateShipment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"    pm.collectionVariables.set(\"orderShipmentId\", jSonData.data.addOrUpdateCartShipment.shipments[0]);\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId2}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId2}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"Paris\",\n\"countryCode\": \"FR\",\n\"countryName\": \"France\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "addOrUpdateCartPayment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"AddOrUpdatePayment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
																	"    pm.collectionVariables.set(\"orderPaymentId\", jSonData.data.addOrUpdateCartPayment.payments[0]);\r",
																	"   \r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId2}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId2}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"Paris\",\n\"countryCode\": \"FR\",\n\"countryName\": \"France\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create order_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Create order_3\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"orderId6\", json.data.createOrderFromCart.id);\r",
																	"    pm.expect(json.data.createOrderFromCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\r\ncreateOrderFromCart (command: $command) {\r\nid\r\nitems{\r\nid\r\nname\r\nquantity\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\n}\r\ntotal{\r\namount\r\n}\r\ndiscountTotal{\r\namount\r\n}\r\ntaxTotal{\r\namount\r\n}\r\ntotal{\r\namount\r\n}\r\n}\r\n}",
																"variables": "{\r\n\"command\": {\r\n    \"cartId\": \"{{cartId2}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "removeCart_3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RemoveCart\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.removeCart).to.be.equal(true);\r",
																	"    pm.expect(data.error).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation removeCart ($command: InputRemoveCartType!) {\n    removeCart (command: $command)\n}",
																"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId2}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Set orderShipmentId, orderPaymentId,  lineItemId for orderId=6",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Get order by id\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.expect(data.data.order).to.not.eql(null);\r",
																	"    pm.expect(data.data.order).to.be.an(\"object\");\r",
																	"    pm.expect(data.data.order.id).to.be.a(\"string\");\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"\r",
																	"});\r",
																	"pm.test(\"Set orderShipmentId\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"orderShipmentId\", data.data.order.shipments[0].id);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Set orderPaymentId\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"orderPaymentId\",  data.data.order.inPayments[0].id);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Set lineItemId\", function () {\r",
																	"    var data = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"lineItemId\",  data.data.order.items[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query order($id: String, $cultureName: String) {\n  order(id: $id, cultureName: $cultureName) {\n    id\n    number\n     dynamicProperties {\n      name\n      value\n      valueType\n      dynamicProperty {\n        name\n        label\n        valueType\n      }\n      dictionaryItem {\n        label\n        name\n        id\n      }\n    }\n    items {\n      id\n      name\n      dynamicProperties {\n        dictionaryItem {\n          id\n          name\n          label\n        }\n        dynamicProperty {\n          valueType\n          id\n          label\n          name\n        }\n      }\n    }\n    shipments{\n        id\n    dynamicProperties {\n      name\n      value\n      valueType\n      dynamicProperty {\n        name\n        label\n        valueType\n      }\n      dictionaryItem {\n        label\n        name\n        id\n      }\n    }\n    }\n    inPayments{\n        id\n    dynamicProperties {\n      name\n      value\n      valueType\n      dynamicProperty {\n        name\n        label\n        valueType\n      }\n      dictionaryItem {\n        label\n        name\n        id\n      }\n    }\n    }\n  }\n}\n",
																"variables": "{\n  \"id\": \"{{orderId6}}\",\n  \"cultureName\": \"{{cultureName}}\"\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Index orders",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[{\"documentType\":\"CustomerOrder\",\"deleteExistingIndex\":true}]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/search/indexes/index",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"search",
																"indexes",
																"index"
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "Order Anonymous [ID]",
									"item": [
										{
											"name": "Get user order by orderId (without token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C327996 Get user order by orderId (without token)\", function () {\r",
															"   pm.expect(pm.response.text()).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 5000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query order($id: String, $cultureName: String) {\n  order(id: $id, cultureName: $cultureName) {\n    id\n    customerName\n    number\n     dynamicProperties {\n      name\n      value\n      valueType\n      dynamicProperty {\n        name\n        label\n        valueType\n      }\n      dictionaryItem {\n        label\n        name\n        id\n      }\n    }\n    items {\n      id\n      name\n      dynamicProperties {\n        dictionaryItem {\n          id\n          name\n          label\n        }\n        dynamicProperty {\n          valueType\n          id\n          label\n          name\n        }\n      }\n    }\n    shipments{\n        id\n    dynamicProperties {\n      name\n      value\n      valueType\n      dynamicProperty {\n        name\n        label\n        valueType\n      }\n      dictionaryItem {\n        label\n        name\n        id\n      }\n    }\n    }\n    inPayments{\n        id\n    dynamicProperties {\n      name\n      value\n      valueType\n      dynamicProperty {\n        name\n        label\n        valueType\n      }\n      dictionaryItem {\n        label\n        name\n        id\n      }\n    }\n    }\n  }\n}\n",
														"variables": "{\n  \"id\": \"{{orderId6}}\",\n  \"cultureName\": \"en-US\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get user's orders by user id (without token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C327997 Get user's orders by user id (without token)\", function () {\r",
															"     \r",
															"    pm.expect(pm.response.text()).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\r\n  orders(userId: \"{{userId2}}\") {\r\n      totalCount\r\n    items {\r\n      id\r\n      status\r\n      number\r\n      createdDate\r\n      modifiedDate\r\n      customerId\r\n      customerName\r\n      shipments {\r\n        id\r\n        status\r\n        shipmentMethodCode\r\n        shipmentMethodOption\r\n        total {\r\n          amount\r\n        }\r\n      }\r\n      addresses {\r\n        id\r\n        firstName\r\n        lastName\r\n        line1\r\n        countryName\r\n        countryCode\r\n        postalCode\r\n      }\r\n      total {\r\n        amount\r\n      }\r\n      subTotal {\r\n        amount\r\n      }\r\n      discountTotal {\r\n        amount\r\n      }\r\n    }\r\n  }\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get all user's orders (without token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C262084 Get all user's orders (without token)\", function () {\r",
															"  pm.expect(pm.response.text()).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\r\n  orders {\r\n    totalCount\r\n    items {\r\n      id\r\n      status\r\n      number\r\n      createdDate\r\n      modifiedDate\r\n      customerId\r\n      customerName\r\n      shipments {\r\n        id\r\n        status\r\n        shipmentMethodCode\r\n        shipmentMethodOption\r\n        total {\r\n          amount\r\n        }\r\n      }\r\n      addresses {\r\n        id\r\n        firstName\r\n        lastName\r\n        line1\r\n        countryName\r\n        countryCode\r\n        postalCode\r\n      }\r\n      total {\r\n        amount\r\n      }\r\n      subTotal {\r\n        amount\r\n      }\r\n      discountTotal {\r\n        amount\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "changePaymentStatus from New > Paid (without token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C327998 Change Payment Status from New > Paid (without token)\", function () {\r",
															"  pm.expect(pm.response.text()).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation processOrderPayment($command: InputProcessOrderPaymentType!) {\r\n  processOrderPayment(command: $command) {\r\n   newPaymentStatus\r\n    isSuccess\r\n    errorMessage\r\n  }\r\n}",
														"variables": "{\r\n\"command\": {\r\n\"orderId\": \"{{orderId6}}\",\r\n\"paymentId\": \"{{orderPaymentId}}\",\r\n   \"bankCardInfo\": {\r\n      \"bankCardNumber\": \"4242424242424242\",\r\n      \"bankCardType\": \"Visa\",\r\n      \"bankCardMonth\": 11,\r\n      \"bankCardYear\": 22,\r\n      \"bankCardCVV2\": \"111\",\r\n      \"cardholderName\": \"Name1 Name2\"\r\n    }\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "noauth"
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Order Admin [ID]",
									"item": [
										{
											"name": "Taxes on/off[ID]",
											"item": [
												{
													"name": "Switch off \"TaxCalculationEnabled\"",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"{{storeId}}\",\r\n   \"description\":null,\r\n   \"storeState\":\"Open\",\r\n   \"timeZone\":null,\r\n   \"country\":\"USA\",\r\n   \"region\":null,\r\n   \"defaultLanguage\":\"en-US\",\r\n   \"defaultCurrency\":\"USD\",\r\n   \"catalog\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"creditCardSavePolicy\":false,\r\n   \"url\":\"https://vcplatform-storefront.qa.govirto.com\",\r\n   \"secureUrl\":\"\",\r\n   \"email\":\"noreply@mail.com\",\r\n   \"adminEmail\":null,\r\n   \"emailName\":null,\r\n   \"adminEmailName\":null,\r\n   \"displayOutOfStock\":false,\r\n   \"outerId\":null,\r\n   \"mainFulfillmentCenterId\":\"vendor-fulfillment\",\r\n   \"additionalFulfillmentCenterIds\":[\r\n      \"142ba5568ae4454aad553ece41b9c3b5\"\r\n   ],\r\n   \"mainReturnsFulfillmentCenterId\":\"vendor-fulfillment\",\r\n   \"returnsFulfillmentCenterIds\":[\r\n      \"142ba5568ae4454aad553ece41b9c3b5\"\r\n   ],\r\n   \"languages\":[\r\n      \"en-US\",\r\n      \"fr-FR\",\r\n      \"de-DE\"\r\n   ],\r\n   \"currencies\":[\r\n      \"USD\",\r\n      \"XPT\",\r\n      \"EUR\"\r\n   ],\r\n   \"trustedGroups\":[\r\n      \"Clothing\"\r\n   ],\r\n   \"seoObjectType\":\"Store\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"name\":null,\r\n         \"semanticUrl\":\"Electronique\",\r\n         \"pageTitle\":\"Electronique\",\r\n         \"metaDescription\":null,\r\n         \"imageAltDescription\":null,\r\n         \"metaKeywords\":null,\r\n         \"storeId\":\"{{storeId}}\",\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"fr-FR\",\r\n         \"id\":\"15b0752d92cb47b69001f31b10127514\"\r\n      },\r\n      {\r\n         \"name\":null,\r\n         \"semanticUrl\":\"{{storeId}}\",\r\n         \"pageTitle\":\"{{storeId}}\",\r\n         \"metaDescription\":null,\r\n         \"imageAltDescription\":null,\r\n         \"metaKeywords\":null,\r\n         \"storeId\":\"{{storeId}}\",\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\",\r\n         \"id\":\"27546a48097b4e59900da9a4f5a17ac8\"\r\n      },\r\n      {\r\n         \"name\":null,\r\n         \"semanticUrl\":\"{{storeId}}\",\r\n         \"pageTitle\":\"{{storeId}}\",\r\n         \"metaDescription\":null,\r\n         \"imageAltDescription\":null,\r\n         \"metaKeywords\":null,\r\n         \"storeId\":\"{{storeId}}\",\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"de-DE\",\r\n         \"id\":\"cfecfc3f5ce5486eaaf52886da7c957c\"\r\n      }\r\n   ],\r\n   \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n   \"dynamicProperties\":[\r\n      {\r\n         \"objectId\":null,\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"{{storeId}}\",\r\n               \"locale\":null,\r\n               \"value\":\"22\",\r\n               \"valueId\":null,\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"6bd7d811-cf42-4934-b3aa-13e8615e2ebc\",\r\n               \"propertyName\":\"a2\"\r\n            }\r\n         ],\r\n         \"name\":\"a2\",\r\n         \"description\":null,\r\n         \"objectType\":null,\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"displayOrder\":null,\r\n         \"valueType\":\"Undefined\",\r\n         \"displayNames\":null,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"modifiedDate\":null,\r\n         \"createdBy\":null,\r\n         \"modifiedBy\":null,\r\n         \"id\":\"6bd7d811-cf42-4934-b3aa-13e8615e2ebc\"\r\n      },\r\n      {\r\n         \"objectId\":null,\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"{{storeId}}\",\r\n               \"locale\":null,\r\n               \"value\":\"22\",\r\n               \"valueId\":null,\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"3b45fa7a-da75-4249-aa19-47411d228a2e\",\r\n               \"propertyName\":\"a13\"\r\n            }\r\n         ],\r\n         \"name\":\"a13\",\r\n         \"description\":null,\r\n         \"objectType\":null,\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"displayOrder\":null,\r\n         \"valueType\":\"Undefined\",\r\n         \"displayNames\":null,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"modifiedDate\":null,\r\n         \"createdBy\":null,\r\n         \"modifiedBy\":null,\r\n         \"id\":\"3b45fa7a-da75-4249-aa19-47411d228a2e\"\r\n      },\r\n      {\r\n         \"objectId\":null,\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"{{storeId}}\",\r\n               \"locale\":null,\r\n               \"value\":\"\",\r\n               \"valueId\":null,\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"Default_Theme_Name_Property\",\r\n               \"propertyName\":\"DefaultThemeName\"\r\n            }\r\n         ],\r\n         \"name\":\"DefaultThemeName\",\r\n         \"description\":null,\r\n         \"objectType\":null,\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"displayOrder\":null,\r\n         \"valueType\":\"Undefined\",\r\n         \"displayNames\":null,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"modifiedDate\":null,\r\n         \"createdBy\":null,\r\n         \"modifiedBy\":null,\r\n         \"id\":\"Default_Theme_Name_Property\"\r\n      }\r\n   ],\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":false,\r\n         \"id\":\"b30ecd04-89a4-4284-ab8a-0dada0bcb019\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.TaxCalculationEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":false\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"dbeeebd3-c9e5-45b6-9ea8-fc59461e336f\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.AllowAnonymousUsers\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.IsSpa\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"e8629d31-9dcc-495b-a313-2c069552fd96\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.EmailVerificationEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"2435f940-03f0-44fc-9d65-6095b77ca5b0\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.EnablePriceRoundingForTotalsCalculation\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"Average\",\r\n         \"id\":\"82767a2f-7d41-450e-976f-e3deecac1bcb\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"CustomerReviews.Calculation.Method\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"Average\"\r\n            },\r\n            {\r\n               \"value\":\"Wilson\"\r\n            }\r\n         ],\r\n         \"defaultValue\":\"Average\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"Average\",\r\n               \"value\":\"Average\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"Collapsed\",\r\n         \"id\":\"36a8aba8-f5a9-44f5-90f7-5f2c392c009c\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"SEO\",\r\n         \"name\":\"Stores.SeoLinksType\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"None\"\r\n            },\r\n            {\r\n               \"value\":\"Short\"\r\n            },\r\n            {\r\n               \"value\":\"Collapsed\"\r\n            },\r\n            {\r\n               \"value\":\"Long\"\r\n            }\r\n         ],\r\n         \"defaultValue\":\"Collapsed\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"Collapsed\",\r\n               \"value\":\"Collapsed\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Statuses\",\r\n         \"name\":\"Customer.OrganizationDefaultStatus\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Statuses\",\r\n         \"name\":\"Customer.ContactDefaultStatus\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"5957c0a3-c85f-486b-850d-1c2545808fcb\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders\",\r\n         \"name\":\"Order.CustomerOrderNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"CO{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"CO{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"PI{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"815089b1-4680-414a-8342-c9db7741af9a\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders\",\r\n         \"name\":\"Order.PaymentInNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"PI{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"PI{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"PI{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"SH{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"c0e0d94f-3b7f-43d8-aa69-a7db9d35e01d\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders\",\r\n         \"name\":\"Order.ShipmentNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"SH{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"SH{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"SH{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"93bd782d-dd42-40ae-a851-7be3706b2b17\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes\",\r\n         \"name\":\"Quotes.QuoteRequestNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"RFQ{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes\",\r\n         \"name\":\"Quotes.EnableQuotes\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":\"ae801337-2ebc-4841-8131-a412fae472df\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.CategoryPageUpdateFrequency\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"always\"\r\n            },\r\n            {\r\n               \"value\":\"hourly\"\r\n            },\r\n            {\r\n               \"value\":\"daily\"\r\n            },\r\n            {\r\n               \"value\":\"weekly\"\r\n            },\r\n            {\r\n               \"value\":\"monthly\"\r\n            },\r\n            {\r\n               \"value\":\"yearly\"\r\n            },\r\n            {\r\n               \"value\":\"never\"\r\n            }\r\n         ],\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.CategoryPagePriority\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":\"658d4ae8-db6a-4e18-ae15-67ac0ec58d0b\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.ProductPageUpdateFrequency\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"always\"\r\n            },\r\n            {\r\n               \"value\":\"hourly\"\r\n            },\r\n            {\r\n               \"value\":\"daily\"\r\n            },\r\n            {\r\n               \"value\":\"weekly\"\r\n            },\r\n            {\r\n               \"value\":\"monthly\"\r\n            },\r\n            {\r\n               \"value\":\"yearly\"\r\n            },\r\n            {\r\n               \"value\":\"never\"\r\n            }\r\n         ],\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.ProductPagePriority\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":\"62e80748-bfbb-4073-a6a7-fbeaf9b91186\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.BlogPageUpdateFrequency\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"always\"\r\n            },\r\n            {\r\n               \"value\":\"hourly\"\r\n            },\r\n            {\r\n               \"value\":\"daily\"\r\n            },\r\n            {\r\n               \"value\":\"weekly\"\r\n            },\r\n            {\r\n               \"value\":\"monthly\"\r\n            },\r\n            {\r\n               \"value\":\"yearly\"\r\n            },\r\n            {\r\n               \"value\":\"never\"\r\n            }\r\n         ],\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.BlogPagePriority\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.EnableTracking\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleTagManagerId\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleAnalyticsTrackingId\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.CreateECommerceTransaction\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.ReverseECommerceTransaction\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"b2211248-ac53-481a-843e-d3577a1d0379\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Return\",\r\n         \"groupName\":\"Return\",\r\n         \"name\":\"Return.ReturnNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"RET{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"RET{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"16e8e1f9-c3ba-4a28-af9f-7ba7fdae4bd0\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions\",\r\n         \"name\":\"Subscription.EnableSubscriptions\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"0d411da2-d07e-42fb-a47f-4556faecbcee\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions\",\r\n         \"name\":\"Subscription.SubscriptionNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"SU{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"SU{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabledForAnonymous\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"bdbb5d75-c78c-4116-b5f9-d415e4ab0385\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews\",\r\n         \"name\":\"CustomerReviews.CanSubmitReviewWhenHasOrder\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"typeName\":\"Store\",\r\n   \"scopes\":null,\r\n   \"createdDate\":\"2015-10-06T22:39:51.553Z\",\r\n   \"modifiedDate\":\"2022-08-17T08:05:53.4670416Z\",\r\n   \"createdBy\":\"unknown\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{storeId}}\",\r\n   \"additionalLanguages\":[\r\n      \"fr-FR\",\r\n      \"de-DE\"\r\n   ],\r\n   \"additionalCurrencies\":[\r\n      \"XPT\",\r\n      \"EUR\"\r\n   ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/stores",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"stores"
															]
														}
													},
													"response": []
												},
												{
													"name": "Activate fixed tax",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"storeId\":\"{{storeId}}\",\r\n   \"code\":\"FixedRate\",\r\n   \"logoUrl\":\"http://virtocommerce.com/Content/images/logo.jpg\",\r\n   \"isActive\":true,\r\n   \"priority\":0,\r\n   \"typeName\":\"FixedRateTaxProvider\",\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"f4cdda81d9c84a8ba5306b3da0fea979\",\r\n         \"objectType\":\"FixedRateTaxProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":10,\r\n         \"id\":\"784bdacd-fd82-4afb-96c6-1b2c8975b5c4\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Tax\",\r\n         \"groupName\":\"FixedTaxProvider\",\r\n         \"name\":\"VirtoCommerce.Core.FixedTaxRateProvider.Rate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":0,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":1,\r\n               \"value\":10\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"id\":\"f4cdda81d9c84a8ba5306b3da0fea979\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/taxes",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"taxes"
															]
														}
													},
													"response": []
												},
												{
													"name": "Deactivate avatax tax",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"storeId\":\"{{storeId}}\",\r\n   \"code\":\"AvaTaxRateProvider\",\r\n   \"logoUrl\":null,\r\n   \"isActive\":false,\r\n   \"priority\":0,\r\n   \"typeName\":\"AvaTaxRateProvider\",\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\",\r\n         \"objectType\":\"AvaTaxRateProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"DEFAULT\",\r\n         \"id\":\"e67c0956-28b0-49be-9a72-19cd4cc2c683\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.AvalaraTax\",\r\n         \"groupName\":\"Tax|Avalara\",\r\n         \"name\":\"Avalara.Credentials.CompanyCode\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\",\r\n         \"objectType\":\"AvaTaxRateProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"https://rest.avatax.com/\",\r\n         \"id\":\"2ce6c28a-504c-4026-88c8-aa4bdeb67297\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.AvalaraTax\",\r\n         \"groupName\":\"Tax|Avalara\",\r\n         \"name\":\"Avalara.Credentials.ServiceUrl\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\",\r\n         \"objectType\":\"AvaTaxRateProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"https://admin-avatax.avalara.net/\",\r\n         \"id\":\"79bf15af-e4c8-475c-a009-6c994c966a8a\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.AvalaraTax\",\r\n         \"groupName\":\"Tax|Avalara\",\r\n         \"name\":\"Avalara.Credentials.AdminAreaUrl\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\",\r\n         \"objectType\":\"AvaTaxRateProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.AvalaraTax\",\r\n         \"groupName\":\"Tax|Avalara\",\r\n         \"name\":\"Avalara.ScheduledOrdersSynchronization.IsEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\",\r\n         \"objectType\":\"AvaTaxRateProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"0 0 * * *\",\r\n         \"id\":\"ea1f5639-81de-42d3-a322-b88862f1a17c\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.AvalaraTax\",\r\n         \"groupName\":\"Tax|Avalara\",\r\n         \"name\":\"Avalara.ScheduledOrdersSynchronization.CronExpression\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"0 0 * * *\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\",\r\n         \"objectType\":\"AvaTaxRateProvider\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.AvalaraTax\",\r\n         \"groupName\":\"Tax|Avalara\",\r\n         \"name\":\"Avalara.ScheduledOrdersSynchronization.LastExecutionDate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"DateTime\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false\r\n      }\r\n   ],\r\n   \"id\":\"7e841b6d-9e48-48d3-bcb8-94232c002fea\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/taxes",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"taxes"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set cartId1, userId1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
																	"    pm.collectionVariables.set(\"userId1\", jsonData.data.cart.customerId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add item",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Check items\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.addItemsCart.items).to.be.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        total{amount}\r\n        taxTotal{amount}\r\n        items {\r\n            productId,\r\n            name,\r\n            quantity\r\n        \r\n        }\r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 1\r\n    }\r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add cart payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"AddOrUpdatePayment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
																	"    pm.collectionVariables.set(\"paymentId1\",jSonData.data.addOrUpdateCartPayment.payments[0].id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"PaddressCart@email.com\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add cart shipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"AddOrUpdateShipment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"    pm.collectionVariables.set(\"shipmentId1\",jSonData.data.addOrUpdateCartShipment.shipments[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart@email.com\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add cart address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Check addOrUpdateCartAddress \", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress.id).to.be.not.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"    pm.collectionVariables.set(\"cartAddress\",json.data.addOrUpdateCartAddress.addresses[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"City 18\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart@emai.ru\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create order from cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Order created\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"orderId1\", json.data.createOrderFromCart.id);\r",
																	"    pm.expect(json.data.createOrderFromCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"pm.test(\"TaxTotal == 0\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.createOrderFromCart.taxTotal.amount).to.be.eql(0);\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\ncreateOrderFromCart (command: $command) {\nid\nitems{\nid\nname\nquantity\nfulfillmentCenterId\nfulfillmentCenterName\n}\ntotal{\namount\n}\ntaxTotal{amount}\ndiscountTotal{\namount\n}\ntaxTotal{\namount\n}\ntotal{\namount\n}\n}\n}",
																"variables": "{\n\"command\": {\n    \"cartId\": \"{{cartId1}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C346137 TaxTotal == 0\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.order.taxTotal.amount).to.be.eql(0);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n    subTotal{amount}\r\n    taxTotal{amount}\r\n    items {\r\n      id\r\n      name\r\n        price{\r\n        amount\r\n              }\r\n\r\n    }\r\n\r\n  }\r\n}\r\n",
																"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Successful POST request\", function () {\r",
																	"    pm.expect(pm.response.code).to.be.oneOf([204, 202]);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/order/customerOrders?ids={{orderId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"order",
																"customerOrders"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{orderId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Switch on \"TaxCalculationEnabled\"",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"name\":\"{{storeId}}\",\r\n   \"description\":null,\r\n   \"storeState\":\"Open\",\r\n   \"timeZone\":null,\r\n   \"country\":\"USA\",\r\n   \"region\":null,\r\n   \"defaultLanguage\":\"en-US\",\r\n   \"defaultCurrency\":\"USD\",\r\n   \"catalog\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"creditCardSavePolicy\":false,\r\n   \"url\":\"https://vcplatform-storefront.qa.govirto.com\",\r\n   \"secureUrl\":\"\",\r\n   \"email\":\"noreply@mail.com\",\r\n   \"adminEmail\":null,\r\n   \"emailName\":null,\r\n   \"adminEmailName\":null,\r\n   \"displayOutOfStock\":false,\r\n   \"outerId\":null,\r\n   \"mainFulfillmentCenterId\":\"vendor-fulfillment\",\r\n   \"additionalFulfillmentCenterIds\":[\r\n      \"142ba5568ae4454aad553ece41b9c3b5\"\r\n   ],\r\n   \"mainReturnsFulfillmentCenterId\":\"vendor-fulfillment\",\r\n   \"returnsFulfillmentCenterIds\":[\r\n      \"142ba5568ae4454aad553ece41b9c3b5\"\r\n   ],\r\n   \"languages\":[\r\n      \"en-US\",\r\n      \"fr-FR\",\r\n      \"de-DE\"\r\n   ],\r\n   \"currencies\":[\r\n      \"USD\",\r\n      \"XPT\",\r\n      \"EUR\"\r\n   ],\r\n   \"trustedGroups\":[\r\n      \"Clothing\"\r\n   ],\r\n   \"seoObjectType\":\"Store\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"name\":null,\r\n         \"semanticUrl\":\"Electronique\",\r\n         \"pageTitle\":\"Electronique\",\r\n         \"metaDescription\":null,\r\n         \"imageAltDescription\":null,\r\n         \"metaKeywords\":null,\r\n         \"storeId\":\"{{storeId}}\",\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"fr-FR\",\r\n         \"id\":\"15b0752d92cb47b69001f31b10127514\"\r\n      },\r\n      {\r\n         \"name\":null,\r\n         \"semanticUrl\":\"{{storeId}}\",\r\n         \"pageTitle\":\"{{storeId}}\",\r\n         \"metaDescription\":null,\r\n         \"imageAltDescription\":null,\r\n         \"metaKeywords\":null,\r\n         \"storeId\":\"{{storeId}}\",\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\",\r\n         \"id\":\"27546a48097b4e59900da9a4f5a17ac8\"\r\n      },\r\n      {\r\n         \"name\":null,\r\n         \"semanticUrl\":\"{{storeId}}\",\r\n         \"pageTitle\":\"{{storeId}}\",\r\n         \"metaDescription\":null,\r\n         \"imageAltDescription\":null,\r\n         \"metaKeywords\":null,\r\n         \"storeId\":\"{{storeId}}\",\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"de-DE\",\r\n         \"id\":\"cfecfc3f5ce5486eaaf52886da7c957c\"\r\n      }\r\n   ],\r\n   \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n   \"dynamicProperties\":[\r\n      {\r\n         \"objectId\":null,\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"{{storeId}}\",\r\n               \"locale\":null,\r\n               \"value\":\"22\",\r\n               \"valueId\":null,\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"6bd7d811-cf42-4934-b3aa-13e8615e2ebc\",\r\n               \"propertyName\":\"a2\"\r\n            }\r\n         ],\r\n         \"name\":\"a2\",\r\n         \"description\":null,\r\n         \"objectType\":null,\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"displayOrder\":null,\r\n         \"valueType\":\"Undefined\",\r\n         \"displayNames\":null,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"modifiedDate\":null,\r\n         \"createdBy\":null,\r\n         \"modifiedBy\":null,\r\n         \"id\":\"6bd7d811-cf42-4934-b3aa-13e8615e2ebc\"\r\n      },\r\n      {\r\n         \"objectId\":null,\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"{{storeId}}\",\r\n               \"locale\":null,\r\n               \"value\":\"22\",\r\n               \"valueId\":null,\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"3b45fa7a-da75-4249-aa19-47411d228a2e\",\r\n               \"propertyName\":\"a13\"\r\n            }\r\n         ],\r\n         \"name\":\"a13\",\r\n         \"description\":null,\r\n         \"objectType\":null,\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"displayOrder\":null,\r\n         \"valueType\":\"Undefined\",\r\n         \"displayNames\":null,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"modifiedDate\":null,\r\n         \"createdBy\":null,\r\n         \"modifiedBy\":null,\r\n         \"id\":\"3b45fa7a-da75-4249-aa19-47411d228a2e\"\r\n      },\r\n      {\r\n         \"objectId\":null,\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"{{storeId}}\",\r\n               \"locale\":null,\r\n               \"value\":\"\",\r\n               \"valueId\":null,\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"Default_Theme_Name_Property\",\r\n               \"propertyName\":\"DefaultThemeName\"\r\n            }\r\n         ],\r\n         \"name\":\"DefaultThemeName\",\r\n         \"description\":null,\r\n         \"objectType\":null,\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"displayOrder\":null,\r\n         \"valueType\":\"Undefined\",\r\n         \"displayNames\":null,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"modifiedDate\":null,\r\n         \"createdBy\":null,\r\n         \"modifiedBy\":null,\r\n         \"id\":\"Default_Theme_Name_Property\"\r\n      }\r\n   ],\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"b30ecd04-89a4-4284-ab8a-0dada0bcb019\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.TaxCalculationEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":false\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"dbeeebd3-c9e5-45b6-9ea8-fc59461e336f\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.AllowAnonymousUsers\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.IsSpa\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"e8629d31-9dcc-495b-a313-2c069552fd96\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.EmailVerificationEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"2435f940-03f0-44fc-9d65-6095b77ca5b0\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"Stores.EnablePriceRoundingForTotalsCalculation\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"Average\",\r\n         \"id\":\"82767a2f-7d41-450e-976f-e3deecac1bcb\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"General\",\r\n         \"name\":\"CustomerReviews.Calculation.Method\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"Average\"\r\n            },\r\n            {\r\n               \"value\":\"Wilson\"\r\n            }\r\n         ],\r\n         \"defaultValue\":\"Average\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"Average\",\r\n               \"value\":\"Average\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"Collapsed\",\r\n         \"id\":\"36a8aba8-f5a9-44f5-90f7-5f2c392c009c\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"SEO\",\r\n         \"name\":\"Stores.SeoLinksType\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"None\"\r\n            },\r\n            {\r\n               \"value\":\"Short\"\r\n            },\r\n            {\r\n               \"value\":\"Collapsed\"\r\n            },\r\n            {\r\n               \"value\":\"Long\"\r\n            }\r\n         ],\r\n         \"defaultValue\":\"Collapsed\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"Collapsed\",\r\n               \"value\":\"Collapsed\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Statuses\",\r\n         \"name\":\"Customer.OrganizationDefaultStatus\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Customer\",\r\n         \"groupName\":\"Statuses\",\r\n         \"name\":\"Customer.ContactDefaultStatus\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"5957c0a3-c85f-486b-850d-1c2545808fcb\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders\",\r\n         \"name\":\"Order.CustomerOrderNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"CO{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"CO{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"PI{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"815089b1-4680-414a-8342-c9db7741af9a\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders\",\r\n         \"name\":\"Order.PaymentInNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"PI{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"PI{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"PI{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"SH{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"c0e0d94f-3b7f-43d8-aa69-a7db9d35e01d\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders\",\r\n         \"name\":\"Order.ShipmentNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"SH{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"SH{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"SH{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"93bd782d-dd42-40ae-a851-7be3706b2b17\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes\",\r\n         \"name\":\"Quotes.QuoteRequestNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"RFQ{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"RFQ{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Quote\",\r\n         \"groupName\":\"Quotes\",\r\n         \"name\":\"Quotes.EnableQuotes\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":\"ae801337-2ebc-4841-8131-a412fae472df\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.CategoryPageUpdateFrequency\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"always\"\r\n            },\r\n            {\r\n               \"value\":\"hourly\"\r\n            },\r\n            {\r\n               \"value\":\"daily\"\r\n            },\r\n            {\r\n               \"value\":\"weekly\"\r\n            },\r\n            {\r\n               \"value\":\"monthly\"\r\n            },\r\n            {\r\n               \"value\":\"yearly\"\r\n            },\r\n            {\r\n               \"value\":\"never\"\r\n            }\r\n         ],\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.CategoryPagePriority\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":\"658d4ae8-db6a-4e18-ae15-67ac0ec58d0b\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.ProductPageUpdateFrequency\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"always\"\r\n            },\r\n            {\r\n               \"value\":\"hourly\"\r\n            },\r\n            {\r\n               \"value\":\"daily\"\r\n            },\r\n            {\r\n               \"value\":\"weekly\"\r\n            },\r\n            {\r\n               \"value\":\"monthly\"\r\n            },\r\n            {\r\n               \"value\":\"yearly\"\r\n            },\r\n            {\r\n               \"value\":\"never\"\r\n            }\r\n         ],\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.ProductPagePriority\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":\"62e80748-bfbb-4073-a6a7-fbeaf9b91186\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.BlogPageUpdateFrequency\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            {\r\n               \"value\":\"always\"\r\n            },\r\n            {\r\n               \"value\":\"hourly\"\r\n            },\r\n            {\r\n               \"value\":\"daily\"\r\n            },\r\n            {\r\n               \"value\":\"weekly\"\r\n            },\r\n            {\r\n               \"value\":\"monthly\"\r\n            },\r\n            {\r\n               \"value\":\"yearly\"\r\n            },\r\n            {\r\n               \"value\":\"never\"\r\n            }\r\n         ],\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Sitemaps\",\r\n         \"groupName\":\"Sitemaps\",\r\n         \"name\":\"Sitemap.BlogPagePriority\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Decimal\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.EnableTracking\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleTagManagerId\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.GoogleAnalyticsTrackingId\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.CreateECommerceTransaction\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.GoogleEcommerceAnalytics\",\r\n         \"groupName\":\"Google Ecommerce Analytics\",\r\n         \"name\":\"GoogleEcommerceAnalytics.ReverseECommerceTransaction\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":null,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"b2211248-ac53-481a-843e-d3577a1d0379\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Return\",\r\n         \"groupName\":\"Return\",\r\n         \"name\":\"Return.ReturnNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"RET{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"RET{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"RET{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"16e8e1f9-c3ba-4a28-af9f-7ba7fdae4bd0\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions\",\r\n         \"name\":\"Subscription.EnableSubscriptions\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"id\":\"0d411da2-d07e-42fb-a47f-4556faecbcee\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Subscription\",\r\n         \"groupName\":\"Subscriptions\",\r\n         \"name\":\"Subscription.SubscriptionNewNumberTemplate\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":\"SU{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":\"SU{0:yyMMdd}-{1:D5}\",\r\n               \"value\":\"SU{0:yyMMdd}-{1:D5}\"\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabled\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":null,\r\n         \"id\":null,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews\",\r\n         \"name\":\"CustomerReviews.CustomerReviewsEnabledForAnonymous\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":null,\r\n               \"value\":null\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"{{storeId}}\",\r\n         \"objectType\":\"Store\",\r\n         \"isReadOnly\":false,\r\n         \"value\":true,\r\n         \"id\":\"bdbb5d75-c78c-4116-b5f9-d415e4ab0385\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Product Reviews\",\r\n         \"name\":\"CustomerReviews.CanSubmitReviewWhenHasOrder\",\r\n         \"displayName\":null,\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"allowedValues\":null,\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false,\r\n         \"values\":[\r\n            {\r\n               \"id\":true,\r\n               \"value\":true\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"typeName\":\"Store\",\r\n   \"scopes\":null,\r\n   \"createdDate\":\"2015-10-06T22:39:51.553Z\",\r\n   \"modifiedDate\":\"2022-08-17T08:05:53.4670416Z\",\r\n   \"createdBy\":\"unknown\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{storeId}}\",\r\n   \"additionalLanguages\":[\r\n      \"fr-FR\",\r\n      \"de-DE\"\r\n   ],\r\n   \"additionalCurrencies\":[\r\n      \"XPT\",\r\n      \"EUR\"\r\n   ]\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/stores",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"stores"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Set cartId1, userId1\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
																	"    pm.collectionVariables.set(\"userId1\", jsonData.data.cart.customerId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"setTimeout(() => {}, 5000); "
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add item",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"pm.test(\"Check items\", function(){\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.expect(jsonData.data.addItemsCart.items).to.be.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        total{amount}\r\n        taxTotal{amount}\r\n        items {\r\n            productId,\r\n            name,\r\n            quantity\r\n        \r\n        }\r\n    }\r\n}",
																"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 1\r\n    }\r\n    ]\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add cart payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"AddOrUpdatePayment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
																	"    pm.collectionVariables.set(\"paymentId1\",jSonData.data.addOrUpdateCartPayment.payments[0].id);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"PaddressCart@email.com\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add cart shipment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"AddOrUpdateShipment\", function(){\r",
																	"    var jSonData = pm.response.json();\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.id).to.not.eql(null);\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).to.be.an(\"object\");\r",
																	"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"    pm.collectionVariables.set(\"shipmentId1\",jSonData.data.addOrUpdateCartShipment.shipments[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart@email.com\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add cart address",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Check addOrUpdateCartAddress \", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
																	"    pm.expect(json.data.addOrUpdateCartAddress.id).to.be.not.empty;\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"    pm.collectionVariables.set(\"cartAddress\",json.data.addOrUpdateCartAddress.addresses[0].id);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"City 18\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart@emai.ru\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create order from cart",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Order created\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.collectionVariables.set(\"orderId1\", json.data.createOrderFromCart.id);\r",
																	"    pm.expect(json.data.createOrderFromCart).to.be.not.empty;\r",
																	"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"});\r",
																	"\r",
																	"pm.test(\"TaxTotal > 0\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.createOrderFromCart.taxTotal.amount).greaterThan(0);\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\ncreateOrderFromCart (command: $command) {\nid\nitems{\nid\nname\nquantity\nfulfillmentCenterId\nfulfillmentCenterName\n}\ntotal{\namount\n}\ndiscountTotal{\namount\n}\ntaxTotal{\namount\n}\ntotal{\namount\n}\n}\n}",
																"variables": "{\n\"command\": {\n    \"cartId\": \"{{cartId1}}\"\n  }\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Check order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C346138 TaxTotal > 0\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.order.taxTotal.amount).greaterThan(0);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n    taxTotal{amount}\r\n    subTotal{amount}\r\n    items {\r\n      id\r\n      name\r\n        price{\r\n        amount\r\n              }\r\n\r\n    }\r\n\r\n  }\r\n}\r\n",
																"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Successful POST request\", function () {\r",
																	"    pm.expect(pm.response.code).to.be.oneOf([204, 202]);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/order/customerOrders?ids={{orderId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"order",
																"customerOrders"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{orderId1}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "Get user's orders by user id (Admin token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261160 Get user's orders by user id (Admin token)\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"orderId4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"orderId5\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"orderId6\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\r\n  orders(userId: \"{{userId2}}\") {\r\n      totalCount\r\n      \r\n    items {\r\n      id\r\n      status\r\n      number\r\n      createdDate\r\n      modifiedDate\r\n      customerId\r\n      customerName\r\n      shipments {\r\n        id\r\n        status\r\n        shipmentMethodCode\r\n        shipmentMethodOption\r\n        total {\r\n          amount\r\n        }\r\n      }\r\n      addresses {\r\n        id\r\n        firstName\r\n        lastName\r\n        line1\r\n        countryName\r\n        countryCode\r\n        postalCode\r\n      }\r\n      total {\r\n        amount\r\n      }\r\n      subTotal {\r\n        amount\r\n      }\r\n      discountTotal {\r\n        amount\r\n      }\r\n    }\r\n  }\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261151 Get order by id\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.order).to.not.eql(null);\r",
															"    pm.expect(data.data.order).to.be.an(\"object\");\r",
															"    pm.expect(data.data.order.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query order($id: String, $cultureName: String) {\n  order(id: $id, cultureName: $cultureName) {\n    id\n    number\n    customerId\n     dynamicProperties {\n      name\n      value\n      valueType\n      dynamicProperty {\n        name\n        label\n        valueType\n      }\n      dictionaryItem {\n        label\n        name\n        id\n      }\n    }\n    items {\n      id\n      name\n      dynamicProperties {\n        dictionaryItem {\n          id\n          name\n          label\n        }\n        dynamicProperty {\n          valueType\n          id\n          label\n          name\n        }\n      }\n    }\n    shipments{\n        id\n    dynamicProperties {\n      name\n      value\n      valueType\n      dynamicProperty {\n        name\n        label\n        valueType\n      }\n      dictionaryItem {\n        label\n        name\n        id\n      }\n    }\n    }\n    inPayments{\n        id\n    dynamicProperties {\n      name\n      value\n      valueType\n      dynamicProperty {\n        name\n        label\n        valueType\n      }\n      dictionaryItem {\n        label\n        name\n        id\n      }\n    }\n    }\n  }\n}\n",
														"variables": "{\n  \"id\": \"{{orderId6}}\",\n  \"cultureName\": \"{{cultureName}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get user's orders by user id. Orders does not exist [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C250943 Get user's orders by user id (Admin token)\", function () {\r",
															" var json = pm.response.json();\r",
															"    pm.expect(json.data.orders.items).to.be.empty;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\r\n  orders(userId: \"{{userId1}}\") {\r\n    items {\r\n      id\r\n      status\r\n      number\r\n      createdDate\r\n      modifiedDate\r\n      customerId\r\n      customerName\r\n      shipments {\r\n        id\r\n        status\r\n        shipmentMethodCode\r\n        shipmentMethodOption\r\n        total {\r\n          amount\r\n        }\r\n      }\r\n      addresses {\r\n        id\r\n        firstName\r\n        lastName\r\n        line1\r\n        countryName\r\n        countryCode\r\n        postalCode\r\n      }\r\n      total {\r\n        amount\r\n      }\r\n      subTotal {\r\n        amount\r\n      }\r\n      discountTotal {\r\n        amount\r\n      }\r\n    }\r\n  }\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add dynamic properties for order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Dynamic properties for order\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.updateOrderDynamicProperties.dynamicProperties).to.be.not.empty;\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateOrderDynamicProperties($command: InputUpdateOrderDynamicPropertiesType!) {   updateOrderDynamicProperties(command: $command) {     \r\nid     \r\nnumber     \r\ndynamicProperties { \r\nname \r\nvalue \r\nvalueType\r\ndynamicProperty {\r\nname\r\nlabel\r\nvalueType\r\n }\r\ndictionaryItem {\r\nlabel \r\nname\r\nid\r\n}}   } }",
														"variables": " {\r\n\"command\": {\r\n\"orderId\": \"{{orderId6}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"OrdersModule_CustomerOrder_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_Boolean_0_0_0\",\r\n\"value\": {{bool1}}\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_Decimal_1_0_0\",\r\n\"value\": {{decimal2}}\r\n},\r\n\r\n{\r\n\"name\": \"OrdersModule_CustomerOrder_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_Html_0_1_0\",\r\n\"value\": \"{{html2}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"OrdersModule_CustomerOrder_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}    ]\r\n}\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties after addOrUpdate(order)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C327846 C327847 C327848 C327849 C327850 Check values\", function () {\r",
															"\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n     dynamicProperties {\r\n      name\r\n      value\r\n      valueType\r\n      dynamicProperty {\r\n        name\r\n        label\r\n        valueType\r\n      }\r\n      dictionaryItem {\r\n        label\r\n        name\r\n        id\r\n      }\r\n    }\r\n  }\r\n    } ",
														"variables": "{\r\n  \"id\": \"{{orderId6}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add dynamic properties for shipment in order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Dynamic properties for shipment order\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.updateOrderShipmentDynamicProperties.shipments[0].dynamicProperties).to.be.not.empty;\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateOrderShipmentDynamicProperties($command: InputUpdateOrderShipmentDynamicPropertiesType!) {\r\n\r\n    updateOrderShipmentDynamicProperties(command: $command) {\r\n\r\n        number\r\n\r\n        shipments {\r\n\r\n            id\r\n\r\n            dynamicProperties {\r\n\r\n                name \r\n\r\n                value \r\n\r\n                valueType\r\n\r\n                dictionaryItem {\r\n\r\n                    label \r\n\r\n                    name \r\n\r\n                    id\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}",
														"variables": " {\r\n\"command\": {\r\n\"orderId\": \"{{orderId6}}\",\r\n\"shipmentId\": \"{{orderShipmentId}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"OrdersModule_Shipment_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"OrdersModule_Shipment_Boolean_0_0_0\",\r\n\"value\": {{bool1}}\r\n},{\r\n\"name\": \"OrdersModule_Shipment_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"OrdersModule_Shipment_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"OrdersModule_Shipment_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"OrdersModule_Shipment_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"OrdersModule_Shipment_Html_0_1_0\",\r\n\"value\": \"{{html2}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"OrdersModule_Shipment_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"OrdersModule_Shipment_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"OrdersModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"OrdersModule_Shipment_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"OrdersModule_Shipment_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"OrdersModule_Shipment_LongText_0_1_0\",\r\n\"value\": \"{{long2}} \",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"OrdersModule_Shipment_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"OrdersModule_Shipment_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"OrdersModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"OrdersModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"OrdersModule_Shipment_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties after addOrUpdate(order_shipment)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C327888 C327889 C327890 C327891 C327892 Check values\", function () {\r",
															"     pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short8\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short9\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short10\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n    shipments {\r\n            id\r\n            dynamicProperties {\r\n                name\r\n                value \r\n                valueType\r\n                dictionaryItem {\r\n                    label \r\n                    name \r\n                    id\r\n                }\r\n      }\r\n    }\r\n  }\r\n    } ",
														"variables": "{\r\n  \"id\": \"{{orderId6}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add dynamic properties for payments in order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Dynamic properties for payment order\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.updateOrderPaymentDynamicProperties.inPayments[0].dynamicProperties).to.be.not.empty;\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateOrderPaymentDynamicProperties($command: InputUpdateOrderPaymentDynamicPropertiesType!) {\r\n\r\n    updateOrderPaymentDynamicProperties(command: $command) {\r\n\r\n        id\r\n\r\n        number\r\n\r\n        inPayments {\r\n\r\n            id\r\n\r\n            dynamicProperties {\r\n\r\n                name \r\n\r\n                value \r\n\r\n                valueType\r\n\r\n                dynamicProperty {\r\n\r\n                    name \r\n\r\n                    label \r\n\r\n                    valueType\r\n\r\n                } \r\n\r\n                dictionaryItem {\r\n\r\n                    label \r\n\r\n                    name \r\n\r\n                    id\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}",
														"variables": " {\r\n\"command\": {\r\n\"orderId\": \"{{orderId6}}\",\r\n\"paymentId\":\"{{orderPaymentId}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"OrdersModule_Paymentln_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},\r\n{\r\n\"name\": \"OrdersModule_Paymentln_Boolean_0_0_0\",\r\n\"value\":\"{{bool1}}\"\r\n},\r\n{\r\n\"name\": \"OrdersModule_Paymentln_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_Decimal_0_0_0\",\r\n\"value\": \"{{decimal1}}\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_Html_0_1_0\",\r\n\"value\": \"{{html1}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_Html_0_1_0\",\r\n\"value\": \"{{html2}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_Integer_0_0_0\",\r\n\"value\": \"{{int1}}\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_Integer_1_0_0\",\r\n\"value\": \"{{int2}}\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_Integer_1_0_0\",\r\n\"value\": \"{{int3}}\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"OrdersModule_Paymentln_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"en-US\"\r\n}   ]\r\n}\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties after addOrUpdate(order_payments)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C292426 C292427 C292428 C292429 C292430 Check values\", function () {\r",
															"\r",
															"     pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short8\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short9\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short10\"));\r",
															"    \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n   inPayments {\r\n            id\r\n            dynamicProperties {\r\n                name \r\n                value \r\n                valueType\r\n                dynamicProperty {\r\n                    name \r\n                    label \r\n                    valueType\r\n                } \r\n                dictionaryItem {\r\n                    label \r\n                    name \r\n                    id\r\n    }\r\n  }\r\n    } \r\n  }\r\n}",
														"variables": "{\r\n  \"id\": \"{{orderId6}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add dynamic properties for order lineitem",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Dynamic properties for lineitem order\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.updateOrderItemDynamicProperties.items[0].dynamicProperties).to.be.not.empty;\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation updateOrderItemDynamicProperties($command: InputUpdateOrderItemDynamicPropertiesType!) {\r\n\r\n    updateOrderItemDynamicProperties(command: $command) {\r\n\r\n        id\r\n\r\n        items {\r\n\r\n            id\r\n\r\n            dynamicProperties {\r\n\r\n                name \r\n\r\n                value \r\n\r\n                valueType\r\n\r\n                dictionaryItem {\r\n\r\n                    label \r\n\r\n                    name \r\n\r\n                    id\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}",
														"variables": " {\r\n\"command\": {\r\n\"orderId\": \"{{orderId6}}\",\r\n\"lineItemId\":\"{{lineItemId}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"OrdersModule_LineItem_ShortText_0_0_0\",\r\n\"value\": \"{{short1}}\"\r\n},{\r\n\"name\": \"OrdersModule_LineItem_Boolean_0_0_0\",\r\n\"value\": {{bool2}}\r\n},{\r\n\"name\": \"OrdersModule_LineItem_DateTime_0_0_0\",\r\n\"value\": \"{{data1}}\"\r\n},{\r\n\"name\": \"OrdersModule_LineItem_Decimal_0_0_0\",\r\n\"value\": {{decimal1}}\r\n},{\r\n\"name\": \"OrdersModule_LineItem_Html_0_0_0\",\r\n\"value\": \"{{html1}}\"\r\n},{\r\n\"name\": \"OrdersModule_LineItem_Html_0_1_0\",\r\n\"value\": \"{{html4}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"OrdersModule_LineItem_Html_0_1_0\",\r\n\"value\": \"{{html2}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"OrdersModule_LineItem_Image_0_0_0\",\r\n\"value\": \"{{image}}\"\r\n},{\r\n\"name\": \"OrdersModule_LineItem_Integer_0_0_0\",\r\n\"value\": {{int1}}\r\n},{\r\n\"name\": \"OrdersModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int2}}\r\n},{\r\n\"name\": \"OrdersModule_LineItem_Integer_1_0_0\",\r\n\"value\": {{int3}}\r\n},{\r\n\"name\": \"OrdersModule_LineItem_LongText_0_0_0\",\r\n\"value\": \"{{long1}}\"\r\n},{\r\n\"name\": \"OrdersModule_LineItem_LongText_0_1_0\",\r\n\"value\": \"{{long2}}\",\r\n\"cultureName\":\"fr-FR\"\r\n},{\r\n\"name\": \"OrdersModule_LineItem_ShortText_0_0_1\",\r\n\"value\": \"{{short3}}\"\r\n},{\r\n\"name\": \"OrdersModule_LineItem_ShortText_0_1_0\",\r\n\"value\": \"{{short5}}\",\r\n\"cultureName\":\"de-DE\"\r\n},{\r\n\"name\": \"OrdersModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short8}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"OrdersModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short9}}\",\r\n\"cultureName\":\"en-US\"\r\n},{\r\n\"name\": \"OrdersModule_LineItem_ShortText_1_1_0\",\r\n\"value\": \"{{short10}}\",\r\n\"cultureName\":\"fr-FR\"\r\n}  ]\r\n}\r\n}  "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check dynamic properties after addOrUpdate(order_lineitem)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C327860 C327861 C327862 C327863 C327864 Check values\", function () {\r",
															"\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"image\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"data1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"html4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"long2\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short1\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short3\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short5\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short8\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short9\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short10\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n    items{\r\n        id\r\n    dynamicProperties {\r\n      name\r\n      value\r\n      valueType\r\n     \r\n      }\r\n    }\r\n    }\r\n  }\r\n",
														"variables": "{\r\n  \"id\": \"{{orderId6}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index orders",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[{\"documentType\":\"CustomerOrder\",\"deleteExistingIndex\":true}]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										},
										{
											"name": "get all orders",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261161 Orders\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.orders.items).to.be.not.empty;\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 5000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\r\norders {\r\ntotalCount\r\nitems {\r\nid\r\nstatus\r\nnumber\r\ncreatedDate\r\nmodifiedDate\r\ncustomerId\r\ncustomerName\r\nitems{\r\n    id\r\n}\r\nshipments {\r\nid\r\nstatus\r\nshipmentMethodCode\r\nshipmentMethodOption\r\ntotal {\r\namount\r\n}\r\n}\r\ninPayments{\r\n    id\r\n}\r\n\r\naddresses {\r\nid\r\nfirstName\r\nlastName\r\nline1\r\ncountryName\r\ncountryCode\r\n}\r\ntotal {\r\namount\r\n}\r\nsubTotal {\r\namount\r\n}\r\ndiscountTotal {\r\namount\r\n}\r\n}\r\n}\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "orders by short text",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C293137 Search order by short text\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.orders.items).to.not.be.empty;\r",
															"   pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query orders ($filter: String, $sort: String, $cultureName: String, $userId: String) {\norders (filter: $filter, sort: $sort, cultureName: $cultureName, userId: $userId) {\n    totalCount\nitems {\nid\ndynamicProperties {\nname\nvalue\nvalueType\ndynamicProperty {\nname\nlabel\nvalueType\n}\ndictionaryItem {\nlabel\nname\nid\n}\n}\n}\npageInfo {\nendCursor\nhasNextPage\nhasPreviousPage\nstartCursor\n}\ntotalCount\n}\n}",
														"variables": "{\n\"filter\": \"\\\"OrdersModule_CustomerOrder_ShortText_0_0_0\\\":\\\"{{short1}}\\\"\"\n} "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "orders by long text",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C293768 Search order by long text\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.orders.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query orders ($filter: String, $sort: String, $cultureName: String, $userId: String) {\norders (filter: $filter, sort: $sort, cultureName: $cultureName, userId: $userId) {\nitems {\nid\ndynamicProperties {\nname\nvalue\nvalueType\ndynamicProperty {\nname\nlabel\nvalueType\n}\ndictionaryItem {\nlabel\nname\nid\n}\n}\n}\npageInfo {\nendCursor\nhasNextPage\nhasPreviousPage\nstartCursor\n}\ntotalCount\n}\n}",
														"variables": "{\n\"filter\": \"\\\"OrdersModule_CustomerOrder_LongText_0_0_0\\\":\\\"{{long1}}\\\"\"\n} "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "orders by integer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C293146 Search order by integer\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.orders.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query orders ($filter: String, $sort: String, $cultureName: String, $userId: String) {\norders (filter: $filter, sort: $sort, cultureName: $cultureName, userId: $userId) {\nitems {\nid\ndynamicProperties {\nname\nvalue\nvalueType\ndynamicProperty {\nname\nlabel\nvalueType\n}\ndictionaryItem {\nlabel\nname\nid\n}\n}\n}\npageInfo {\nendCursor\nhasNextPage\nhasPreviousPage\nstartCursor\n}\ntotalCount\n}\n}",
														"variables": "{\n\"filter\": \"ordersmodule_customerorder_integer_1_0_0:{{int2}}\",\n\"cultureName\": \"en-US\"\n} "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "orders by decimal",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C293147 Search order by decimal\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.orders.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query orders ($filter: String, $sort: String, $cultureName: String, $userId: String) {\norders (filter: $filter, sort: $sort, cultureName: $cultureName, userId: $userId) {\nitems {\nid\ndynamicProperties {\nname\nvalue\nvalueType\ndynamicProperty {\nname\nlabel\nvalueType\n}\ndictionaryItem {\nlabel\nname\nid\n}\n}\n}\npageInfo {\nendCursor\nhasNextPage\nhasPreviousPage\nstartCursor\n}\ntotalCount\n}\n}",
														"variables": "{\n\"filter\": \"ordersmodule_customerorder_decimal_1_0_0:{{decimal2}}\",\n\"cultureName\": \"en-US\"\n} "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "orders by bool",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C293140 Search orders by bool\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.orders.items).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query orders ($filter: String, $sort: String, $cultureName: String, $userId: String) {\norders (filter: $filter, sort: $sort, cultureName: $cultureName, userId: $userId) {\nitems {\nid\ndynamicProperties {\nname\nvalue\nvalueType\ndynamicProperty {\nname\nlabel\nvalueType\n}\ndictionaryItem {\nlabel\nname\nid\n}\n}\n}\npageInfo {\nendCursor\nhasNextPage\nhasPreviousPage\nstartCursor\n}\ntotalCount\n}\n}",
														"variables": "{\n\"filter\": \"ordersmodule_customerorder_boolean_0_0_0:{{bool1}}\",\n\"cultureName\": \"en-US\"\n} "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "orders by date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C293142 Search orders by datetime\", function () {\r",
															"    var data = pm.response.json();\r",
															"\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query orders ($filter: String, $sort: String, $cultureName: String, $userId: String) {\norders (filter: $filter, sort: $sort, cultureName: $cultureName, userId: $userId) {\nitems {\nid\ndynamicProperties {\nname\nvalue\nvalueType\ndynamicProperty {\nname\nlabel\nvalueType\n}\ndictionaryItem {\nlabel\nname\nid\n}\n}\n}\npageInfo {\nendCursor\nhasNextPage\nhasPreviousPage\nstartCursor\n}\ntotalCount\n}\n}",
														"variables": "{\n\"searchPhrase\": \"\\\"OrdersModule_CustomerOrder_DateTime_0_0_0\\\":\\\"{{data1}}\\\"\", \n\"cultureName\": \"en-US\"\n} "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "orders by html",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C293765 Search order by html\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.orders).to.be.not.empty;\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query orders ($filter: String, $sort: String, $cultureName: String, $userId: String) {\norders (filter: $filter, sort: $sort, cultureName: $cultureName, userId: $userId) {\nitems {\nid\ndynamicProperties {\nname\nvalue\nvalueType\ndynamicProperty {\nname\nlabel\nvalueType\n}\ndictionaryItem {\nlabel\nname\nid\n}\n}\n}\npageInfo {\nendCursor\nhasNextPage\nhasPreviousPage\nstartCursor\n}\ntotalCount\n}\n}",
														"variables": "{\n\"filter\": \"OrdersModule_CustomerOrder_Html_0_0_0:{{html1}}\",\n\"cultureName\": \"en-US\"\n} "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "orders by image",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C293766 Search order by decimal\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.orders).to.not.eql(null);\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query orders ($filter: String, $sort: String, $cultureName: String, $userId: String) {\norders (filter: $filter, sort: $sort, cultureName: $cultureName, userId: $userId) {\nitems {\nid\ndynamicProperties {\nname\nvalue\nvalueType\ndynamicProperty {\nname\nlabel\nvalueType\n}\ndictionaryItem {\nlabel\nname\nid\n}\n}\n}\npageInfo {\nendCursor\nhasNextPage\nhasPreviousPage\nstartCursor\n}\ntotalCount\n}\n}",
														"variables": "{\n\"filter\": \"\\\"ordersmodule_customerorder_image_0_0_0\\\":\\\"{{image}}\\\"\",\n\"cultureName\": \"en-US\"\n} "
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Order User [ID]",
									"item": [
										{
											"name": "Get user's orders by user id (User token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261153 Get user's orders by user id (User token)\", function () {\r",
															"     \r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"orderId4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"orderId5\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"orderId6\"));\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token2}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\r\n  orders(userId: \"{{userId2}}\") {\r\n    items {\r\n      id\r\n      status\r\n      number\r\n      createdDate\r\n      modifiedDate\r\n      customerId\r\n      customerName\r\n      shipments {\r\n        id\r\n        status\r\n        shipmentMethodCode\r\n        shipmentMethodOption\r\n        total {\r\n          amount\r\n        }\r\n      }\r\n      addresses {\r\n        id\r\n        firstName\r\n        lastName\r\n        line1\r\n        countryName\r\n        countryCode\r\n        postalCode\r\n      }\r\n      total {\r\n        amount\r\n      }\r\n      subTotal {\r\n        amount\r\n      }\r\n      discountTotal {\r\n        amount\r\n      }\r\n    }\r\n  }\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get user's orders by user id. User id does not belong to user (User token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261156 Get user's orders by user id. User id does not belong to user (User token)\", function () {  \r",
															"var json = pm.response.json();\r",
															"    pm.expect(json.data.orders.items).to.be.empty;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token1}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\r\n  orders(userId: \"{{userId2}}\") {\r\n    items {\r\n      id\r\n      status\r\n      number\r\n      createdDate\r\n      modifiedDate\r\n      createdBy\r\n      customerId\r\n      customerName\r\n      shipments {\r\n        id\r\n        status\r\n        shipmentMethodCode\r\n        shipmentMethodOption\r\n        total {\r\n          amount\r\n        }\r\n      }\r\n      addresses {\r\n        id\r\n        firstName\r\n        lastName\r\n        line1\r\n        countryName\r\n        countryCode\r\n        postalCode\r\n      }\r\n      total {\r\n        amount\r\n      }\r\n      subTotal {\r\n        amount\r\n      }\r\n      discountTotal {\r\n        amount\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get all user's orders (User token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261163 Get all user's orders (User token)\", function () {\r",
															"    pm.expect(pm.response.json().data.orders.totalCount).to.eql(3);\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"orderId4\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"orderId5\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"orderId6\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token2}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query {\r\n  orders {\r\n    totalCount\r\n    items {\r\n      id\r\n      status\r\n      number\r\n      createdDate\r\n      modifiedDate\r\n      customerId\r\n      customerName\r\n      shipments {\r\n        id\r\n        status\r\n        shipmentMethodCode\r\n        shipmentMethodOption\r\n        total {\r\n          amount\r\n        }\r\n      }\r\n      addresses {\r\n        id\r\n        firstName\r\n        lastName\r\n        line1\r\n        countryName\r\n        countryCode\r\n        postalCode\r\n      }\r\n      total {\r\n        amount\r\n      }\r\n      subTotal {\r\n        amount\r\n      }\r\n      discountTotal {\r\n        amount\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Change order status [ID]",
									"item": [
										{
											"name": "Check Order  Status = New",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check Status = New\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.order.status).to.be.eql(\"New\");\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query order($id: String, $cultureName: String) {\n  order(id: $id, cultureName: $cultureName) {\n    id\n    number\n    status\n     dynamicProperties {\n      name\n      value\n      valueType\n      dynamicProperty {\n        name\n        label\n        valueType\n      }\n      dictionaryItem {\n        label\n        name\n        id\n      }\n    }\n    items {\n      id\n      name\n      dynamicProperties {\n        dictionaryItem {\n          id\n          name\n          label\n        }\n        dynamicProperty {\n          valueType\n          id\n          label\n          name\n        }\n      }\n    }\n    shipments{\n        id\n    dynamicProperties {\n      name\n      value\n      valueType\n      dynamicProperty {\n        name\n        label\n        valueType\n      }\n      dictionaryItem {\n        label\n        name\n        id\n      }\n    }\n    }\n    inPayments{\n        id\n    dynamicProperties {\n      name\n      value\n      valueType\n      dynamicProperty {\n        name\n        label\n        valueType\n      }\n      dictionaryItem {\n        label\n        name\n        id\n      }\n    }\n    }\n  }\n}\n",
														"variables": "{\n  \"id\": \"{{orderId6}}\",\n  \"cultureName\": \"{{cultureName}}\"\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change order status to \"Pending\" by order id (User token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C327905 Change status to Pending by order id (User token)\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.changeOrderStatus).to.eql(true);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token2}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation changeOrderStatus {\r\n    changeOrderStatus (command: { orderId: \"{{orderId6}}\",  status: \"Pending\"})\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change order status to \"Processing\" by order id (Other user authorization token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C327906 Change order status to Pending by order id (Other user token)\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{Token1}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation changeOrderStatus {\r\n    changeOrderStatus (command: { orderId: \"{{orderId6}}\",  status: \"Processing\"})\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change order status to \"Pending\" by user id without Authorization",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C328710 Change order status to Pending by user id without Authorization\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation changeOrderStatus {\r\n    changeOrderStatus (command: { orderId: \"{{orderId6}}\",  status: \"Pending\"})\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change any order status to \"Processing\" by orderId (Admin token)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"C261167 Change any order status to Processing by orderId (Admin authorization token)\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.changeOrderStatus).to.eql(true);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableCookies": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation changeOrderStatus {\r\n    changeOrderStatus (command: { orderId: \"{{orderId6}}\",  status: \"Processing\"})\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Clear all",
									"item": [
										{
											"name": "Delete a product 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete a product 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId2}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete a product 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId3}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId3}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete user's Orders[admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Successful POST request\", function () {\r",
															"    pm.expect(pm.response.code).to.be.oneOf([204, 202]);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{url}}/api/order/customerOrders?ids={{orderId4}}&ids={{orderId5}}&ids={{orderId6}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"order",
														"customerOrders"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{orderId4}}"
														},
														{
															"key": "ids",
															"value": "{{orderId5}}"
														},
														{
															"key": "ids",
															"value": "{{orderId6}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete users [admin]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Delete users [admin]\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.deleteUsers).to.not.empty;\r",
															"    pm.expect(jsonData.data.deleteUsers.succeeded).to.be.equal(true);\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"userNames\":[\"{{userName1}}\",\"{{userName2}}\"]\r\n   \r\n  }\r\n}\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Contact_1",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId3}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Contact_2",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
														"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{AdminToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "FFC [ID]",
							"item": [
								{
									"name": "Prepare",
									"item": [
										{
											"name": "Add Default and Available to Electronics",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{AdminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"name\":\"Electronics\",\r\n   \"storeState\":\"Open\",\r\n   \"country\":\"USA\",\r\n   \"defaultLanguage\":\"en-US\",\r\n   \"defaultCurrency\":\"USD\",\r\n   \"catalog\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"creditCardSavePolicy\":false,\r\n   \"url\":\"https://vcplatform-storefront.qa.govirto.com\",\r\n   \"secureUrl\":\"\",\r\n   \"email\":\"noreply@mail.com\",\r\n   \"displayOutOfStock\":false,\r\n   \"mainFulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"additionalFulfillmentCenterIds\":[\r\n      \"{{AvaibleFFCId}}\"\r\n   ],\r\n   \"mainReturnsFulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"returnsFulfillmentCenterIds\":[\r\n      \"{{AvaibleFFCId}}\"\r\n   ],\r\n   \"languages\":[\r\n      \"de-DE\",\r\n      \"fr-FR\",\r\n      \"en-US\"\r\n   ],\r\n   \"currencies\":[\r\n      \"XPT\",\r\n      \"EUR\",\r\n      \"USD\"\r\n   ],\r\n   \"trustedGroups\":[\r\n      \"Clothing\"\r\n   ],\r\n   \"seoObjectType\":\"Store\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"semanticUrl\":\"Electronique\",\r\n         \"pageTitle\":\"Electronique\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"fr-FR\",\r\n         \"id\":\"15b0752d92cb47b69001f31b10127514\"\r\n      },\r\n      {\r\n         \"semanticUrl\":\"Electronics\",\r\n         \"pageTitle\":\"Electronics\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\",\r\n         \"id\":\"27546a48097b4e59900da9a4f5a17ac8\"\r\n      },\r\n      {\r\n         \"semanticUrl\":\"Electronics\",\r\n         \"pageTitle\":\"Electronics\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"de-DE\",\r\n         \"id\":\"cfecfc3f5ce5486eaaf52886da7c957c\"\r\n      }\r\n   ],\r\n   \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n   \"dynamicProperties\":[\r\n      {\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"Electronics\",\r\n               \"value\":\"\",\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"Default_Theme_Name_Property\",\r\n               \"propertyName\":\"DefaultThemeName\"\r\n            }\r\n         ],\r\n         \"name\":\"DefaultThemeName\",\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"valueType\":\"Undefined\",\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"Default_Theme_Name_Property\"\r\n      },\r\n      {\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"Electronics\",\r\n               \"value\":\"{\\n  \\\"Attributes\\\": [\\n    {\\n      \\\"Key\\\": \\\"Brand\\\",\\n      \\\"FacetSize\\\": null,\\n      \\\"Order\\\": 0,\\n      \\\"Values\\\": [\\n        {\\n          \\\"Id\\\": \\\"3DR\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Apple\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Asus\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Beats By Dr Dre\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"BLU\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"DJI\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"E-flite\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"HTC\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"LG\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Microsoft\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Onkyo\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Panasonic\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Parrot\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Powerbeats\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Samsung\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Sony\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"SunBriteTV\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Teac\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Vizio\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Walkera\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"xFold\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"Key\\\": \\\"Color\\\",\\n      \\\"FacetSize\\\": null,\\n      \\\"Order\\\": 1,\\n      \\\"Values\\\": [\\n        {\\n          \\\"Id\\\": \\\"Black\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Bronze\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Camo green\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Gold\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Gold Platinum\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Gray\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Green\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Red\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Ruby red\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Sheer Gold\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Silver\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Space Gray\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Titanium grey\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"White\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"White Pearl\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"Key\\\": \\\"Display size\\\",\\n      \\\"FacetSize\\\": null,\\n      \\\"Order\\\": 2,\\n      \\\"Values\\\": null\\n    }\\n  ],\\n  \\\"AttributeRanges\\\": [],\\n  \\\"Prices\\\": [\\n    {\\n      \\\"Key\\\": \\\"price\\\",\\n      \\\"Currency\\\": \\\"USD\\\",\\n      \\\"Order\\\": 3,\\n      \\\"Values\\\": [\\n        {\\n          \\\"Id\\\": \\\"under-100\\\",\\n          \\\"Lower\\\": null,\\n          \\\"Upper\\\": \\\"100\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"100-200\\\",\\n          \\\"Lower\\\": \\\"100\\\",\\n          \\\"Upper\\\": \\\"200\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"200-600\\\",\\n          \\\"Lower\\\": \\\"200\\\",\\n          \\\"Upper\\\": \\\"600\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"600-1000\\\",\\n          \\\"Lower\\\": \\\"600\\\",\\n          \\\"Upper\\\": \\\"1000\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"over-1000\\\",\\n          \\\"Lower\\\": \\\"1000\\\",\\n          \\\"Upper\\\": null,\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        }\\n      ]\\n    },\\n    {\\n      \\\"Key\\\": \\\"price\\\",\\n      \\\"Currency\\\": \\\"EUR\\\",\\n      \\\"Order\\\": 4,\\n      \\\"Values\\\": [\\n        {\\n          \\\"Id\\\": \\\"under-100\\\",\\n          \\\"Lower\\\": null,\\n          \\\"Upper\\\": \\\"100\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"100-200\\\",\\n          \\\"Lower\\\": \\\"100\\\",\\n          \\\"Upper\\\": \\\"200\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"200-600\\\",\\n          \\\"Lower\\\": \\\"200\\\",\\n          \\\"Upper\\\": \\\"600\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"600-1000\\\",\\n          \\\"Lower\\\": \\\"600\\\",\\n          \\\"Upper\\\": \\\"1000\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"over-1000\\\",\\n          \\\"Lower\\\": \\\"1000\\\",\\n          \\\"Upper\\\": null,\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        }\\n      ]\\n    },\\n    {\\n      \\\"Key\\\": \\\"price\\\",\\n      \\\"Currency\\\": \\\"XPT\\\",\\n      \\\"Order\\\": 5,\\n      \\\"Values\\\": []\\n    }\\n  ]\\n}\",\r\n               \"valueType\":\"LongText\",\r\n               \"propertyId\":\"VirtoCommerce.Catalog_FilteredBrowsing_Property\",\r\n               \"propertyName\":\"FilteredBrowsing\"\r\n            }\r\n         ],\r\n         \"name\":\"FilteredBrowsing\",\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"valueType\":\"Undefined\",\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"VirtoCommerce.Catalog_FilteredBrowsing_Property\"\r\n      }\r\n   ],\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.TaxCalculationEnabled\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.AllowAnonymousUsers\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.IsSpa\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.EmailVerificationEnabled\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.EnablePriceRoundingForTotalsCalculation\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|SEO\",\r\n         \"name\":\"Stores.SeoLinksType\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            \"None\",\r\n            \"Short\",\r\n            \"Collapsed\",\r\n            \"Long\"\r\n         ],\r\n         \"defaultValue\":\"Collapsed\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders|Orders\",\r\n         \"name\":\"Order.CustomerOrderNewNumberTemplate\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n\r\n\r\n\r\n\r\n\r\n\r\n   ],\r\n   \"typeName\":\"Store\",\r\n   \"createdDate\":\"2015-10-06T22:39:51.553Z\",\r\n   \"modifiedDate\":\"2021-11-29T10:45:34.43732Z\",\r\n   \"createdBy\":\"unknown\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"Electronics\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/stores",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"stores"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId1\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId2\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId2\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct2\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code2\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304561\",\r\n    \"name\": \"Product2\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Set ProductId3\", function(){\r",
															"    var jsonData = pm.response.json();\r",
															"pm.collectionVariables.set(\"ProductId3\", jsonData.id);\r",
															"pm.collectionVariables.set(\"Nameofproduct3\", jsonData.name);\r",
															"pm.collectionVariables.set(\"Code3\", jsonData.code);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DDR-234304562\",\r\n    \"name\": \"Product3\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":1000,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId1}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId1}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId2}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code2}}\",\r\n    \"name\": \"Product2\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 100,\r\n    \"minQuantity\": 1,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId2}}\",\r\n      \"list\": {{ProductPrice2}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId2}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId2}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add price to the product 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"productId\": \"{{ProductId3}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code3}}\",\r\n    \"name\": \"Product3\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product3\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product3\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product3\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId3}}\",\r\n      \"list\": {{ProductPrice3}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/products/{{ProductId3}}/prices",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"products",
														"{{ProductId3}}",
														"prices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product 1 Available",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product 1\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(132);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"fulfillmentCenterId\":\"{{AvaibleFFCId}}\",\r\n   \"fulfillmentCenterName\":\"{{AvailableFFCName}}\",\r\n   \"fulfillmentCenter\":{\r\n      \"name\":\"{{AvailableFFCName}}\",\r\n      \"description\":\"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n      \"address\":{\r\n         \"addressType\":0,\r\n         \"countryCode\":\"USA\",\r\n         \"countryName\":\"United States\",\r\n         \"city\":\"Chicago\",\r\n         \"postalCode\":\"60640\",\r\n         \"line1\":\"5400 N. Lakewood Avenue\",\r\n         \"regionName\":\"Illinois\",\r\n         \"phone\":\"(312) 222-3333\",\r\n         \"isDefault\":false\r\n      },\r\n      \"createdDate\":\"2018-05-05T05:55:00.64Z\",\r\n      \"modifiedDate\":\"2021-11-18T11:54:44.6718532Z\",\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\"\r\n   },\r\n   \"productId\":\"{{ProductId1}}\",\r\n   \"inStockQuantity\":132,\r\n   \"reservedQuantity\":0,\r\n   \"reorderMinQuantity\":0,\r\n   \"preorderQuantity\":0,\r\n   \"backorderQuantity\":0,\r\n   \"allowBackorder\":false,\r\n   \"allowPreorder\":false,\r\n   \"inTransit\":0,\r\n   \"status\":\"Disabled\",\r\n   \"createdDate\":\"0001-01-01T00:00:00Z\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product 2 Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product 2\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(132);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"fulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"fulfillmentCenterName\":\"{{DefaultFFCName}}\",\r\n   \"fulfillmentCenter\":{\r\n      \"name\":\"{{DefaultFFCName}}\",\r\n      \"description\":\"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n      \"address\":{\r\n         \"addressType\":0,\r\n         \"countryCode\":\"USA\",\r\n         \"countryName\":\"United States\",\r\n         \"city\":\"Chicago\",\r\n         \"postalCode\":\"60640\",\r\n         \"line1\":\"5400 N. Lakewood Avenue\",\r\n         \"regionName\":\"Illinois\",\r\n         \"phone\":\"(312) 222-3333\",\r\n         \"isDefault\":false\r\n      },\r\n      \"createdDate\":\"2018-05-05T05:55:00.64Z\",\r\n      \"modifiedDate\":\"2021-11-18T11:54:44.6718532Z\",\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\"\r\n   },\r\n   \"productId\":\"{{ProductId2}}\",\r\n   \"inStockQuantity\":132,\r\n   \"reservedQuantity\":0,\r\n   \"reorderMinQuantity\":0,\r\n   \"preorderQuantity\":0,\r\n   \"backorderQuantity\":0,\r\n   \"allowBackorder\":false,\r\n   \"allowPreorder\":false,\r\n   \"inTransit\":0,\r\n   \"status\":\"Disabled\",\r\n   \"createdDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"modifiedDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId2}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add stock qty to the product 3 Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Add stock qty to the product 2\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.inStockQuantity).to.eql(132);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"fulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"fulfillmentCenterName\":\"{{DefaultFFCName}}\",\r\n   \"fulfillmentCenter\":{\r\n      \"name\":\"{{DefaultFFCName}}\",\r\n      \"description\":\"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n      \"address\":{\r\n         \"addressType\":0,\r\n         \"countryCode\":\"USA\",\r\n         \"countryName\":\"United States\",\r\n         \"city\":\"Chicago\",\r\n         \"postalCode\":\"60640\",\r\n         \"line1\":\"5400 N. Lakewood Avenue\",\r\n         \"regionName\":\"Illinois\",\r\n         \"phone\":\"(312) 222-3333\",\r\n         \"isDefault\":false\r\n      },\r\n      \"createdDate\":\"2018-05-05T05:55:00.64Z\",\r\n      \"modifiedDate\":\"2021-11-18T11:54:44.6718532Z\",\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\"\r\n   },\r\n   \"productId\":\"{{ProductId3}}\",\r\n   \"inStockQuantity\":132,\r\n   \"reservedQuantity\":0,\r\n   \"reorderMinQuantity\":0,\r\n   \"preorderQuantity\":0,\r\n   \"backorderQuantity\":0,\r\n   \"allowBackorder\":false,\r\n   \"allowPreorder\":false,\r\n   \"inTransit\":0,\r\n   \"status\":\"Disabled\",\r\n   \"createdDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"modifiedDate\":\"2021-11-29T11:56:36.9235788Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/inventory/products/{{ProductId3}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"inventory",
														"products",
														"{{ProductId3}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Index products",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Check Index\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 1000);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId2}}\", \"{{ProductId1}}\",\"{{ProductId3}}\"\r\n        ]\r\n    }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/search/indexes/index",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"search",
														"indexes",
														"index"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "FFC",
									"item": [
										{
											"name": "Get Cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Set cartId1, userId3\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
															"    pm.collectionVariables.set(\"userId3\", jsonData.data.cart.customerId);\r",
															"});\r",
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId3}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Checking that default FFC returns (Add Items)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Checking that default FFC returns\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addItemsCart.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
															"pm.expect(jsonData.data.addItemsCart.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
															";\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n    \r\n         items {\r\n      name\r\n      fulfillmentCenterId\r\n      fulfillmentCenterName\r\n    }\r\n        \r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId3}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [\r\n   \r\n    {\r\n        \"productId\": \"{{ProductId2}}\",\r\n        \"quantity\": 3\r\n    }\r\n    ]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check min and max quantity",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Checking minQuantity = 1 and maxQuantity = 100\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.product.minQuantity).to.be.equal(0);\r",
															"      pm.expect(jsonData.data.product.maxQuantity).to.be.equal(1000);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"setTimeout(() => {}, 3000); "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query product($id: String!, $storeId: String!, $userId: String, $currencyCode: String, $cultureName: String) {\r\n    product (id: $id, storeId: $storeId, userId: $userId, currencyCode: $currencyCode, cultureName: $cultureName) {\r\n      minQuantity\r\n      maxQuantity\r\n    }\r\n}\r\n\r\n\r\n",
														"variables": "{\r\n   \"id\": \"{{ProductId1}}\",\r\n   \"storeId\": \"{{storeId}}\",\r\n  \"currencyCode\": \"{{currencyCode}}\",\r\n  \"cultureName\": \"{{cultureName}}\"\r\n  }\r\n"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get fulfillment center of products - Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Get fulfillment center of products - Default\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.cart.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
															"    pm.expect(jsonData.data.cart.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId3}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{ items{\r\n      product{\r\n        name\r\n      }\r\n      fulfillmentCenterId\r\n      fulfillmentCenterName\r\n    }\r\n  }\r\n\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Order From Cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"CreateOrderFromCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.collectionVariables.set(\"orderId1\", json.data.createOrderFromCart.id);\r",
															"    pm.expect(json.data.createOrderFromCart).to.be.not.empty;\r",
															"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															"pm.test(\"Check that default FFC returns while order creation\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.createOrderFromCart.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
															"    pm.expect(jsonData.data.createOrderFromCart.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\ncreateOrderFromCart (command: $command) {\nid\nitems{\nid\nname\nquantity\nfulfillmentCenterId\nfulfillmentCenterName\n}\n}\n}",
														"variables": "{\n\"command\": {\n    \"cartId\": \"{{cartId1}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check Order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C291227 Get fulfillment center of products - Default (checkOrder)\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.order.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
															"    pm.expect(jsonData.data.order.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n\r\nitems{\r\nid\r\nname\r\nquantity\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\n}\r\n   \r\n  \r\n  }\r\n}\r\n",
														"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Set cartId1, userId3\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
															"    pm.collectionVariables.set(\"userId3\", jsonData.data.cart.customerId);\r",
															"});\r",
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId3}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Checking that available FFC returns (Add items)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"pm.test(\"Checking that available FFC returns\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.addItemsCart.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
															"    pm.expect(jsonData.data.addItemsCart.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n    \r\n         items {\r\n      name\r\n      fulfillmentCenterId\r\n      fulfillmentCenterName\r\n    }\r\n        \r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId3}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [\r\n   \r\n    {\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 3\r\n    }\r\n    ]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get fulfillment center of products - Available",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Get fulfillment center of products - Available\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.cart.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
															"    pm.expect(jsonData.data.cart.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId3}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{ items{\r\n      product{\r\n        name\r\n      }\r\n      fulfillmentCenterId\r\n      fulfillmentCenterName\r\n    }\r\n  }\r\n\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Order From Cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"CreateOrderFromCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.collectionVariables.set(\"orderId1\", json.data.createOrderFromCart.id);\r",
															"    pm.expect(json.data.createOrderFromCart).to.be.not.empty;\r",
															"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});\r",
															"pm.test(\"Check that available FFC returns while order creation\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.createOrderFromCart.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
															"    pm.expect(jsonData.data.createOrderFromCart.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\ncreateOrderFromCart (command: $command) {\nid\nitems{\nid\nname\nquantity\nfulfillmentCenterId\nfulfillmentCenterName\n}\n}\n}",
														"variables": "{\n\"command\": {\n    \"cartId\": \"{{cartId1}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check Order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"C291228 Get fulfillment center of products - Available (checkOrder)\", function(){\r",
															"var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData.data.order.items[0].fulfillmentCenterId).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
															"    pm.expect(jsonData.data.order.items[0].fulfillmentCenterName).to.be.equal(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n\r\nitems{\r\nid\r\nname\r\nquantity\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\n}\r\n   \r\n  \r\n  }\r\n}\r\n",
														"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Set cartId1, userId3\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
															"    pm.collectionVariables.set(\"userId3\", jsonData.data.cart.customerId);\r",
															"});\r",
															"pm.test(\"Check cart by user ID\", function () {\r",
															"    var data = pm.response.json();\r",
															"    pm.expect(data.data.cart).to.not.eql(null);\r",
															"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
															"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
															"    pm.expect(data.errors).to.be.undefined;\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"clearCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.expect(json.data.clearCart).to.be.not.empty;\r",
															"    pm.expect(json.data.clearCart.total.amount).to.be.equal(0.00);\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation clearCart ($command: InputClearCartType!) {\nclearCart (command: $command) {\nid\ntotal{\namount\n}\n}\n}",
														"variables": "{\n  \"command\": {\n    \"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId3}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Checking that both default and available FFC returned (Add  item)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Available&Default in cart\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
															"});\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n    \r\n         items {\r\n      name\r\n      fulfillmentCenterId\r\n      fulfillmentCenterName\r\n    }\r\n        \r\n    }\r\n}",
														"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId3}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [\r\n   \r\n    {\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 3\r\n    },\r\n        {\r\n        \"productId\": \"{{ProductId3}}\",\r\n        \"quantity\": 3\r\n    }\r\n    ]\r\n  }\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get filfillment center of product - Default and Available",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Available&Default in cart (Get fulfillment center of product)\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId3}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{ items{\r\n      product{\r\n        name\r\n      }\r\n      fulfillmentCenterId\r\n      fulfillmentCenterName\r\n    }\r\n  }\r\n\r\n}",
														"variables": ""
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Order From Cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"CreateOrderFromCart\", function () {\r",
															"    var json = pm.response.json();\r",
															"    pm.collectionVariables.set(\"orderId1\", json.data.createOrderFromCart.id);\r",
															"    pm.expect(json.data.createOrderFromCart).to.be.not.empty;\r",
															"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
															"    pm.expect(json.errors).to.be.undefined;\r",
															"});\r",
															"\r",
															"pm.test(\"Check that both default and available returned while order creation \", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
															"});\r",
															"    \r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\ncreateOrderFromCart (command: $command) {\nid\nitems{\nid\nname\nquantity\nfulfillmentCenterId\nfulfillmentCenterName\n}\n}\n}",
														"variables": "{\n\"command\": {\n    \"cartId\": \"{{cartId1}}\"\n  }\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check Order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"C291375 Available&Default in cart (CheckOrder)\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCId\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"AvaibleFFCName\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCId\"));\r",
															"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"DefaultFFCName\"));\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "graphql",
													"graphql": {
														"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n\r\nitems{\r\nid\r\nname\r\nquantity\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\n}\r\n   \r\n  \r\n  }\r\n}\r\n",
														"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
													}
												},
												"url": {
													"raw": "{{url}}/graphql",
													"host": [
														"{{url}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Clear all",
									"item": [
										{
											"name": "Delete product_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete  product_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId2}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId2}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete  product_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/catalog/products?ids={{ProductId3}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"catalog",
														"products"
													],
													"query": [
														{
															"key": "ids",
															"value": "{{ProductId3}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{AdminToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Payment [ID]",
							"item": [
								{
									"name": "Payment initialization+ Add and Update",
									"item": [
										{
											"name": "Preparatian",
											"item": [
												{
													"name": "Create product",
													"item": [
														{
															"name": "Create product_1",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set ProductId1\", function(){\r",
																			"    var jsonData = pm.response.json();\r",
																			"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
																			"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
																			"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
																			"});\r",
																			"\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Product1\",\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":0,\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/api/catalog/products",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"api",
																		"catalog",
																		"products"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add price to the product_1",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(204);\r",
																			"});\r",
																			"\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": false,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/api/products/{{ProductId1}}/prices",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"api",
																		"products",
																		"{{ProductId1}}",
																		"prices"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add stock qty to the product_1",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Add stock qty to the product\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/api/inventory/products/{{ProductId10}}",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"api",
																		"inventory",
																		"products",
																		"{{ProductId10}}"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "Create Users 1,2",
													"item": [
														{
															"name": "Сreate contact_1",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set contactId\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																		"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\"\n}\n}\n\n"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create user_1",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Create user\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.expect(jsonData.data.createUser.succeeded).to.equal(true);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation createUser ($command: InputCreateUserType!) {\r\n    createUser (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n      \r\n    }\r\n}",
																		"variables": "{\r\n\"command\": {\r\n\"applicationUser\": { \r\n\"id\":\"{{$randomUUID}}\",      \r\n\"createdBy\": \"AutoTestPostman\",\r\n\"email\": \"{{$randomEmail}}\",\r\n\"password\":\"{{Password}}\",\r\n\"userName\": \"{{userName1}}\",\r\n\"userType\": \"Customer\",\r\n\"storeId\":\"{{storeId}}\",\r\n\"memberId\":\"{{contactId1}}\"\r\n}\r\n}\r\n}\r\n"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Set сustomerId1",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set userId1\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"userId1\", jsonData.data.contact.securityAccounts[0].id);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n  name\n  securityAccounts{\n      id\n      userName\n      \n  }\n  }\n    }\n",
																		"variables": "{\n  \"id\": \"{{contactId1}}\"\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Get user_1 token",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    \r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set user token\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"Token1\", jsonData.access_token);\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"setTimeout(() => {}, 1000); "
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "grant_type=password&scope=offline_access&username={{userName1}}&password={{Password}}",
																	"options": {
																		"raw": {
																			"language": "text"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/connect/token",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"connect",
																		"token"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Сreate contact_2",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set contactId\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"contactId2\", jsonData.data.createContact.id);\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																		"variables": "{\n\"command\": {\n\"name\": \"Contact2\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact2\",\n\"firstName\": \"Contact2\",\n\"lastName\": \"Contact2\"\n}\n}\n\n"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create user_2",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Create user\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.expect(jsonData.data.createUser.succeeded).to.equal(true);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation createUser ($command: InputCreateUserType!) {\r\n    createUser (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n      \r\n    }\r\n}",
																		"variables": "{\r\n\"command\": {\r\n\"applicationUser\": { \r\n\"id\":\"{{$randomUUID}}\",      \r\n\"createdBy\": \"AutoTestPostman\",\r\n\"email\": \"{{$randomEmail}}\",\r\n\"password\":\"{{Password}}\",\r\n\"userName\": \"{{userName2}}\",\r\n\"userType\": \"Customer\",\r\n\"storeId\":\"{{storeId}}\",\r\n\"memberId\":\"{{contactId2}}\"\r\n}\r\n}\r\n}\r\n"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Set сustomerId2",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set userId2\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"userId2\", jsonData.data.contact.securityAccounts[0].id);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n  securityAccounts{\n      id\n      userName\n      \n  }\n  }\n    }\n",
																		"variables": "{\n  \"id\": \"{{contactId2}}\"\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Get user_2 token",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set user token\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"Token2\", jsonData.access_token);\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"setTimeout(() => {}, 1000); "
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "grant_type=password&scope=offline_access&username={{userName2}}&password={{Password}}",
																	"options": {
																		"raw": {
																			"language": "text"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/connect/token",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"connect",
																		"token"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "Create orders for user_1",
													"item": [
														{
															"name": "Get cart",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set cartId1, userId1\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId1}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																		"variables": ""
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add item",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Item added\", function(){\r",
																			"var jsonData = pm.response.json();\r",
																			"pm.expect(jsonData.data.addItemsCart.items[0]).to.be.not.empty;\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        total{amount}\r\n        items {\r\n            productId,\r\n            name,\r\n            quantity\r\n        \r\n        }\r\n        validationErrors(ruleSet:\"addItemsCart\"){errorMessage}\r\n        \r\n    }\r\n}",
																		"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 1\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId2}}\",\r\n        \"quantity\": 1\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId3}}\",\r\n        \"quantity\": 1\r\n    }\r\n    ]\r\n  }\r\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add cart payment",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Payment added\", function(){\r",
																			"    var jSonData = pm.response.json();\r",
																			"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
																			"    pm.expect(jSonData.errors).to.be.undefined;\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																		"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"PaddressCart@email.com\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add cart shipment",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Shipment added\", function(){\r",
																			"    var jSonData = pm.response.json();\r",
																			"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
																			"    pm.expect(jSonData.errors).to.be.undefined;\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																		"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart@email.com\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add cart address",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Cart address added\", function () {\r",
																			"    var json = pm.response.json();\r",
																			"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
																			"    pm.expect(json.errors).to.be.undefined;\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																		"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"City 18\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart@emai.ru\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create order from cart",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set orderId1, paymentId1\", function () {\r",
																			"    var json = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"orderId1\", json.data.createOrderFromCart.id);\r",
																			"    pm.collectionVariables.set(\"paymentId1\", json.data.createOrderFromCart.inPayments[0].id);\r",
																			"});\r",
																			"\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{AdminToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\ncreateOrderFromCart (command: $command) {\nid\ninPayments{id}\ncustomerId\ncustomerName\nitems{\nid\nname\nquantity\nfulfillmentCenterId\nfulfillmentCenterName\n}\ntotal{\namount\n}\ndiscountTotal{\namount\n}\ntaxTotal{\namount\n}\ntotal{\namount\n}\n}\n}",
																		"variables": "{\n\"command\": {\n    \"cartId\": \"{{cartId1}}\"\n  }\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Index order",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{AdminToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[{\"documentType\":\"CustomerOrder\",\"documentIds\":[\"{{orderId1}}\",\"{{orderId2}}\",\"{{orderId3}}\"]}]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/api/search/indexes/index",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"api",
																		"search",
																		"indexes",
																		"index"
																	]
																}
															},
															"response": []
														}
													]
												}
											]
										},
										{
											"name": "Anon",
											"item": [
												{
													"name": "Initialize payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342122 Initialize payment - access denied for anon\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.errors).not.empty;\r",
																	"    pm.expect(pm.response.text()).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");  \r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\ninitializePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"{{paymentId1}}\"\n}) {\nisSuccess\nerrorMessage\nstoreId\npaymentId\norderId\norderNumber\npaymentMethodCode\npaymentActionType\nactionRedirectUrl\nactionHtmlForm\npublicParameters {\n  key\n  value\n}\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update order payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342291 Update order payment - access denied for anon\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.errors).not.empty;\r",
																	"    pm.expect(pm.response.text()).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");  \r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateOrderPayment ($command: InputAddOrUpdateOrderPaymentType!){\naddOrUpdateOrderPayment(command:$command){\ncustomerName\ncustomerId\ninPayments{\nid\nsum{amount}\ncurrency{code}\nbillingAddress{\n  id\n  countryCode\n  countryName\n  city\n  line1\n  line2\n  email\n  firstName\n  lastName\n  middleName\n\n}\n}\n}\n}",
																"variables": "{\r\n\"command\":{\r\n\"orderId\":\"{{orderId1}}\",\r\n\"payment\": {\r\n  \"id\":\"{{paymentId1}}\",\r\n  \"outerId\": \"7771222\",\r\n  \"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\r\n  \"currency\": \"usd\",\r\n  \"amount\": 19,\r\n\"billingAddress\": {\r\n\"id\": \"update\",\r\n\"city\": \"Togliattyu7pdate\",\r\n\"countryCode\": \"rus\",\r\n\"countryName\": \"Russia\",\r\n\"email\": \"updat777e@mail.ru\",\r\n\"firstName\": \"firstName3 update\",\r\n\"lastName\": \"lastName777773 update\",\r\n\"line1\": \"line31 update\",\r\n\"line2\": \"line23 update\",\r\n\"middleName\": \"middl3eName update3333\",\r\n\"zip\": \"1234 u3pdate\"\r\n}\r\n}\r\n\r\n}\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add order payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342290 Add order payment - access denied for anon\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.errors).not.empty;\r",
																	"    pm.expect(pm.response.text()).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");  \r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const rnd = (len, chars='abcdefghijklmnopqrstuvwxyz0123456789') => [...Array(len)].map(() => chars.charAt(Math.floor(Math.random() * chars.length))).join('')\r",
																	"\r",
																	"\r",
																	"pm.collectionVariables.set(\"paymentId2\", rnd(36))"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateOrderPayment ($command: InputAddOrUpdateOrderPaymentType!){\naddOrUpdateOrderPayment(command:$command){\ncustomerName\ncustomerId\ninPayments{\nid\nsum{amount}\ncurrency{code}\nbillingAddress{\n  id\n  countryCode\n  countryName\n  city\n  line1\n  line2\n  email\n  firstName\n  lastName\n  middleName\n\n}\n}\n}\n}",
																"variables": "{\r\n\"command\":{\r\n\"orderId\":\"{{orderId1}}\",\r\n\"payment\": {\r\n  \"id\":\"{{paymentId2}}\",\r\n  \"outerId\": \"7771222\",\r\n  \"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\r\n  \"currency\": \"usd\",\r\n  \"amount\": 19,\r\n\"billingAddress\": {\r\n\"id\": \"update\",\r\n\"city\": \"Togliattyu7pdate\",\r\n\"countryCode\": \"rus\",\r\n\"countryName\": \"Russia\",\r\n\"email\": \"updat777e@mail.ru\",\r\n\"firstName\": \"firstName3 update\",\r\n\"lastName\": \"lastName777773 update\",\r\n\"line1\": \"line31 update\",\r\n\"line2\": \"line23 update\",\r\n\"middleName\": \"middl3eName update3333\",\r\n\"zip\": \"1234 u3pdate\"\r\n}\r\n}\r\n\r\n}\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "noauth"
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "User",
											"item": [
												{
													"name": "Initialize payment order belong to user",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342123 Sucessful payment initialize for order owner\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.initializePayment.isSuccess).to.be.true;\r",
																	"    pm.expect(json.data.initializePayment.errorMessage).to.be.null;\r",
																	"\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\ninitializePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"{{paymentId1}}\"\n}) {\nisSuccess\nerrorMessage\nstoreId\npaymentId\norderId\norderNumber\npaymentMethodCode\npaymentActionType\nactionRedirectUrl\nactionHtmlForm\npublicParameters {\n  key\n  value\n}\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add order payment [owner]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342288 Add order payment successful for owner\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"    pm.expect((json.data.addOrUpdateOrderPayment.inPayments).length).to.be.equal(2);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const rnd = (len, chars='abcdefghijklmnopqrstuvwxyz0123456789') => [...Array(len)].map(() => chars.charAt(Math.floor(Math.random() * chars.length))).join('')\r",
																	"\r",
																	"\r",
																	"pm.collectionVariables.set(\"paymentId2\", rnd(36))"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateOrderPayment ($command: InputAddOrUpdateOrderPaymentType!){\naddOrUpdateOrderPayment(command:$command){\ncustomerName\ncustomerId\ninPayments{\nid\nsum{amount}\ncurrency{code}\nbillingAddress{\n  id\n  countryCode\n  countryName\n  city\n  line1\n  line2\n  email\n  firstName\n  lastName\n  middleName\n\n}\n}\n}\n}",
																"variables": "{\r\n\"command\":{\r\n\"orderId\":\"{{orderId1}}\",\r\n\"payment\": {\r\n  \"id\":\"{{paymentId2}}\",\r\n  \"outerId\": \"7771222\",\r\n  \"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\r\n  \"currency\": \"usd\",\r\n  \"amount\": 19,\r\n\"billingAddress\": {\r\n\"id\": \"update\",\r\n\"city\": \"Togliattyu7pdate\",\r\n\"countryCode\": \"rus\",\r\n\"countryName\": \"Russia\",\r\n\"email\": \"updat777e@mail.ru\",\r\n\"firstName\": \"firstName3 update\",\r\n\"lastName\": \"lastName777773 update\",\r\n\"line1\": \"line31 update\",\r\n\"line2\": \"line23 update\",\r\n\"middleName\": \"middl3eName update3333\",\r\n\"zip\": \"1234 u3pdate\"\r\n}\r\n}\r\n\r\n}\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update order payment [owner]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342289 Update order payment successful for owner\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"    pm.expect((json.data.addOrUpdateOrderPayment.inPayments).length).to.be.equal(2);\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"city1\"));\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateOrderPayment ($command: InputAddOrUpdateOrderPaymentType!){\naddOrUpdateOrderPayment(command:$command){\ncustomerName\ncustomerId\ninPayments{\nid\nsum{amount}\ncurrency{code}\nbillingAddress{\n  id\n  countryCode\n  countryName\n  city\n  line1\n  line2\n  email\n  firstName\n  lastName\n  middleName\n\n}\n}\n}\n}",
																"variables": "{\r\n\"command\":{\r\n\"orderId\":\"{{orderId1}}\",\r\n\"payment\": {\r\n  \"id\":\"{{paymentId2}}\",\r\n  \"outerId\": \"7771222\",\r\n  \"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\r\n  \"currency\": \"usd\",\r\n  \"amount\": 19,\r\n\"billingAddress\": {\r\n\"id\": \"update\",\r\n\"city\": \"{{city1}}\",\r\n\"countryCode\": \"rus\",\r\n\"countryName\": \"Russia\",\r\n\"email\": \"updat777e@mail.ru\",\r\n\"firstName\": \"firstName3 update\",\r\n\"lastName\": \"lastName777773 update\",\r\n\"line1\": \"line31 update\",\r\n\"line2\": \"line23 update\",\r\n\"middleName\": \"middl3eName update3333\",\r\n\"zip\": \"1234 u3pdate\"\r\n}\r\n}\r\n\r\n}\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Initialize payment order not belong to user",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342125 Access denied for non-order owner\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.errors).not.empty;\r",
																	"    pm.expect(pm.response.text()).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");  \r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token2}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\ninitializePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"{{paymentId1}}\"\n}) {\nisSuccess\nerrorMessage\nstoreId\npaymentId\norderId\norderNumber\npaymentMethodCode\npaymentActionType\nactionRedirectUrl\nactionHtmlForm\npublicParameters {\n  key\n  value\n}\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update order payment [not owner]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C346053 Update order payment - access denied for not owner\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.errors).not.empty;\r",
																	"    pm.expect(pm.response.text()).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");  \r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token2}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateOrderPayment ($command: InputAddOrUpdateOrderPaymentType!){\naddOrUpdateOrderPayment(command:$command){\ncustomerName\ncustomerId\ninPayments{\nid\nsum{amount}\ncurrency{code}\nbillingAddress{\n  id\n  countryCode\n  countryName\n  city\n  line1\n  line2\n  email\n  firstName\n  lastName\n  middleName\n\n}\n}\n}\n}",
																"variables": "{\r\n\"command\":{\r\n\"orderId\":\"{{orderId1}}\",\r\n\"payment\": {\r\n  \"id\":\"{{paymentId2}}\",\r\n  \"outerId\": \"7771222\",\r\n  \"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\r\n  \"currency\": \"usd\",\r\n  \"amount\": 19,\r\n\"billingAddress\": {\r\n\"id\": \"update\",\r\n\"city\": \"{{city1}}\",\r\n\"countryCode\": \"rus\",\r\n\"countryName\": \"Russia\",\r\n\"email\": \"updat777e@mail.ru\",\r\n\"firstName\": \"firstName3 update\",\r\n\"lastName\": \"lastName777773 update\",\r\n\"line1\": \"line31 update\",\r\n\"line2\": \"line23 update\",\r\n\"middleName\": \"middl3eName update3333\",\r\n\"zip\": \"1234 u3pdate\"\r\n}\r\n}\r\n\r\n}\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add order payment [not owner]",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C346052 Add order payment - access denied for anon\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.errors).not.empty;\r",
																	"    pm.expect(pm.response.text()).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");  \r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const rnd = (len, chars='abcdefghijklmnopqrstuvwxyz0123456789') => [...Array(len)].map(() => chars.charAt(Math.floor(Math.random() * chars.length))).join('')\r",
																	"\r",
																	"\r",
																	"pm.collectionVariables.set(\"paymentId2\", rnd(36))"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token2}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateOrderPayment ($command: InputAddOrUpdateOrderPaymentType!){\naddOrUpdateOrderPayment(command:$command){\ncustomerName\ncustomerId\ninPayments{\nid\nsum{amount}\ncurrency{code}\nbillingAddress{\n  id\n  countryCode\n  countryName\n  city\n  line1\n  line2\n  email\n  firstName\n  lastName\n  middleName\n\n}\n}\n}\n}",
																"variables": "{\r\n\"command\":{\r\n\"orderId\":\"{{orderId1}}\",\r\n\"payment\": {\r\n  \"id\":\"{{paymentId2}}\",\r\n  \"outerId\": \"7771222\",\r\n  \"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\r\n  \"currency\": \"usd\",\r\n  \"amount\": 19,\r\n\"billingAddress\": {\r\n\"id\": \"update\",\r\n\"city\": \"Togliattyu7pdate\",\r\n\"countryCode\": \"rus\",\r\n\"countryName\": \"Russia\",\r\n\"email\": \"updat777e@mail.ru\",\r\n\"firstName\": \"firstName3 update\",\r\n\"lastName\": \"lastName777773 update\",\r\n\"line1\": \"line31 update\",\r\n\"line2\": \"line23 update\",\r\n\"middleName\": \"middl3eName update3333\",\r\n\"zip\": \"1234 u3pdate\"\r\n}\r\n}\r\n\r\n}\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{Token1}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "Admin",
											"item": [
												{
													"name": "initialize payment - not existed payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342120 Can't find payment in order\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.initializePayment.errorMessage).to.eql(\"Can't find payment in order\");\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\ninitializePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"not existed payment\"\n}) {\nisSuccess\nerrorMessage\nstoreId\npaymentId\norderId\norderNumber\npaymentMethodCode\npaymentActionType\nactionRedirectUrl\nactionHtmlForm\npublicParameters {\n  key\n  value\n}\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "initialize payment - not existed order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342121 Can't find customer order\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.initializePayment.errorMessage).to.eql(\"Can't find customer order\");\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\ninitializePayment(command: {\norderId: \"not existed order\",\npaymentId: \"{{paymentId1}}\"\n}) {\nisSuccess\nerrorMessage\nstoreId\npaymentId\norderId\norderNumber\npaymentMethodCode\npaymentActionType\nactionRedirectUrl\nactionHtmlForm\npublicParameters {\n  key\n  value\n}\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add order payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342286 Add order payment successful\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"    pm.expect((json.data.addOrUpdateOrderPayment.inPayments).length).to.be.equal(3);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const rnd = (len, chars='abcdefghijklmnopqrstuvwxyz0123456789') => [...Array(len)].map(() => chars.charAt(Math.floor(Math.random() * chars.length))).join('')\r",
																	"\r",
																	"\r",
																	"pm.collectionVariables.set(\"paymentId2\", rnd(36))"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateOrderPayment ($command: InputAddOrUpdateOrderPaymentType!){\naddOrUpdateOrderPayment(command:$command){\ncustomerName\ncustomerId\ninPayments{\nid\nsum{amount}\ncurrency{code}\nbillingAddress{\n  id\n  countryCode\n  countryName\n  city\n  line1\n  line2\n  email\n  firstName\n  lastName\n  middleName\n\n}\n}\n}\n}",
																"variables": "{\r\n\"command\":{\r\n\"orderId\":\"{{orderId1}}\",\r\n\"payment\": {\r\n  \"id\":\"{{paymentId2}}\",\r\n  \"outerId\": \"7771222\",\r\n  \"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\r\n  \"currency\": \"usd\",\r\n  \"amount\": 19,\r\n\"billingAddress\": {\r\n\"id\": \"update\",\r\n\"city\": \"Togliattyu7pdate\",\r\n\"countryCode\": \"rus\",\r\n\"countryName\": \"Russia\",\r\n\"email\": \"updat777e@mail.ru\",\r\n\"firstName\": \"firstName3 update\",\r\n\"lastName\": \"lastName777773 update\",\r\n\"line1\": \"line31 update\",\r\n\"line2\": \"line23 update\",\r\n\"middleName\": \"middl3eName update3333\",\r\n\"zip\": \"1234 u3pdate\"\r\n}\r\n}\r\n\r\n}\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update order payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342287 Update order payment successful\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.errors).to.be.undefined;\r",
																	"    pm.expect((json.data.addOrUpdateOrderPayment.inPayments).length).to.be.equal(3);\r",
																	"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"city1\"));\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation addOrUpdateOrderPayment ($command: InputAddOrUpdateOrderPaymentType!){\naddOrUpdateOrderPayment(command:$command){\ncustomerName\ncustomerId\ninPayments{\nid\nsum{amount}\ncurrency{code}\nbillingAddress{\n  id\n  countryCode\n  countryName\n  city\n  line1\n  line2\n  email\n  firstName\n  lastName\n  middleName\n\n}\n}\n}\n}",
																"variables": "{\r\n\"command\":{\r\n\"orderId\":\"{{orderId1}}\",\r\n\"payment\": {\r\n  \"id\":\"{{paymentId2}}\",\r\n  \"outerId\": \"7771222\",\r\n  \"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\r\n  \"currency\": \"usd\",\r\n  \"amount\": 19,\r\n\"billingAddress\": {\r\n\"id\": \"update\",\r\n\"city\": \"{{city1}}\",\r\n\"countryCode\": \"rus\",\r\n\"countryName\": \"Russia\",\r\n\"email\": \"updat777e@mail.ru\",\r\n\"firstName\": \"firstName3 update\",\r\n\"lastName\": \"lastName777773 update\",\r\n\"line1\": \"line31 update\",\r\n\"line2\": \"line23 update\",\r\n\"middleName\": \"middl3eName update3333\",\r\n\"zip\": \"1234 u3pdate\"\r\n}\r\n}\r\n\r\n}\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update payment status  = \"Paid\" in order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"customerId\":\"{{userId1}}\",\r\n   \"customerName\":\"{{userName1}}\",\r\n   \"storeId\":\"{{storeId}}\",\r\n   \"shoppingCartId\":\"{{cartId1}}\",\r\n   \"isPrototype\":false,\r\n   \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.CustomerOrder\",\r\n   \"addresses\":[\r\n      {\r\n         \"addressType\":\"Billing\",\r\n         \"key\":\"{{$randomUUID}}\",\r\n         \"name\":\"First name address\",\r\n         \"organization\":\"OrganizationTestName\",\r\n         \"countryCode\":\"RU\",\r\n         \"countryName\":\"Russia\",\r\n         \"city\":\"City 17\",\r\n         \"postalCode\":\"111111\",\r\n         \"line1\":\"Address Line 1\",\r\n         \"line2\":\"Address line 2\",\r\n         \"regionId\":\"Test region\",\r\n         \"regionName\":\"Region 15\",\r\n         \"firstName\":\"First test name\",\r\n         \"lastName\":\"Last name test\",\r\n         \"phone\":\"88005553535\",\r\n         \"email\":\"PaddressCart@email.com\",\r\n         \"isDefault\":false\r\n      }\r\n   ],\r\n   \"inPayments\":[\r\n      {\r\n         \"customerId\":\"{{userId1}}\",\r\n         \"paymentStatus\":\"Paid\",\r\n         \"price\":0,\r\n         \"priceWithTax\":0,\r\n         \"total\":0,\r\n         \"totalWithTax\":0,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.PaymentIn\",\r\n         \"taxTotal\":0,\r\n         \"taxPercentRate\":0,\r\n         \"operationType\":\"PaymentIn\",\r\n         \"number\":\"PI220805-00006\",\r\n         \"isApproved\":false,\r\n         \"status\":\"Paid\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":33,\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"{{paymentId1}}\",\r\n         \"paymentMethod\":{\r\n            \"paymentMethodType\":\"Unknown\",\r\n            \"paymentMethodGroupType\":\"Manual\",\r\n            \"code\":\"DefaultManualPaymentMethod\",\r\n            \"name\":\"Test payment method\",\r\n            \"logoUrl\":\"https://raw.githubusercontent.com/VirtoCommerce/vc-module-core/master/VirtoCommerce.CoreModule.Web/Content/logoVC.png\",\r\n            \"isActive\":true,\r\n            \"priority\":0,\r\n            \"isAvailableForPartial\":false,\r\n            \"price\":0,\r\n            \"priceWithTax\":0,\r\n            \"total\":0,\r\n            \"totalWithTax\":0,\r\n            \"discountAmount\":0,\r\n            \"discountAmountWithTax\":0,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"typeName\":\"DefaultManualPaymentMethod\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectId\":\"b53aff2cf71c43a1a4d69118f3f231c4\",\r\n                  \"objectType\":\"DefaultManualPaymentMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.Payment\",\r\n                  \"groupName\":\"Payment|DefaultManualPaymentMethod\",\r\n                  \"name\":\"VirtoCommerce.Payment.DefaultManualPaymentMethod.ExampleSetting\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"taxTotal\":0,\r\n            \"taxPercentRate\":0,\r\n            \"id\":\"b53aff2cf71c43a1a4d69118f3f231c4\"\r\n         },\r\n         \"gatewayCode\":\"DefaultManualPaymentMethod\"\r\n      }\r\n   ],\r\n   \"total\":9499.05,\r\n   \"subTotal\":9999,\r\n   \"subTotalWithTax\":9999,\r\n   \"subTotalDiscount\":499.95,\r\n   \"subTotalDiscountWithTax\":499.95,\r\n   \"subTotalTaxTotal\":0,\r\n   \"shippingTotal\":0,\r\n   \"shippingTotalWithTax\":0,\r\n   \"shippingSubTotal\":0,\r\n   \"shippingSubTotalWithTax\":0,\r\n   \"shippingDiscountTotal\":0,\r\n   \"shippingDiscountTotalWithTax\":0,\r\n   \"shippingTaxTotal\":0,\r\n   \"paymentTotal\":0,\r\n   \"paymentTotalWithTax\":0,\r\n   \"paymentSubTotal\":0,\r\n   \"paymentSubTotalWithTax\":0,\r\n   \"paymentDiscountTotal\":0,\r\n   \"paymentDiscountTotalWithTax\":0,\r\n   \"paymentTaxTotal\":0,\r\n   \"discountTotal\":499.95,\r\n   \"discountTotalWithTax\":499.95,\r\n   \"fee\":0,\r\n   \"feeWithTax\":0,\r\n   \"feeTotal\":0,\r\n   \"feeTotalWithTax\":0,\r\n   \"handlingTotal\":0,\r\n   \"handlingTotalWithTax\":0,\r\n   \"taxTotal\":0,\r\n   \"taxPercentRate\":0,\r\n   \"languageCode\":\"en-US\",\r\n   \"operationType\":\"CustomerOrder\",\r\n   \"number\":\"CO220805-00101\",\r\n   \"isApproved\":false,\r\n   \"status\":\"New\",\r\n   \"currency\":\"USD\",\r\n   \"sum\":9499.05,\r\n   \"childrenOperations\":[\r\n      {\r\n         \"customerId\":\"{{userId1}}\",\r\n         \"paymentStatus\":\"Paid\",\r\n         \"price\":0,\r\n         \"priceWithTax\":0,\r\n         \"total\":0,\r\n         \"totalWithTax\":0,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.PaymentIn\",\r\n         \"taxTotal\":0,\r\n         \"taxPercentRate\":0,\r\n         \"operationType\":\"PaymentIn\",\r\n         \"number\":\"PI220805-00006\",\r\n         \"isApproved\":false,\r\n         \"status\":\"Paid\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":33,\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"{{paymentId1}}\",\r\n         \"paymentMethod\":{\r\n            \"paymentMethodType\":\"Unknown\",\r\n            \"paymentMethodGroupType\":\"Manual\",\r\n            \"code\":\"DefaultManualPaymentMethod\",\r\n            \"name\":\"Test payment method\",\r\n            \"logoUrl\":\"https://raw.githubusercontent.com/VirtoCommerce/vc-module-core/master/VirtoCommerce.CoreModule.Web/Content/logoVC.png\",\r\n            \"isActive\":true,\r\n            \"priority\":0,\r\n            \"isAvailableForPartial\":false,\r\n            \"price\":0,\r\n            \"priceWithTax\":0,\r\n            \"total\":0,\r\n            \"totalWithTax\":0,\r\n            \"discountAmount\":0,\r\n            \"discountAmountWithTax\":0,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"typeName\":\"DefaultManualPaymentMethod\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectId\":\"b53aff2cf71c43a1a4d69118f3f231c4\",\r\n                  \"objectType\":\"DefaultManualPaymentMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.Payment\",\r\n                  \"groupName\":\"Payment|DefaultManualPaymentMethod\",\r\n                  \"name\":\"VirtoCommerce.Payment.DefaultManualPaymentMethod.ExampleSetting\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"taxTotal\":0,\r\n            \"taxPercentRate\":0,\r\n            \"id\":\"b53aff2cf71c43a1a4d69118f3f231c4\"\r\n         },\r\n         \"gatewayCode\":\"DefaultManualPaymentMethod\"\r\n      }\r\n   ],\r\n   \"cancelledState\":\"Undefined\",\r\n   \"isCancelled\":false,\r\n   \"dynamicProperties\":[\r\n      \r\n   ],\r\n   \"createdDate\":\"2022-08-05T07:28:28.2880881Z\",\r\n   \"modifiedDate\":\"2022-08-05T07:37:29.7512667Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{orderId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/order/customerOrders",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"order",
																"customerOrders"
															]
														}
													},
													"response": []
												},
												{
													"name": "Initialize payment - paid order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342119 Unable to process due to invalid payment status: Paid\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.initializePayment.errorMessage).to.eql(\"Unable to process due to invalid payment status: Paid\");\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\ninitializePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"{{paymentId1}}\"\n}) {\nisSuccess\nerrorMessage\nstoreId\npaymentId\norderId\norderNumber\npaymentMethodCode\npaymentActionType\nactionRedirectUrl\nactionHtmlForm\npublicParameters {\n  key\n  value\n}\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update payment status = \"New\" in order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"customerId\":\"{{userId1}}\",\r\n   \"customerName\":\"{{userName1}}\",\r\n   \"storeId\":\"{{storeId}}\",\r\n   \"shoppingCartId\":\"{{cartId1}}\",\r\n   \"isPrototype\":false,\r\n   \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.CustomerOrder\",\r\n   \"addresses\":[\r\n      {\r\n         \"addressType\":\"Billing\",\r\n         \"key\":\"{{$randomUUID}}\",\r\n         \"name\":\"First name address\",\r\n         \"organization\":\"OrganizationTestName\",\r\n         \"countryCode\":\"RU\",\r\n         \"countryName\":\"Russia\",\r\n         \"city\":\"City 17\",\r\n         \"postalCode\":\"111111\",\r\n         \"line1\":\"Address Line 1\",\r\n         \"line2\":\"Address line 2\",\r\n         \"regionId\":\"Test region\",\r\n         \"regionName\":\"Region 15\",\r\n         \"firstName\":\"First test name\",\r\n         \"lastName\":\"Last name test\",\r\n         \"phone\":\"88005553535\",\r\n         \"email\":\"PaddressCart@email.com\",\r\n         \"isDefault\":false\r\n      }\r\n   ],\r\n   \"inPayments\":[\r\n      {\r\n         \"customerId\":\"{{userId1}}\",\r\n         \"paymentStatus\":\"New\",\r\n         \"price\":0,\r\n         \"priceWithTax\":0,\r\n         \"total\":0,\r\n         \"totalWithTax\":0,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.PaymentIn\",\r\n         \"taxTotal\":0,\r\n         \"taxPercentRate\":0,\r\n         \"operationType\":\"PaymentIn\",\r\n         \"number\":\"PI220805-00006\",\r\n         \"isApproved\":false,\r\n         \"status\":\"New\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":33,\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"{{paymentId1}}\",\r\n         \"paymentMethod\":{\r\n            \"paymentMethodType\":\"Unknown\",\r\n            \"paymentMethodGroupType\":\"Manual\",\r\n            \"code\":\"DefaultManualPaymentMethod\",\r\n            \"name\":\"Test payment method\",\r\n            \"logoUrl\":\"https://raw.githubusercontent.com/VirtoCommerce/vc-module-core/master/VirtoCommerce.CoreModule.Web/Content/logoVC.png\",\r\n            \"isActive\":true,\r\n            \"priority\":0,\r\n            \"isAvailableForPartial\":false,\r\n            \"price\":0,\r\n            \"priceWithTax\":0,\r\n            \"total\":0,\r\n            \"totalWithTax\":0,\r\n            \"discountAmount\":0,\r\n            \"discountAmountWithTax\":0,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"typeName\":\"DefaultManualPaymentMethod\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectId\":\"b53aff2cf71c43a1a4d69118f3f231c4\",\r\n                  \"objectType\":\"DefaultManualPaymentMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.Payment\",\r\n                  \"groupName\":\"Payment|DefaultManualPaymentMethod\",\r\n                  \"name\":\"VirtoCommerce.Payment.DefaultManualPaymentMethod.ExampleSetting\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"taxTotal\":0,\r\n            \"taxPercentRate\":0,\r\n            \"id\":\"b53aff2cf71c43a1a4d69118f3f231c4\"\r\n         },\r\n         \"gatewayCode\":\"DefaultManualPaymentMethod\"\r\n      }\r\n   ],\r\n   \"total\":9499.05,\r\n   \"subTotal\":9999,\r\n   \"subTotalWithTax\":9999,\r\n   \"subTotalDiscount\":499.95,\r\n   \"subTotalDiscountWithTax\":499.95,\r\n   \"subTotalTaxTotal\":0,\r\n   \"shippingTotal\":0,\r\n   \"shippingTotalWithTax\":0,\r\n   \"shippingSubTotal\":0,\r\n   \"shippingSubTotalWithTax\":0,\r\n   \"shippingDiscountTotal\":0,\r\n   \"shippingDiscountTotalWithTax\":0,\r\n   \"shippingTaxTotal\":0,\r\n   \"paymentTotal\":0,\r\n   \"paymentTotalWithTax\":0,\r\n   \"paymentSubTotal\":0,\r\n   \"paymentSubTotalWithTax\":0,\r\n   \"paymentDiscountTotal\":0,\r\n   \"paymentDiscountTotalWithTax\":0,\r\n   \"paymentTaxTotal\":0,\r\n   \"discountTotal\":499.95,\r\n   \"discountTotalWithTax\":499.95,\r\n   \"fee\":0,\r\n   \"feeWithTax\":0,\r\n   \"feeTotal\":0,\r\n   \"feeTotalWithTax\":0,\r\n   \"handlingTotal\":0,\r\n   \"handlingTotalWithTax\":0,\r\n   \"taxTotal\":0,\r\n   \"taxPercentRate\":0,\r\n   \"languageCode\":\"en-US\",\r\n   \"operationType\":\"CustomerOrder\",\r\n   \"number\":\"CO220805-00101\",\r\n   \"isApproved\":false,\r\n   \"status\":\"New\",\r\n   \"currency\":\"USD\",\r\n   \"sum\":9499.05,\r\n   \"childrenOperations\":[\r\n      {\r\n         \"customerId\":\"{{userId1}}\",\r\n         \"paymentStatus\":\"New\",\r\n         \"price\":0,\r\n         \"priceWithTax\":0,\r\n         \"total\":0,\r\n         \"totalWithTax\":0,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.PaymentIn\",\r\n         \"taxTotal\":0,\r\n         \"taxPercentRate\":0,\r\n         \"operationType\":\"PaymentIn\",\r\n         \"number\":\"PI220805-00006\",\r\n         \"isApproved\":false,\r\n         \"status\":\"New\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":33,\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"{{paymentId1}}\",\r\n         \"paymentMethod\":{\r\n            \"paymentMethodType\":\"Unknown\",\r\n            \"paymentMethodGroupType\":\"Manual\",\r\n            \"code\":\"DefaultManualPaymentMethod\",\r\n            \"name\":\"Test payment method\",\r\n            \"logoUrl\":\"https://raw.githubusercontent.com/VirtoCommerce/vc-module-core/master/VirtoCommerce.CoreModule.Web/Content/logoVC.png\",\r\n            \"isActive\":true,\r\n            \"priority\":0,\r\n            \"isAvailableForPartial\":false,\r\n            \"price\":0,\r\n            \"priceWithTax\":0,\r\n            \"total\":0,\r\n            \"totalWithTax\":0,\r\n            \"discountAmount\":0,\r\n            \"discountAmountWithTax\":0,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"typeName\":\"DefaultManualPaymentMethod\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectId\":\"b53aff2cf71c43a1a4d69118f3f231c4\",\r\n                  \"objectType\":\"DefaultManualPaymentMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.Payment\",\r\n                  \"groupName\":\"Payment|DefaultManualPaymentMethod\",\r\n                  \"name\":\"VirtoCommerce.Payment.DefaultManualPaymentMethod.ExampleSetting\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"taxTotal\":0,\r\n            \"taxPercentRate\":0,\r\n            \"id\":\"b53aff2cf71c43a1a4d69118f3f231c4\"\r\n         },\r\n         \"gatewayCode\":\"DefaultManualPaymentMethod\"\r\n      }\r\n   ],\r\n   \"cancelledState\":\"Undefined\",\r\n   \"isCancelled\":false,\r\n   \"dynamicProperties\":[\r\n      \r\n   ],\r\n   \"createdDate\":\"2022-08-05T07:28:28.2880881Z\",\r\n   \"modifiedDate\":\"2022-08-05T07:37:29.7512667Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{orderId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/order/customerOrders",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"order",
																"customerOrders"
															]
														}
													},
													"response": []
												},
												{
													"name": "Initialize payment - unpaid order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342124 C342118 Sucessful payment initialize for unpaid order\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.initializePayment.isSuccess).to.be.true;\r",
																	"    pm.expect(json.data.initializePayment.errorMessage).to.be.null;\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\ninitializePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"{{paymentId1}}\"\n}) {\nisSuccess\nerrorMessage\nstoreId\npaymentId\norderId\norderNumber\npaymentMethodCode\npaymentActionType\nactionRedirectUrl\nactionHtmlForm\npublicParameters {\n  key\n  value\n}\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update payment status = \"New\" in order (AuthorizeNet)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"customerId\":\"{{userId1}}\",\r\n   \"customerName\":\"{{userName1}}\",\r\n   \"storeId\":\"{{storeId}}\",\r\n   \"shoppingCartId\":\"{{cartId1}}\",\r\n   \"isPrototype\":false,\r\n   \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.CustomerOrder\",\r\n   \"addresses\":[\r\n      {\r\n         \"addressType\":\"Billing\",\r\n         \"key\":\"{{$randomUUID}}\",\r\n         \"name\":\"First name address\",\r\n         \"organization\":\"OrganizationTestName\",\r\n         \"countryCode\":\"RU\",\r\n         \"countryName\":\"Russia\",\r\n         \"city\":\"City 17\",\r\n         \"postalCode\":\"111111\",\r\n         \"line1\":\"Address Line 1\",\r\n         \"line2\":\"Address line 2\",\r\n         \"regionId\":\"Test region\",\r\n         \"regionName\":\"Region 15\",\r\n         \"firstName\":\"First test name\",\r\n         \"lastName\":\"Last name test\",\r\n         \"phone\":\"88005553535\",\r\n         \"email\":\"PaddressCart@email.com\",\r\n         \"isDefault\":false\r\n      }\r\n   ],\r\n\"inPayments\":[\r\n      {\r\n         \"customerId\":\"{{userId1}}\",\r\n         \"paymentStatus\":\"New\",\r\n         \"price\":0,\r\n         \"priceWithTax\":0,\r\n         \"total\":0,\r\n         \"totalWithTax\":0,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.PaymentIn\",\r\n         \"taxTotal\":0,\r\n         \"taxPercentRate\":0,\r\n         \"operationType\":\"PaymentIn\",\r\n         \"number\":\"PI220805-00502\",\r\n         \"isApproved\":false,\r\n         \"status\":\"New\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":0,\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"{{paymentId1}}\",\r\n         \"paymentMethod\":{\r\n            \"paymentMethodGroupType\":\"Alternative\",\r\n            \"paymentMethodType\":\"PreparedForm\",\r\n            \"apiLogin\":\"8hPT4p99R\",\r\n            \"txnKey\":\"63c54EWq5d2XnGAR\",\r\n            \"shA5Hash\":\"FA6D2B37A7E9105942D2D184F1B2DBD8D9CA85611DE55B2267A6F7E0D7E49ACD9A6BC238CE068E75CA14ACFAD734F700FD94DCAB20353DD4D32D9BABE72DBBE4\",\r\n            \"code\":\"AuthorizeNetMethod\",\r\n            \"name\":\"AuthorizeNetMethod\",\r\n            \"isActive\":false,\r\n            \"priority\":0,\r\n            \"isAvailableForPartial\":false,\r\n            \"price\":0,\r\n            \"priceWithTax\":0,\r\n            \"total\":0,\r\n            \"totalWithTax\":0,\r\n            \"discountAmount\":0,\r\n            \"discountAmountWithTax\":0,\r\n            \"typeName\":\"AuthorizeNetMethod\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":true,\r\n                  \"objectType\":\"AuthorizeNetMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.AuthorizeNet\",\r\n                  \"groupName\":\"Payment|Authorize.Net\",\r\n                  \"name\":\"VirtoCommerce.Payment.AuthorizeNet.Mode\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"allowedValues\":[\r\n                     \"test\",\r\n                     \"real\"\r\n                  ],\r\n                  \"defaultValue\":\"test\",\r\n                  \"isDictionary\":false\r\n               },\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectType\":\"AuthorizeNetMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.AuthorizeNet\",\r\n                  \"groupName\":\"Payment|Authorize.Net\",\r\n                  \"name\":\"VirtoCommerce.Payment.AuthorizeNet.ConfirmationUrl\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"defaultValue\":\"{VC manager URL}/api/payments/an/registerpayment\",\r\n                  \"isDictionary\":false\r\n               },\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectType\":\"AuthorizeNetMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.AuthorizeNet\",\r\n                  \"groupName\":\"Payment|Authorize.Net\",\r\n                  \"name\":\"VirtoCommerce.Payment.AuthorizeNet.ThankYouPageUrl\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"defaultValue\":\"{storefront URL}/cart/thanks\",\r\n                  \"isDictionary\":false\r\n               },\r\n               {\r\n                  \"itHasValues\":true,\r\n                  \"objectType\":\"AuthorizeNetMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.AuthorizeNet\",\r\n                  \"groupName\":\"Payment|Authorize.Net\",\r\n                  \"name\":\"VirtoCommerce.Payment.AuthorizeNet.PaymentActionType\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"allowedValues\":[\r\n                     \"Authorization/Capture\",\r\n                     \"Sale\"\r\n                  ],\r\n                  \"defaultValue\":\"Authorization/Capture\",\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"taxTotal\":0,\r\n            \"taxPercentRate\":0\r\n         },\r\n         \"gatewayCode\":\"AuthorizeNetMethod\"\r\n      }\r\n   ],\r\n   \"total\":9499.05,\r\n   \"subTotal\":9999,\r\n   \"subTotalWithTax\":9999,\r\n   \"subTotalDiscount\":499.95,\r\n   \"subTotalDiscountWithTax\":499.95,\r\n   \"subTotalTaxTotal\":0,\r\n   \"shippingTotal\":0,\r\n   \"shippingTotalWithTax\":0,\r\n   \"shippingSubTotal\":0,\r\n   \"shippingSubTotalWithTax\":0,\r\n   \"shippingDiscountTotal\":0,\r\n   \"shippingDiscountTotalWithTax\":0,\r\n   \"shippingTaxTotal\":0,\r\n   \"paymentTotal\":0,\r\n   \"paymentTotalWithTax\":0,\r\n   \"paymentSubTotal\":0,\r\n   \"paymentSubTotalWithTax\":0,\r\n   \"paymentDiscountTotal\":0,\r\n   \"paymentDiscountTotalWithTax\":0,\r\n   \"paymentTaxTotal\":0,\r\n   \"discountTotal\":499.95,\r\n   \"discountTotalWithTax\":499.95,\r\n   \"fee\":0,\r\n   \"feeWithTax\":0,\r\n   \"feeTotal\":0,\r\n   \"feeTotalWithTax\":0,\r\n   \"handlingTotal\":0,\r\n   \"handlingTotalWithTax\":0,\r\n   \"taxTotal\":0,\r\n   \"taxPercentRate\":0,\r\n   \"languageCode\":\"en-US\",\r\n   \"operationType\":\"CustomerOrder\",\r\n   \"number\":\"CO220805-00101\",\r\n   \"isApproved\":false,\r\n   \"status\":\"New\",\r\n   \"currency\":\"USD\",\r\n   \"sum\":9499.05,\r\n   \"childrenOperations\":[\r\n      {\r\n         \"customerId\":\"{{userId1}}\",\r\n         \"paymentStatus\":\"New\",\r\n         \"price\":0,\r\n         \"priceWithTax\":0,\r\n         \"total\":0,\r\n         \"totalWithTax\":0,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.PaymentIn\",\r\n         \"taxTotal\":0,\r\n         \"taxPercentRate\":0,\r\n         \"operationType\":\"PaymentIn\",\r\n         \"number\":\"PI220805-00006\",\r\n         \"isApproved\":false,\r\n         \"status\":\"New\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":33,\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"{{paymentId1}}\",\r\n         \"paymentMethod\":{\r\n            \"paymentMethodType\":\"Unknown\",\r\n            \"paymentMethodGroupType\":\"Manual\",\r\n            \"code\":\"DefaultManualPaymentMethod\",\r\n            \"name\":\"Test payment method\",\r\n            \"logoUrl\":\"https://raw.githubusercontent.com/VirtoCommerce/vc-module-core/master/VirtoCommerce.CoreModule.Web/Content/logoVC.png\",\r\n            \"isActive\":true,\r\n            \"priority\":0,\r\n            \"isAvailableForPartial\":false,\r\n            \"price\":0,\r\n            \"priceWithTax\":0,\r\n            \"total\":0,\r\n            \"totalWithTax\":0,\r\n            \"discountAmount\":0,\r\n            \"discountAmountWithTax\":0,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"typeName\":\"DefaultManualPaymentMethod\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectId\":\"b53aff2cf71c43a1a4d69118f3f231c4\",\r\n                  \"objectType\":\"DefaultManualPaymentMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.Payment\",\r\n                  \"groupName\":\"Payment|DefaultManualPaymentMethod\",\r\n                  \"name\":\"VirtoCommerce.Payment.DefaultManualPaymentMethod.ExampleSetting\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"taxTotal\":0,\r\n            \"taxPercentRate\":0,\r\n            \"id\":\"b53aff2cf71c43a1a4d69118f3f231c4\"\r\n         },\r\n         \"gatewayCode\":\"DefaultManualPaymentMethod\"\r\n      }\r\n   ],\r\n   \"cancelledState\":\"Undefined\",\r\n   \"isCancelled\":false,\r\n   \"dynamicProperties\":[\r\n      \r\n   ],\r\n   \"createdDate\":\"2022-08-05T07:28:28.2880881Z\",\r\n   \"modifiedDate\":\"2022-08-05T07:37:29.7512667Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{orderId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/order/customerOrders",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"order",
																"customerOrders"
															]
														}
													},
													"response": []
												},
												{
													"name": "Initialize payment - unpaid by authorizeNet",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342156 Sucessful payment initialize for unpaid order\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.initializePayment.isSuccess).to.be.true;\r",
																	"    pm.expect(json.data.initializePayment.errorMessage).to.be.null;\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\ninitializePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"{{paymentId1}}\"\n}) {\nisSuccess\nerrorMessage\nstoreId\npaymentId\norderId\norderNumber\npaymentMethodCode\npaymentActionType\nactionRedirectUrl\nactionHtmlForm\npublicParameters {\n  key\n  value\n}\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{AdminToken}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "Clear all",
											"item": [
												{
													"name": "Delete a product 1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{ProductId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete user's orders",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Successful POST request\", function () {\r",
																	"    pm.expect(pm.response.code).to.be.oneOf([204, 202]);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/order/customerOrders?ids={{orderId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"order",
																"customerOrders"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{orderId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete users",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Delete users [admin]\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.deleteUsers).to.not.empty;\r",
																	"    pm.expect(jsonData.data.deleteUsers.succeeded).to.be.equal(true);\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"userNames\":[\"{{userName1}}\",\"{{userName2}}\"]\r\n   \r\n  }\r\n}\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete contact_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId3}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete contact_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{AdminToken}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Payment Authorize",
									"item": [
										{
											"name": "Preparatian",
											"item": [
												{
													"name": "Create product",
													"item": [
														{
															"name": "Create product_1",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set ProductId1\", function(){\r",
																			"    var jsonData = pm.response.json();\r",
																			"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
																			"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
																			"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
																			"});\r",
																			"\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Product1\",\r\n    \"minQuantity\":0,\r\n    \"maxQuantity\":0,\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/api/catalog/products",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"api",
																		"catalog",
																		"products"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add price to the product_1",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(204);\r",
																			"});\r",
																			"\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": false,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/api/products/{{ProductId1}}/prices",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"api",
																		"products",
																		"{{ProductId1}}",
																		"prices"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add stock qty to the product_1",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Add stock qty to the product\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.expect(jsonData.inStockQuantity).to.eql(1000);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n  \"fulfillmentCenterId\": \"vendor-fulfillment\",\r\n  \"fulfillmentCenterName\": \"Los Angeles Branch\",\r\n  \"fulfillmentCenter\": {\r\n    \"name\": \"Los Angeles Branch\",\r\n    \"description\": \"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n    \"geoLocation\": \"\",\r\n    \"address\": {\r\n      \"addressType\": 0,\r\n      \"countryCode\": \"USA\",\r\n      \"countryName\": \"United States\",\r\n      \"city\": \"Los Angeles\",\r\n      \"postalCode\": \"90234\",\r\n      \"line1\": \"1232 Wilshire Blvd\",\r\n      \"regionName\": \"California\",\r\n      \"phone\": \"3232323232\"\r\n    },\r\n    \"createdDate\": \"2018-05-07T12:05:20.42Z\",\r\n    \"modifiedDate\": \"2021-10-07T12:38:49.2056388Z\",\r\n    \"createdBy\": \"unknown\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"vendor-fulfillment\"\r\n  },\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"inStockQuantity\": 1000,\r\n  \"reservedQuantity\": 0,\r\n  \"reorderMinQuantity\": 0,\r\n  \"preorderQuantity\": 0,\r\n  \"backorderQuantity\": 0,\r\n  \"allowBackorder\": false,\r\n  \"allowPreorder\": false,\r\n  \"inTransit\": 0,\r\n  \"status\": \"Disabled\",\r\n  \"createdDate\": \"0001-01-01T00:00:00Z\"\r\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/api/inventory/products/{{ProductId10}}",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"api",
																		"inventory",
																		"products",
																		"{{ProductId10}}"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "Create Users 1,2",
													"item": [
														{
															"name": "Сreate contact_1",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set contactId\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																		"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\"\n}\n}\n\n"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create user_1",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation createUser ($command: InputCreateUserType!) {\r\n    createUser (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n      \r\n    }\r\n}",
																		"variables": "{\r\n\"command\": {\r\n\"applicationUser\": { \r\n\"id\":\"{{$randomUUID}}\",      \r\n\"createdBy\": \"AutoTestPostman\",\r\n\"email\": \"{{$randomEmail}}\",\r\n\"password\":\"{{Password}}\",\r\n\"userName\": \"{{userName1}}\",\r\n\"userType\": \"Customer\",\r\n\"storeId\":\"{{storeId}}\",\r\n\"memberId\":\"{{contactId1}}\"\r\n}\r\n}\r\n}\r\n"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Set сustomerId1",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set userId1\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"userId1\", jsonData.data.contact.securityAccounts[0].id);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n  name\n  securityAccounts{\n      id\n      userName\n      \n  }\n  }\n    }\n",
																		"variables": "{\n  \"id\": \"{{contactId1}}\"\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Get user_1 token",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    \r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set user token\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"Token1\", jsonData.access_token);\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"setTimeout(() => {}, 1000); "
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "grant_type=password&scope=offline_access&username={{userName1}}&password={{Password}}",
																	"options": {
																		"raw": {
																			"language": "text"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/connect/token",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"connect",
																		"token"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Сreate contact_2",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set contactId\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"contactId2\", jsonData.data.createContact.id);\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
																		"variables": "{\n\"command\": {\n\"name\": \"Contact2\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact2\",\n\"firstName\": \"Contact2\",\n\"lastName\": \"Contact2\"\n}\n}\n\n"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create user_2",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation createUser ($command: InputCreateUserType!) {\r\n    createUser (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n      \r\n    }\r\n}",
																		"variables": "{\r\n\"command\": {\r\n\"applicationUser\": { \r\n\"id\":\"{{$randomUUID}}\",      \r\n\"createdBy\": \"AutoTestPostman\",\r\n\"email\": \"{{$randomEmail}}\",\r\n\"password\":\"{{Password}}\",\r\n\"userName\": \"{{userName2}}\",\r\n\"userType\": \"Customer\",\r\n\"storeId\":\"{{storeId}}\",\r\n\"memberId\":\"{{contactId2}}\"\r\n}\r\n}\r\n}\r\n"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Set сustomerId2",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set userId2\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"userId2\", jsonData.data.contact.securityAccounts[0].id);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "query contact ( $id: String!) {\n    contact (id: $id) {\n  id\n  securityAccounts{\n      id\n      userName\n      \n  }\n  }\n    }\n",
																		"variables": "{\n  \"id\": \"{{contactId2}}\"\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Get user_2 token",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set user token\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"Token2\", jsonData.access_token);\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"setTimeout(() => {}, 1000); "
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "grant_type=password&scope=offline_access&username={{userName2}}&password={{Password}}",
																	"options": {
																		"raw": {
																			"language": "text"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/connect/token",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"connect",
																		"token"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "Create orders for user_1",
													"item": [
														{
															"name": "Get cart",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set cartId1, userId1\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{userId1}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
																		"variables": ""
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add item",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Item added\", function(){\r",
																			"var jsonData = pm.response.json();\r",
																			"pm.expect(jsonData.data.addItemsCart.items[0]).to.be.not.empty;\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        total{amount}\r\n        items {\r\n            productId,\r\n            name,\r\n            quantity\r\n        \r\n        }\r\n        validationErrors(ruleSet:\"addItemsCart\"){errorMessage}\r\n        \r\n    }\r\n}",
																		"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": \"\",\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 1\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId2}}\",\r\n        \"quantity\": 1\r\n    },\r\n    {\r\n        \"productId\": \"{{ProductId3}}\",\r\n        \"quantity\": 1\r\n    }\r\n    ]\r\n  }\r\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add cart payment",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Payment added\", function(){\r",
																			"    var jSonData = pm.response.json();\r",
																			"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
																			"    pm.expect(jSonData.errors).to.be.undefined;\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																		"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"PaddressCart@email.com\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add cart shipment",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Shipment added\", function(){\r",
																			"    var jSonData = pm.response.json();\r",
																			"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
																			"    pm.expect(jSonData.errors).to.be.undefined;\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
																		"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": \"null\",\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart@email.com\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add cart address",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Cart address added\", function () {\r",
																			"    var json = pm.response.json();\r",
																			"    pm.expect(json.data.addOrUpdateCartAddress).to.be.not.empty;\r",
																			"    pm.expect(json.errors).to.be.undefined;\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation addOrUpdateCartAddress($command: InputAddOrUpdateCartAddressType!) {\naddOrUpdateCartAddress(command: $command) {\nid\naddresses {\naddressType\ncity\ncountryCode\ncountryName\nemail\nfirstName\nid\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\nid\n}\n}\n}",
																		"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n    \"storeId\": \"{{storeId}}\",\n    \"cartName\": \"{{cartName}}\",\n    \"userId\": \"{{userId1}}\",\n    \"currencyCode\": \"{{currencyCode}}\",\n    \"cultureName\": \"{{cultureName}}\",\n    \"cartType\": \"{{cartType}}\",\n\"address\": {\n\"city\": \"City 18\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"3333addressCart@emai.ru\",\n\"firstName\": \"First test name\",\n\"key\": \"{{$randomUUID}}\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n}\n}\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create order from cart",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"\r",
																			"pm.test(\"Set orderId1, paymentId1\", function () {\r",
																			"    var json = pm.response.json();\r",
																			"    pm.collectionVariables.set(\"orderId1\", json.data.createOrderFromCart.id);\r",
																			"    pm.collectionVariables.set(\"paymentId1\", json.data.createOrderFromCart.inPayments[0].id);\r",
																			"});\r",
																			"\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{AdminToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "graphql",
																	"graphql": {
																		"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\ncreateOrderFromCart (command: $command) {\nid\ninPayments{id}\ncustomerId\ncustomerName\nitems{\nid\nname\nquantity\nfulfillmentCenterId\nfulfillmentCenterName\n}\ntotal{\namount\n}\ndiscountTotal{\namount\n}\ntaxTotal{\namount\n}\ntotal{\namount\n}\n}\n}",
																		"variables": "{\n\"command\": {\n    \"cartId\": \"{{cartId1}}\"\n  }\n}"
																	}
																},
																"url": {
																	"raw": "{{url}}/graphql",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"graphql"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Index order",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{AdminToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "[{\"documentType\":\"CustomerOrder\",\"documentIds\":[\"{{orderId1}}\",\"{{orderId2}}\",\"{{orderId3}}\"]}]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/api/search/indexes/index",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"api",
																		"search",
																		"indexes",
																		"index"
																	]
																}
															},
															"response": []
														}
													]
												},
												{
													"name": "Create non-integrative payment method",
													"item": [
														{
															"name": "Create non-intergative payment method",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"const rnd = (len, chars='abcdefghijklmnopqrstuvwxyz0123456789') => [...Array(len)].map(() => chars.charAt(Math.floor(Math.random() * chars.length))).join('')\r",
																			"\r",
																			"\r",
																			"pm.collectionVariables.set(\"nativePaymentMethodId1\", rnd(36))\r",
																			"pm.collectionVariables.set(\"nativePaymentMethodCode1\", rnd(16))\r",
																			"pm.collectionVariables.set(\"nativePaymentMethodName1\", 'xAPIMethod')\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\"isEnabled\":true,\"code\":\"{{nativePaymentMethodCode1}}\",\"name\":\"{{nativePaymentMethodName1}}\", \"id\":\"{{nativePaymentMethodId1}}\"}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/api/native-payment-methods",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"api",
																		"native-payment-methods"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Activate non-intergative payment method for Store",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"pm.test(\"Non-integrative payment method is activated in Store\", function () {\r",
																			"    var jsonData = pm.response.json();\r",
																			"    pm.expect(jsonData.message).to.be.undefined;\r",
																			"});\r",
																			"\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"isEnabled\":false,\r\n   \"paymentMethodType\":\"Unknown\",\r\n   \"paymentMethodGroupType\":\"Manual\",\r\n   \"code\":\"{{nativePaymentMethodCode1}}\",\r\n   \"name\":\"{{nativePaymentMethodName1}}\",\r\n   \"isActive\":true,\r\n   \"priority\":0,\r\n   \"isAvailableForPartial\":false,\r\n   \"price\":0,\r\n   \"priceWithTax\":0,\r\n   \"total\":0,\r\n   \"totalWithTax\":0,\r\n   \"discountAmount\":0,\r\n   \"discountAmountWithTax\":0,\r\n   \"typeName\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"{{nativePaymentMethodId1}}\",\r\n         \"objectType\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n         \"isReadOnly\":false,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.NativePaymentMethods\",\r\n         \"groupName\":\"NativePaymentMethods|General\",\r\n         \"name\":\"NativePaymentMethods.DefaultSetting\",\r\n         \"isRequired\":false,\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"isDictionary\":false\r\n      }\r\n   ],\r\n   \"taxTotal\":0,\r\n   \"taxPercentRate\":0,\r\n   \"displayName\":\"{{nativePaymentMethodName1}}\",\r\n   \"storeId\":\"{{storeId}}\"\r\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/api/payment",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"api",
																		"payment"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Update payment status = \"New\" in order (Non-inegrative method)",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 204\", function () {\r",
																			"    pm.response.to.have.status(204);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"customerId\":\"{{userId1}}\",\r\n   \"customerName\":\"{{userName1}}\",\r\n   \"storeId\":\"{{storeId}}\",\r\n   \"shoppingCartId\":\"{{cartId1}}\",\r\n   \"isPrototype\":false,\r\n   \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.CustomerOrder\",\r\n   \"addresses\":[\r\n      {\r\n         \"addressType\":\"Billing\",\r\n         \"key\":\"{{$randomUUID}}\",\r\n         \"name\":\"First name address\",\r\n         \"organization\":\"OrganizationTestName\",\r\n         \"countryCode\":\"RU\",\r\n         \"countryName\":\"Russia\",\r\n         \"city\":\"City 17\",\r\n         \"postalCode\":\"111111\",\r\n         \"line1\":\"Address Line 1\",\r\n         \"line2\":\"Address line 2\",\r\n         \"regionId\":\"Test region\",\r\n         \"regionName\":\"Region 15\",\r\n         \"firstName\":\"First test name\",\r\n         \"lastName\":\"Last name test\",\r\n         \"phone\":\"88005553535\",\r\n         \"email\":\"PaddressCart@email.com\",\r\n         \"isDefault\":false\r\n      }\r\n   ],\r\n\"inPayments\":[\r\n      {\r\n         \"customerId\":\"{{userId1}}\",\r\n         \"paymentStatus\":\"New\",\r\n         \"price\":0,\r\n         \"priceWithTax\":0,\r\n         \"total\":0,\r\n         \"totalWithTax\":0,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.PaymentIn\",\r\n         \"taxTotal\":0,\r\n         \"taxPercentRate\":0,\r\n         \"operationType\":\"PaymentIn\",\r\n         \"number\":\"PI220808-00502\",\r\n         \"isApproved\":false,\r\n         \"status\":\"New\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":0,\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"{{paymentId1}}\",\r\n         \"paymentMethod\":{\r\n            \"isEnabled\":false,\r\n            \"paymentMethodType\":\"Unknown\",\r\n            \"paymentMethodGroupType\":\"Manual\",\r\n            \"code\":\"{{nativePaymentMethodCode1}}\",\r\n            \"name\":\"{{nativePaymentMethodName1}}\",\r\n            \"isActive\":true,\r\n            \"priority\":0,\r\n            \"isAvailableForPartial\":false,\r\n            \"price\":0,\r\n            \"priceWithTax\":0,\r\n            \"total\":0,\r\n            \"totalWithTax\":0,\r\n            \"discountAmount\":0,\r\n            \"discountAmountWithTax\":0,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"typeName\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectId\":\"{{nativePaymentMethodId1}}\",\r\n                  \"objectType\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.NativePaymentMethods\",\r\n                  \"groupName\":\"NativePaymentMethods|General\",\r\n                  \"name\":\"NativePaymentMethods.DefaultSetting\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"taxTotal\":0,\r\n            \"taxPercentRate\":0,\r\n            \"id\":\"{{nativePaymentMethodId1}}\"\r\n         },\r\n         \"gatewayCode\":\"{{nativePaymentMethodCode1}}\"\r\n      }\r\n   ],\r\n   \"total\":9499.05,\r\n   \"subTotal\":9999,\r\n   \"subTotalWithTax\":9999,\r\n   \"subTotalDiscount\":499.95,\r\n   \"subTotalDiscountWithTax\":499.95,\r\n   \"subTotalTaxTotal\":0,\r\n   \"shippingTotal\":0,\r\n   \"shippingTotalWithTax\":0,\r\n   \"shippingSubTotal\":0,\r\n   \"shippingSubTotalWithTax\":0,\r\n   \"shippingDiscountTotal\":0,\r\n   \"shippingDiscountTotalWithTax\":0,\r\n   \"shippingTaxTotal\":0,\r\n   \"paymentTotal\":0,\r\n   \"paymentTotalWithTax\":0,\r\n   \"paymentSubTotal\":0,\r\n   \"paymentSubTotalWithTax\":0,\r\n   \"paymentDiscountTotal\":0,\r\n   \"paymentDiscountTotalWithTax\":0,\r\n   \"paymentTaxTotal\":0,\r\n   \"discountTotal\":499.95,\r\n   \"discountTotalWithTax\":499.95,\r\n   \"fee\":0,\r\n   \"feeWithTax\":0,\r\n   \"feeTotal\":0,\r\n   \"feeTotalWithTax\":0,\r\n   \"handlingTotal\":0,\r\n   \"handlingTotalWithTax\":0,\r\n   \"taxTotal\":0,\r\n   \"taxPercentRate\":0,\r\n   \"languageCode\":\"en-US\",\r\n   \"operationType\":\"CustomerOrder\",\r\n   \"number\":\"CO220805-00101\",\r\n   \"isApproved\":false,\r\n   \"status\":\"New\",\r\n   \"currency\":\"USD\",\r\n   \"sum\":9499.05,\r\n   \"childrenOperations\":[\r\n      {\r\n         \"orderId\":\"{{orderId1}}\",\r\n         \"gatewayCode\":\"{{nativePaymentMethodCode1}}\",\r\n         \"paymentMethod\":{\r\n            \"isEnabled\":false,\r\n            \"paymentMethodType\":\"Unknown\",\r\n            \"paymentMethodGroupType\":\"Manual\",\r\n            \"code\":\"{{nativePaymentMethodCode1}}\",\r\n            \"name\":\"xAPIMethod\",\r\n            \"isActive\":true,\r\n            \"priority\":0,\r\n            \"isAvailableForPartial\":false,\r\n            \"price\":0,\r\n            \"priceWithTax\":0,\r\n            \"total\":0,\r\n            \"totalWithTax\":0,\r\n            \"discountAmount\":0,\r\n            \"discountAmountWithTax\":0,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"typeName\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectId\":\"{{nativePaymentMethodId1}}\",\r\n                  \"objectType\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.NativePaymentMethods\",\r\n                  \"groupName\":\"NativePaymentMethods|General\",\r\n                  \"name\":\"NativePaymentMethods.DefaultSetting\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"taxTotal\":0,\r\n            \"taxPercentRate\":0,\r\n            \"id\":\"{{nativePaymentMethodId1}}\"\r\n         },\r\n         \"customerId\":\"{{userId1}}\",\r\n         \"paymentStatus\":\"New\",\r\n         \"price\":1050,\r\n         \"priceWithTax\":1060.5,\r\n         \"total\":1050,\r\n         \"totalWithTax\":1060.5,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.PaymentIn\",\r\n         \"feeDetails\":[\r\n            \r\n         ],\r\n         \"taxTotal\":10.5,\r\n         \"taxPercentRate\":0.01,\r\n         \"taxDetails\":[\r\n            \r\n         ],\r\n         \"discounts\":[\r\n            \r\n         ],\r\n         \"transactions\":[\r\n            \r\n         ],\r\n         \"operationType\":\"PaymentIn\",\r\n         \"number\":\"PI220808-00502\",\r\n         \"isApproved\":false,\r\n         \"status\":\"New\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":1050,\r\n         \"childrenOperations\":[\r\n            \r\n         ],\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"dynamicProperties\":[\r\n            \r\n         ],\r\n         \"createdDate\":\"2022-08-09T06:44:48.64502Z\",\r\n         \"modifiedDate\":\"2022-08-09T06:45:39.9023675Z\",\r\n         \"createdBy\":\"admin\",\r\n         \"modifiedBy\":\"admin\",\r\n         \"id\":\"{{paymentId1}}\"\r\n      },\r\n      {\r\n         \"fulfillmentCenterId\":\"142ba5568ae4454aad553ece41b9c3b5\",\r\n         \"shipmentMethodCode\":\"FixedRate\",\r\n         \"shipmentMethodOption\":\"Ground\",\r\n         \"shippingMethod\":{\r\n            \"code\":\"FixedRate\",\r\n            \"name\":\"FixedRate\",\r\n            \"logoUrl\":\"https://raw.githubusercontent.com/VirtoCommerce/vc-module-core/master/VirtoCommerce.CoreModule.Web/Content/logoVC.png\",\r\n            \"isActive\":true,\r\n            \"priority\":1,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":true,\r\n                  \"objectId\":\"fa8a1d7fa0ed4aec9358ef82596bb717\",\r\n                  \"objectType\":\"FixedRateShippingMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"value\":10,\r\n                  \"id\":\"9f069d72-0238-4fde-a856-2ed564fab975\",\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.Shipping\",\r\n                  \"groupName\":\"Shipping|General\",\r\n                  \"name\":\"VirtoCommerce.Shipping.FixedRateShippingMethod.Ground.Rate\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"Decimal\",\r\n                  \"defaultValue\":0,\r\n                  \"isDictionary\":false\r\n               },\r\n               {\r\n                  \"itHasValues\":true,\r\n                  \"objectId\":\"fa8a1d7fa0ed4aec9358ef82596bb717\",\r\n                  \"objectType\":\"FixedRateShippingMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"value\":50,\r\n                  \"id\":\"b4fa897d-fcb1-4821-b189-d42eb2df66b3\",\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.Shipping\",\r\n                  \"groupName\":\"Shipping|General\",\r\n                  \"name\":\"VirtoCommerce.Shipping.FixedRateShippingMethod.Air.Rate\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"Decimal\",\r\n                  \"defaultValue\":0,\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"typeName\":\"FixedRateShippingMethod\",\r\n            \"id\":\"fa8a1d7fa0ed4aec9358ef82596bb717\"\r\n         },\r\n         \"customerOrderId\":\"6e75d655-ff52-4ad8-9522-c544f04f78a4\",\r\n         \"items\":[\r\n            \r\n         ],\r\n         \"packages\":[\r\n            \r\n         ],\r\n         \"inPayments\":[\r\n            \r\n         ],\r\n         \"feeDetails\":[\r\n            \r\n         ],\r\n         \"weightUnit\":\"116\",\r\n         \"height\":123,\r\n         \"length\":432,\r\n         \"discounts\":[\r\n            \r\n         ],\r\n         \"deliveryAddress\":{\r\n            \"addressType\":\"Billing\",\r\n            \"key\":\"a534d54d-14ec-485e-a66e-e67db16b37c6\",\r\n            \"name\":\"First name address\",\r\n            \"organization\":\"OrganizationTestName\",\r\n            \"countryCode\":\"RU\",\r\n            \"countryName\":\"Russia\",\r\n            \"city\":\"City 17\",\r\n            \"postalCode\":\"111111\",\r\n            \"line1\":\"Address Line 1\",\r\n            \"line2\":\"Address line 2\",\r\n            \"regionId\":\"Test region\",\r\n            \"regionName\":\"Region 15\",\r\n            \"firstName\":\"First test name\",\r\n            \"lastName\":\"Last name test\",\r\n            \"phone\":\"88005553535\",\r\n            \"email\":\"addressCart@email.com\",\r\n            \"isDefault\":false\r\n         },\r\n         \"price\":10,\r\n         \"priceWithTax\":10.1,\r\n         \"total\":10,\r\n         \"totalWithTax\":10.1,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"fee\":0,\r\n         \"feeWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.Shipment\",\r\n         \"taxTotal\":0.1,\r\n         \"taxPercentRate\":0.01,\r\n         \"taxDetails\":[\r\n            \r\n         ],\r\n         \"operationType\":\"Shipment\",\r\n         \"number\":\"SH220809-00001\",\r\n         \"isApproved\":false,\r\n         \"status\":\"New\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":10,\r\n         \"childrenOperations\":[\r\n            \r\n         ],\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"dynamicProperties\":[\r\n            \r\n         ],\r\n         \"createdDate\":\"2022-08-09T06:44:48.6643779Z\",\r\n         \"modifiedDate\":\"2022-08-09T06:44:48.6643779Z\",\r\n         \"createdBy\":\"admin\",\r\n         \"modifiedBy\":\"admin\",\r\n         \"id\":\"acdcfa8a-9c86-42cb-95ec-38d5f24283b2\"\r\n      }\r\n   ],\r\n   \"cancelledState\":\"Undefined\",\r\n   \"isCancelled\":false,\r\n   \"dynamicProperties\":[\r\n      \r\n   ],\r\n   \"createdDate\":\"2022-08-05T07:28:28.2880881Z\",\r\n   \"modifiedDate\":\"2022-08-05T07:37:29.7512667Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{orderId1}}\"\r\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{url}}/api/order/customerOrders",
																	"host": [
																		"{{url}}"
																	],
																	"path": [
																		"api",
																		"order",
																		"customerOrders"
																	]
																}
															},
															"response": []
														}
													]
												}
											]
										},
										{
											"name": "Anon",
											"item": [
												{
													"name": "Payment authorize",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342148 Authorize payment - access denied for anon\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.errors).not.empty;\r",
																	"    pm.expect(pm.response.text()).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");  \r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\nauthorizePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"{{paymentId1}}\"\nparameters: [\n  {\n      key: \"test\",\n      value: \"asda\"\n    },\n]\n}) {\nisSuccess\nerrorMessage\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "noauth"
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "User",
											"item": [
												{
													"name": "Authorize payment order belong to user",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342150 Sucessful payment authorize for order owner\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.authorizePayment.isSuccess).to.be.true;\r",
																	"    pm.expect(json.data.authorizePayment.errorMessage).to.be.null;\r",
																	"\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableCookies": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token1}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\nauthorizePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"{{paymentId1}}\"\nparameters: [\n  {\n      key: \"test\",\n      value: \"asda\"\n    },\n]\n}) {\nisSuccess\nerrorMessage\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Authorize payment order not belong to user",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342151 Access denied for non-order owner\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.errors).not.empty;\r",
																	"    pm.expect(pm.response.text()).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");  \r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{Token2}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\nauthorizePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"{{paymentId1}}\"\nparameters: [\n  {\n      key: \"test\",\n      value: \"asda\"\n    },\n]\n}) {\nisSuccess\nerrorMessage\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{Token1}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "Admin",
											"item": [
												{
													"name": "Authorize payment - not existed payment",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342145 Can't find payment in order\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.authorizePayment.errorMessage).to.eql(\"Can't find payment in order\");\r",
																	"    pm.expect(json.data.authorizePayment.isSuccess).to.be.false;\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\nauthorizePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"not existed payment\"\nparameters: [\n  {\n      key: \"test\",\n      value: \"asda\"\n    },\n]\n}) {\nisSuccess\nerrorMessage\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Authorize payment - not existed order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342146 Can't find customer order\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.authorizePayment.errorMessage).to.eql(\"Can't find customer order\");\r",
																	"    pm.expect(json.data.authorizePayment.isSuccess).to.be.false;\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\nauthorizePayment(command: {\norderId: \"not existed order\",\npaymentId: \"{{paymentId1}}\"\nparameters: [\n  {\n      key: \"test\",\n      value: \"asda\"\n    },\n]\n}) {\nisSuccess\nerrorMessage\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update payment status = \"Paid\" in order (Non-inegrative method)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"customerId\":\"{{userId1}}\",\r\n   \"customerName\":\"{{userName1}}\",\r\n   \"storeId\":\"{{storeId}}\",\r\n   \"shoppingCartId\":\"{{cartId1}}\",\r\n   \"isPrototype\":false,\r\n   \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.CustomerOrder\",\r\n   \"addresses\":[\r\n      {\r\n         \"addressType\":\"Billing\",\r\n         \"key\":\"{{$randomUUID}}\",\r\n         \"name\":\"First name address\",\r\n         \"organization\":\"OrganizationTestName\",\r\n         \"countryCode\":\"RU\",\r\n         \"countryName\":\"Russia\",\r\n         \"city\":\"City 17\",\r\n         \"postalCode\":\"111111\",\r\n         \"line1\":\"Address Line 1\",\r\n         \"line2\":\"Address line 2\",\r\n         \"regionId\":\"Test region\",\r\n         \"regionName\":\"Region 15\",\r\n         \"firstName\":\"First test name\",\r\n         \"lastName\":\"Last name test\",\r\n         \"phone\":\"88005553535\",\r\n         \"email\":\"PaddressCart@email.com\",\r\n         \"isDefault\":false\r\n      }\r\n   ],\r\n\"inPayments\":[\r\n      {\r\n         \"customerId\":\"{{userId1}}\",\r\n         \"paymentStatus\":\"Paid\",\r\n         \"price\":0,\r\n         \"priceWithTax\":0,\r\n         \"total\":0,\r\n         \"totalWithTax\":0,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.PaymentIn\",\r\n         \"taxTotal\":0,\r\n         \"taxPercentRate\":0,\r\n         \"operationType\":\"PaymentIn\",\r\n         \"number\":\"PI220808-00502\",\r\n         \"isApproved\":false,\r\n         \"status\":\"Paid\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":0,\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"{{paymentId1}}\",\r\n         \"paymentMethod\":{\r\n            \"isEnabled\":false,\r\n            \"paymentMethodType\":\"Unknown\",\r\n            \"paymentMethodGroupType\":\"Manual\",\r\n            \"code\":\"{{nativePaymentMethodCode1}}\",\r\n            \"name\":\"{{nativePaymentMethodName1}}\",\r\n            \"isActive\":true,\r\n            \"priority\":0,\r\n            \"isAvailableForPartial\":false,\r\n            \"price\":0,\r\n            \"priceWithTax\":0,\r\n            \"total\":0,\r\n            \"totalWithTax\":0,\r\n            \"discountAmount\":0,\r\n            \"discountAmountWithTax\":0,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"typeName\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectId\":\"{{nativePaymentMethodId1}}\",\r\n                  \"objectType\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.NativePaymentMethods\",\r\n                  \"groupName\":\"NativePaymentMethods|General\",\r\n                  \"name\":\"NativePaymentMethods.DefaultSetting\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"taxTotal\":0,\r\n            \"taxPercentRate\":0,\r\n            \"id\":\"{{nativePaymentMethodId1}}\"\r\n         },\r\n         \"gatewayCode\":\"{{nativePaymentMethodCode1}}\"\r\n      }\r\n   ],\r\n   \"total\":9499.05,\r\n   \"subTotal\":9999,\r\n   \"subTotalWithTax\":9999,\r\n   \"subTotalDiscount\":499.95,\r\n   \"subTotalDiscountWithTax\":499.95,\r\n   \"subTotalTaxTotal\":0,\r\n   \"shippingTotal\":0,\r\n   \"shippingTotalWithTax\":0,\r\n   \"shippingSubTotal\":0,\r\n   \"shippingSubTotalWithTax\":0,\r\n   \"shippingDiscountTotal\":0,\r\n   \"shippingDiscountTotalWithTax\":0,\r\n   \"shippingTaxTotal\":0,\r\n   \"paymentTotal\":0,\r\n   \"paymentTotalWithTax\":0,\r\n   \"paymentSubTotal\":0,\r\n   \"paymentSubTotalWithTax\":0,\r\n   \"paymentDiscountTotal\":0,\r\n   \"paymentDiscountTotalWithTax\":0,\r\n   \"paymentTaxTotal\":0,\r\n   \"discountTotal\":499.95,\r\n   \"discountTotalWithTax\":499.95,\r\n   \"fee\":0,\r\n   \"feeWithTax\":0,\r\n   \"feeTotal\":0,\r\n   \"feeTotalWithTax\":0,\r\n   \"handlingTotal\":0,\r\n   \"handlingTotalWithTax\":0,\r\n   \"taxTotal\":0,\r\n   \"taxPercentRate\":0,\r\n   \"languageCode\":\"en-US\",\r\n   \"operationType\":\"CustomerOrder\",\r\n   \"number\":\"CO220805-00101\",\r\n   \"isApproved\":false,\r\n   \"status\":\"New\",\r\n   \"currency\":\"USD\",\r\n   \"sum\":9499.05,\r\n   \"childrenOperations\":[\r\n      {\r\n         \"orderId\":\"{{orderId1}}\",\r\n         \"gatewayCode\":\"{{nativePaymentMethodCode1}}\",\r\n         \"paymentMethod\":{\r\n            \"isEnabled\":false,\r\n            \"paymentMethodType\":\"Unknown\",\r\n            \"paymentMethodGroupType\":\"Manual\",\r\n            \"code\":\"{{nativePaymentMethodCode1}}\",\r\n            \"name\":\"xAPIMethod\",\r\n            \"isActive\":true,\r\n            \"priority\":0,\r\n            \"isAvailableForPartial\":false,\r\n            \"price\":0,\r\n            \"priceWithTax\":0,\r\n            \"total\":0,\r\n            \"totalWithTax\":0,\r\n            \"discountAmount\":0,\r\n            \"discountAmountWithTax\":0,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"typeName\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectId\":\"{{nativePaymentMethodId1}}\",\r\n                  \"objectType\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.NativePaymentMethods\",\r\n                  \"groupName\":\"NativePaymentMethods|General\",\r\n                  \"name\":\"NativePaymentMethods.DefaultSetting\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"taxTotal\":0,\r\n            \"taxPercentRate\":0,\r\n            \"id\":\"{{nativePaymentMethodId1}}\"\r\n         },\r\n         \"customerId\":\"{{userId1}}\",\r\n         \"paymentStatus\":\"Paid\",\r\n         \"price\":1050,\r\n         \"priceWithTax\":1060.5,\r\n         \"total\":1050,\r\n         \"totalWithTax\":1060.5,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.PaymentIn\",\r\n         \"feeDetails\":[\r\n            \r\n         ],\r\n         \"taxTotal\":10.5,\r\n         \"taxPercentRate\":0.01,\r\n         \"taxDetails\":[\r\n            \r\n         ],\r\n         \"discounts\":[\r\n            \r\n         ],\r\n         \"transactions\":[\r\n            \r\n         ],\r\n         \"operationType\":\"PaymentIn\",\r\n         \"number\":\"PI220808-00502\",\r\n         \"isApproved\":false,\r\n         \"status\":\"Paid\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":1050,\r\n         \"childrenOperations\":[\r\n            \r\n         ],\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"dynamicProperties\":[\r\n            \r\n         ],\r\n         \"createdDate\":\"2022-08-09T06:44:48.64502Z\",\r\n         \"modifiedDate\":\"2022-08-09T06:45:39.9023675Z\",\r\n         \"createdBy\":\"admin\",\r\n         \"modifiedBy\":\"admin\",\r\n         \"id\":\"{{paymentId1}}\"\r\n      },\r\n      {\r\n         \"fulfillmentCenterId\":\"142ba5568ae4454aad553ece41b9c3b5\",\r\n         \"shipmentMethodCode\":\"FixedRate\",\r\n         \"shipmentMethodOption\":\"Ground\",\r\n         \"shippingMethod\":{\r\n            \"code\":\"FixedRate\",\r\n            \"name\":\"FixedRate\",\r\n            \"logoUrl\":\"https://raw.githubusercontent.com/VirtoCommerce/vc-module-core/master/VirtoCommerce.CoreModule.Web/Content/logoVC.png\",\r\n            \"isActive\":true,\r\n            \"priority\":1,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":true,\r\n                  \"objectId\":\"fa8a1d7fa0ed4aec9358ef82596bb717\",\r\n                  \"objectType\":\"FixedRateShippingMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"value\":10,\r\n                  \"id\":\"9f069d72-0238-4fde-a856-2ed564fab975\",\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.Shipping\",\r\n                  \"groupName\":\"Shipping|General\",\r\n                  \"name\":\"VirtoCommerce.Shipping.FixedRateShippingMethod.Ground.Rate\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"Decimal\",\r\n                  \"defaultValue\":0,\r\n                  \"isDictionary\":false\r\n               },\r\n               {\r\n                  \"itHasValues\":true,\r\n                  \"objectId\":\"fa8a1d7fa0ed4aec9358ef82596bb717\",\r\n                  \"objectType\":\"FixedRateShippingMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"value\":50,\r\n                  \"id\":\"b4fa897d-fcb1-4821-b189-d42eb2df66b3\",\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.Shipping\",\r\n                  \"groupName\":\"Shipping|General\",\r\n                  \"name\":\"VirtoCommerce.Shipping.FixedRateShippingMethod.Air.Rate\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"Decimal\",\r\n                  \"defaultValue\":0,\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"typeName\":\"FixedRateShippingMethod\",\r\n            \"id\":\"fa8a1d7fa0ed4aec9358ef82596bb717\"\r\n         },\r\n         \"customerOrderId\":\"6e75d655-ff52-4ad8-9522-c544f04f78a4\",\r\n         \"items\":[\r\n            \r\n         ],\r\n         \"packages\":[\r\n            \r\n         ],\r\n         \"inPayments\":[\r\n            \r\n         ],\r\n         \"feeDetails\":[\r\n            \r\n         ],\r\n         \"weightUnit\":\"116\",\r\n         \"height\":123,\r\n         \"length\":432,\r\n         \"discounts\":[\r\n            \r\n         ],\r\n         \"deliveryAddress\":{\r\n            \"addressType\":\"Billing\",\r\n            \"key\":\"a534d54d-14ec-485e-a66e-e67db16b37c6\",\r\n            \"name\":\"First name address\",\r\n            \"organization\":\"OrganizationTestName\",\r\n            \"countryCode\":\"RU\",\r\n            \"countryName\":\"Russia\",\r\n            \"city\":\"City 17\",\r\n            \"postalCode\":\"111111\",\r\n            \"line1\":\"Address Line 1\",\r\n            \"line2\":\"Address line 2\",\r\n            \"regionId\":\"Test region\",\r\n            \"regionName\":\"Region 15\",\r\n            \"firstName\":\"First test name\",\r\n            \"lastName\":\"Last name test\",\r\n            \"phone\":\"88005553535\",\r\n            \"email\":\"addressCart@email.com\",\r\n            \"isDefault\":false\r\n         },\r\n         \"price\":10,\r\n         \"priceWithTax\":10.1,\r\n         \"total\":10,\r\n         \"totalWithTax\":10.1,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"fee\":0,\r\n         \"feeWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.Shipment\",\r\n         \"taxTotal\":0.1,\r\n         \"taxPercentRate\":0.01,\r\n         \"taxDetails\":[\r\n            \r\n         ],\r\n         \"operationType\":\"Shipment\",\r\n         \"number\":\"SH220809-00001\",\r\n         \"isApproved\":false,\r\n         \"status\":\"New\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":10,\r\n         \"childrenOperations\":[\r\n            \r\n         ],\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"dynamicProperties\":[\r\n            \r\n         ],\r\n         \"createdDate\":\"2022-08-09T06:44:48.6643779Z\",\r\n         \"modifiedDate\":\"2022-08-09T06:44:48.6643779Z\",\r\n         \"createdBy\":\"admin\",\r\n         \"modifiedBy\":\"admin\",\r\n         \"id\":\"acdcfa8a-9c86-42cb-95ec-38d5f24283b2\"\r\n      }\r\n   ],\r\n   \"cancelledState\":\"Undefined\",\r\n   \"isCancelled\":false,\r\n   \"dynamicProperties\":[\r\n      \r\n   ],\r\n   \"createdDate\":\"2022-08-05T07:28:28.2880881Z\",\r\n   \"modifiedDate\":\"2022-08-05T07:37:29.7512667Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{orderId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/order/customerOrders",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"order",
																"customerOrders"
															]
														}
													},
													"response": []
												},
												{
													"name": "Authorize payment - paid order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342141 Unable to process due to invalid payment status: Paid\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.authorizePayment.isSuccess).to.be.false;\r",
																	"    pm.expect(json.data.authorizePayment.errorMessage).to.eql(\"Unable to process due to invalid payment status: Paid\");\r",
																	"});\r",
																	"\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\nauthorizePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"{{paymentId1}}\"\nparameters: [\n  {\n      key: \"test\",\n      value: \"asda\"\n    },\n]\n}) {\nisSuccess\nerrorMessage\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update payment status = \"New\" in order (Non-inegrative method)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 204\", function () {\r",
																	"    pm.response.to.have.status(204);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"customerId\":\"{{userId1}}\",\r\n   \"customerName\":\"{{userName1}}\",\r\n   \"storeId\":\"{{storeId}}\",\r\n   \"shoppingCartId\":\"{{cartId1}}\",\r\n   \"isPrototype\":false,\r\n   \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.CustomerOrder\",\r\n   \"addresses\":[\r\n      {\r\n         \"addressType\":\"Billing\",\r\n         \"key\":\"{{$randomUUID}}\",\r\n         \"name\":\"First name address\",\r\n         \"organization\":\"OrganizationTestName\",\r\n         \"countryCode\":\"RU\",\r\n         \"countryName\":\"Russia\",\r\n         \"city\":\"City 17\",\r\n         \"postalCode\":\"111111\",\r\n         \"line1\":\"Address Line 1\",\r\n         \"line2\":\"Address line 2\",\r\n         \"regionId\":\"Test region\",\r\n         \"regionName\":\"Region 15\",\r\n         \"firstName\":\"First test name\",\r\n         \"lastName\":\"Last name test\",\r\n         \"phone\":\"88005553535\",\r\n         \"email\":\"PaddressCart@email.com\",\r\n         \"isDefault\":false\r\n      }\r\n   ],\r\n\"inPayments\":[\r\n      {\r\n         \"customerId\":\"{{userId1}}\",\r\n         \"paymentStatus\":\"New\",\r\n         \"price\":0,\r\n         \"priceWithTax\":0,\r\n         \"total\":0,\r\n         \"totalWithTax\":0,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.PaymentIn\",\r\n         \"taxTotal\":0,\r\n         \"taxPercentRate\":0,\r\n         \"operationType\":\"PaymentIn\",\r\n         \"number\":\"PI220808-00502\",\r\n         \"isApproved\":false,\r\n         \"status\":\"New\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":0,\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"{{paymentId1}}\",\r\n         \"paymentMethod\":{\r\n            \"isEnabled\":false,\r\n            \"paymentMethodType\":\"Unknown\",\r\n            \"paymentMethodGroupType\":\"Manual\",\r\n            \"code\":\"{{nativePaymentMethodCode1}}\",\r\n            \"name\":\"{{nativePaymentMethodName1}}\",\r\n            \"isActive\":true,\r\n            \"priority\":0,\r\n            \"isAvailableForPartial\":false,\r\n            \"price\":0,\r\n            \"priceWithTax\":0,\r\n            \"total\":0,\r\n            \"totalWithTax\":0,\r\n            \"discountAmount\":0,\r\n            \"discountAmountWithTax\":0,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"typeName\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectId\":\"{{nativePaymentMethodId1}}\",\r\n                  \"objectType\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.NativePaymentMethods\",\r\n                  \"groupName\":\"NativePaymentMethods|General\",\r\n                  \"name\":\"NativePaymentMethods.DefaultSetting\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"taxTotal\":0,\r\n            \"taxPercentRate\":0,\r\n            \"id\":\"{{nativePaymentMethodId1}}\"\r\n         },\r\n         \"gatewayCode\":\"{{nativePaymentMethodCode1}}\"\r\n      }\r\n   ],\r\n   \"total\":9499.05,\r\n   \"subTotal\":9999,\r\n   \"subTotalWithTax\":9999,\r\n   \"subTotalDiscount\":499.95,\r\n   \"subTotalDiscountWithTax\":499.95,\r\n   \"subTotalTaxTotal\":0,\r\n   \"shippingTotal\":0,\r\n   \"shippingTotalWithTax\":0,\r\n   \"shippingSubTotal\":0,\r\n   \"shippingSubTotalWithTax\":0,\r\n   \"shippingDiscountTotal\":0,\r\n   \"shippingDiscountTotalWithTax\":0,\r\n   \"shippingTaxTotal\":0,\r\n   \"paymentTotal\":0,\r\n   \"paymentTotalWithTax\":0,\r\n   \"paymentSubTotal\":0,\r\n   \"paymentSubTotalWithTax\":0,\r\n   \"paymentDiscountTotal\":0,\r\n   \"paymentDiscountTotalWithTax\":0,\r\n   \"paymentTaxTotal\":0,\r\n   \"discountTotal\":499.95,\r\n   \"discountTotalWithTax\":499.95,\r\n   \"fee\":0,\r\n   \"feeWithTax\":0,\r\n   \"feeTotal\":0,\r\n   \"feeTotalWithTax\":0,\r\n   \"handlingTotal\":0,\r\n   \"handlingTotalWithTax\":0,\r\n   \"taxTotal\":0,\r\n   \"taxPercentRate\":0,\r\n   \"languageCode\":\"en-US\",\r\n   \"operationType\":\"CustomerOrder\",\r\n   \"number\":\"CO220805-00101\",\r\n   \"isApproved\":false,\r\n   \"status\":\"New\",\r\n   \"currency\":\"USD\",\r\n   \"sum\":9499.05,\r\n   \"childrenOperations\":[\r\n      {\r\n         \"orderId\":\"{{orderId1}}\",\r\n         \"gatewayCode\":\"{{nativePaymentMethodCode1}}\",\r\n         \"paymentMethod\":{\r\n            \"isEnabled\":false,\r\n            \"paymentMethodType\":\"Unknown\",\r\n            \"paymentMethodGroupType\":\"Manual\",\r\n            \"code\":\"{{nativePaymentMethodCode1}}\",\r\n            \"name\":\"xAPIMethod\",\r\n            \"isActive\":true,\r\n            \"priority\":0,\r\n            \"isAvailableForPartial\":false,\r\n            \"price\":0,\r\n            \"priceWithTax\":0,\r\n            \"total\":0,\r\n            \"totalWithTax\":0,\r\n            \"discountAmount\":0,\r\n            \"discountAmountWithTax\":0,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"typeName\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":false,\r\n                  \"objectId\":\"{{nativePaymentMethodId1}}\",\r\n                  \"objectType\":\"DynamicPaymentMethod_{{nativePaymentMethodCode1}}\",\r\n                  \"isReadOnly\":false,\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.NativePaymentMethods\",\r\n                  \"groupName\":\"NativePaymentMethods|General\",\r\n                  \"name\":\"NativePaymentMethods.DefaultSetting\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"ShortText\",\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"taxTotal\":0,\r\n            \"taxPercentRate\":0,\r\n            \"id\":\"{{nativePaymentMethodId1}}\"\r\n         },\r\n         \"customerId\":\"{{userId1}}\",\r\n         \"paymentStatus\":\"New\",\r\n         \"price\":1050,\r\n         \"priceWithTax\":1060.5,\r\n         \"total\":1050,\r\n         \"totalWithTax\":1060.5,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.PaymentIn\",\r\n         \"feeDetails\":[\r\n            \r\n         ],\r\n         \"taxTotal\":10.5,\r\n         \"taxPercentRate\":0.01,\r\n         \"taxDetails\":[\r\n            \r\n         ],\r\n         \"discounts\":[\r\n            \r\n         ],\r\n         \"transactions\":[\r\n            \r\n         ],\r\n         \"operationType\":\"PaymentIn\",\r\n         \"number\":\"PI220808-00502\",\r\n         \"isApproved\":false,\r\n         \"status\":\"New\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":1050,\r\n         \"childrenOperations\":[\r\n            \r\n         ],\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"dynamicProperties\":[\r\n            \r\n         ],\r\n         \"createdDate\":\"2022-08-09T06:44:48.64502Z\",\r\n         \"modifiedDate\":\"2022-08-09T06:45:39.9023675Z\",\r\n         \"createdBy\":\"admin\",\r\n         \"modifiedBy\":\"admin\",\r\n         \"id\":\"{{paymentId1}}\"\r\n      },\r\n      {\r\n         \"fulfillmentCenterId\":\"142ba5568ae4454aad553ece41b9c3b5\",\r\n         \"shipmentMethodCode\":\"FixedRate\",\r\n         \"shipmentMethodOption\":\"Ground\",\r\n         \"shippingMethod\":{\r\n            \"code\":\"FixedRate\",\r\n            \"name\":\"FixedRate\",\r\n            \"logoUrl\":\"https://raw.githubusercontent.com/VirtoCommerce/vc-module-core/master/VirtoCommerce.CoreModule.Web/Content/logoVC.png\",\r\n            \"isActive\":true,\r\n            \"priority\":1,\r\n            \"storeId\":\"{{storeId}}\",\r\n            \"settings\":[\r\n               {\r\n                  \"itHasValues\":true,\r\n                  \"objectId\":\"fa8a1d7fa0ed4aec9358ef82596bb717\",\r\n                  \"objectType\":\"FixedRateShippingMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"value\":10,\r\n                  \"id\":\"9f069d72-0238-4fde-a856-2ed564fab975\",\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.Shipping\",\r\n                  \"groupName\":\"Shipping|General\",\r\n                  \"name\":\"VirtoCommerce.Shipping.FixedRateShippingMethod.Ground.Rate\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"Decimal\",\r\n                  \"defaultValue\":0,\r\n                  \"isDictionary\":false\r\n               },\r\n               {\r\n                  \"itHasValues\":true,\r\n                  \"objectId\":\"fa8a1d7fa0ed4aec9358ef82596bb717\",\r\n                  \"objectType\":\"FixedRateShippingMethod\",\r\n                  \"isReadOnly\":false,\r\n                  \"value\":50,\r\n                  \"id\":\"b4fa897d-fcb1-4821-b189-d42eb2df66b3\",\r\n                  \"restartRequired\":false,\r\n                  \"moduleId\":\"VirtoCommerce.Shipping\",\r\n                  \"groupName\":\"Shipping|General\",\r\n                  \"name\":\"VirtoCommerce.Shipping.FixedRateShippingMethod.Air.Rate\",\r\n                  \"isRequired\":false,\r\n                  \"isHidden\":false,\r\n                  \"valueType\":\"Decimal\",\r\n                  \"defaultValue\":0,\r\n                  \"isDictionary\":false\r\n               }\r\n            ],\r\n            \"typeName\":\"FixedRateShippingMethod\",\r\n            \"id\":\"fa8a1d7fa0ed4aec9358ef82596bb717\"\r\n         },\r\n         \"customerOrderId\":\"6e75d655-ff52-4ad8-9522-c544f04f78a4\",\r\n         \"items\":[\r\n            \r\n         ],\r\n         \"packages\":[\r\n            \r\n         ],\r\n         \"inPayments\":[\r\n            \r\n         ],\r\n         \"feeDetails\":[\r\n            \r\n         ],\r\n         \"weightUnit\":\"116\",\r\n         \"height\":123,\r\n         \"length\":432,\r\n         \"discounts\":[\r\n            \r\n         ],\r\n         \"deliveryAddress\":{\r\n            \"addressType\":\"Billing\",\r\n            \"key\":\"a534d54d-14ec-485e-a66e-e67db16b37c6\",\r\n            \"name\":\"First name address\",\r\n            \"organization\":\"OrganizationTestName\",\r\n            \"countryCode\":\"RU\",\r\n            \"countryName\":\"Russia\",\r\n            \"city\":\"City 17\",\r\n            \"postalCode\":\"111111\",\r\n            \"line1\":\"Address Line 1\",\r\n            \"line2\":\"Address line 2\",\r\n            \"regionId\":\"Test region\",\r\n            \"regionName\":\"Region 15\",\r\n            \"firstName\":\"First test name\",\r\n            \"lastName\":\"Last name test\",\r\n            \"phone\":\"88005553535\",\r\n            \"email\":\"addressCart@email.com\",\r\n            \"isDefault\":false\r\n         },\r\n         \"price\":10,\r\n         \"priceWithTax\":10.1,\r\n         \"total\":10,\r\n         \"totalWithTax\":10.1,\r\n         \"discountAmount\":0,\r\n         \"discountAmountWithTax\":0,\r\n         \"fee\":0,\r\n         \"feeWithTax\":0,\r\n         \"objectType\":\"VirtoCommerce.OrdersModule.Core.Model.Shipment\",\r\n         \"taxTotal\":0.1,\r\n         \"taxPercentRate\":0.01,\r\n         \"taxDetails\":[\r\n            \r\n         ],\r\n         \"operationType\":\"Shipment\",\r\n         \"number\":\"SH220809-00001\",\r\n         \"isApproved\":false,\r\n         \"status\":\"New\",\r\n         \"currency\":\"USD\",\r\n         \"sum\":10,\r\n         \"childrenOperations\":[\r\n            \r\n         ],\r\n         \"cancelledState\":\"Undefined\",\r\n         \"isCancelled\":false,\r\n         \"dynamicProperties\":[\r\n            \r\n         ],\r\n         \"createdDate\":\"2022-08-09T06:44:48.6643779Z\",\r\n         \"modifiedDate\":\"2022-08-09T06:44:48.6643779Z\",\r\n         \"createdBy\":\"admin\",\r\n         \"modifiedBy\":\"admin\",\r\n         \"id\":\"acdcfa8a-9c86-42cb-95ec-38d5f24283b2\"\r\n      }\r\n   ],\r\n   \"cancelledState\":\"Undefined\",\r\n   \"isCancelled\":false,\r\n   \"dynamicProperties\":[\r\n      \r\n   ],\r\n   \"createdDate\":\"2022-08-05T07:28:28.2880881Z\",\r\n   \"modifiedDate\":\"2022-08-05T07:37:29.7512667Z\",\r\n   \"createdBy\":\"admin\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"{{orderId1}}\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/order/customerOrders",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"order",
																"customerOrders"
															]
														}
													},
													"response": []
												},
												{
													"name": "Aauthorize payment - unpaid order",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"C342142 C342149 Sucessful payment authorize for unpaid order\", function () {\r",
																	"    var json = pm.response.json();\r",
																	"    pm.expect(json.data.authorizePayment.isSuccess).to.be.true;\r",
																	"    pm.expect(json.data.authorizePayment.errorMessage).to.be.null;\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation {\nauthorizePayment(command: {\norderId: \"{{orderId1}}\",\npaymentId: \"{{paymentId1}}\"\nparameters: [\n  {\n      key: \"test\",\n      value: \"asda\"\n    },\n]\n}) {\nisSuccess\nerrorMessage\n}\n}",
																"variables": ""
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{AdminToken}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "Clear all",
											"item": [
												{
													"name": "Delete a product 1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"catalog",
																"products"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{ProductId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete user's orders",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Successful POST request\", function () {\r",
																	"    pm.expect(pm.response.code).to.be.oneOf([204, 202]);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{AdminToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/order/customerOrders?ids={{orderId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"order",
																"customerOrders"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{orderId1}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete users",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"Delete users [admin]\", function(){\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData.data.deleteUsers).to.not.empty;\r",
																	"    pm.expect(jsonData.data.deleteUsers.succeeded).to.be.equal(true);\r",
																	"    pm.expect(data.errors).to.be.undefined;\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"userNames\":[\"{{userName1}}\",\"{{userName2}}\"]\r\n   \r\n  }\r\n}\r\n"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete contact_1",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId3}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete contact_2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "graphql",
															"graphql": {
																"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
																"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
															}
														},
														"url": {
															"raw": "{{url}}/graphql",
															"host": [
																"{{url}}"
															],
															"path": [
																"graphql"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete non-intergative payment method",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{url}}/api/native-payment-methods?ids={{nativePaymentMethodId1}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"api",
																"native-payment-methods"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "{{nativePaymentMethodId1}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"auth": {
												"type": "bearer",
												"bearer": [
													{
														"key": "token",
														"value": "{{AdminToken}}",
														"type": "string"
													}
												]
											},
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{AdminToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						}
					]
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get user's contact",
			"item": [
				{
					"name": "Prepare",
					"item": [
						{
							"name": "Delete users [admin]",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
										"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\",\"{{userName2}}\"\r\n    ]\r\n  }\r\n}\r\n"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact_1 [admin]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Set contactId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
										"variables": "{\n\"command\": {\n\"name\": \"Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Contact1\",\n\"firstName\": \"Contact1\",\n\"lastName\": \"Contact1\"\n}\n}\n\n"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact_2 [admin]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Set contactId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"contactId2\", jsonData.data.createContact.id);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
										"variables": "{\n\"command\": {\n\"name\": \"Contact2\",\n\"memberType\": \"Contact2\",\n\"addresses\": [],\n\"fullName\": \"Contact2\",\n\"firstName\": \"Contact2\",\n\"lastName\": \"Contact@\"\n}\n}\n\n"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add User_1 [admin]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"createUser = true\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
										"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"Password1\",\n    \"userName\": \"{{userName1}}\",\n    \"userType\": \"Customer\",\n    \"memberId\":\"{{contactId1}}\"\n      }}\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add User_2 [admin]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"createUser = true\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
										"variables": "{\n\"command\":\n  {\n     \"applicationUser\":{\n    \"createdBy\": \"eXp16\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\":\"Password1\",\n    \"userName\": \"{{userName2}}\",\n    \"userType\": \"Customer\"  }}\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check added User_1 [admin]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check user\", function () {\r",
											"    var data = pm.response.json();\r",
											" pm.expect(data.data.user).to.be.not.empty;\r",
											"    pm.expect(data.errors).to.be.undefined;\r",
											"});\r",
											"pm.test(\"Set userId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"userId1\", jsonData.data.user.id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query user {\r\n    user (userName: \"{{userName1}}\") {\r\n       id\r\n       isAdministrator\r\n    }\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check added User_2 [admin]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check user\", function () {\r",
											"    var data = pm.response.json();\r",
											" pm.expect(data.data.user).to.be.not.empty;\r",
											"    pm.expect(data.errors).to.be.undefined;\r",
											"});\r",
											"pm.test(\"Set userId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"userId2\", jsonData.data.user.id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query user {\r\n    user (userName: \"{{userName2}}\") {\r\n       id\r\n       isAdministrator\r\n    }\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Token for User_1 [admin]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Set Token1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"Token1\", jsonData.access_token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(() => {}, 1000); "
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "grand_type",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=password&scope=offline_access&username={{userName1}}&password=Password1",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{url}}/connect/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get user's contact",
					"item": [
						{
							"name": "User assign to contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"C251797 USER exist\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.contact.securityAccounts[0].id).to.eql(pm.collectionVariables.get(\"userId1\"));\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query contact {\r\ncontact (\r\n    id: \"{{contactId1}}\",\r\n    userId:\"{{userId1}}\"\r\n) {\r\n    fullName\r\n    id\r\n    securityAccounts{\r\n      userName\r\n      id\r\n      email\r\n    }\r\n}\r\n}\r\n\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "User unassign to contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"USER not exist\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.contact.securityAccounts).to.not.include(pm.collectionVariables.get(\"userId2\"));\r",
											"\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query contact {\r\ncontact (\r\n    id: \"{{contactId2}}\",\r\n    userId:\"{{userId2}}\"\r\n) {\r\n    fullName\r\n    id\r\n    securityAccounts{\r\n      userName\r\n      id\r\n      email\r\n    }\r\n}\r\n}\r\n\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "Delete users [admin]",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
										"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"{{userName1}}\",\"{{userName2}}\"\r\n    ]\r\n  }\r\n}\r\n"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AdminToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Organization registration >Validation>Email [BLOCKED]",
			"item": [
				{
					"name": "Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"C343363 error 'Empty organization email' \", function(){\r",
									"pm.expect(pm.response.text()).to.include(\"There are validation errors\");\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n    requestRegistration(command:$command){\r\n        organization{\r\n            name\r\n            id\r\n            description\r\n            status\r\n            createdBy\r\n            address{\r\n                city\r\n                countryName\r\n                email\r\n            }\r\n            dynamicProperties{\r\n                name\r\n                value\r\n            }\r\n            }\r\n            \r\n            contact{\r\n            firstName\r\n            lastName\r\n            id\r\n            status\r\n            createdBy\r\n        }\r\n\r\n        account{\r\n            id\r\n            username\r\n            email\r\n            status\r\n            createdBy\r\n            }\r\n\r\n        \r\n\r\n        result{\r\n            succeeded\r\n            errors\r\n        }\r\n    \r\n  }\r\n}\r\n",
								"variables": "{\r\n\"command\": {\r\n    \"storeId\":\"{{storeId1}}\",\r\n    \"organization\": {\r\n        \"name\": \"{{$randomCompanyName}}\",\r\n        \"description\": \"{{comment}}\",\r\n        \"address\": {\r\n            \"city\": \"{{$randomCity}}\",\r\n            \"countryCode\":\"{{$randomCountryCode}}\",\r\n            \"email\":\"\",\r\n            \"countryName\":\"{{$randomCountry}}\",\r\n            \"firstName\":\"first121\",\r\n            \"lastName\":\"las4244t\",\r\n            \"line1\":\"line1\",\r\n            \"postalCode\":\"123654\"\r\n    \r\n        }\r\n    },\r\n    \"contact\": {\r\n        \"firstName\": \"{{$randomFirstName}}\",\r\n        \"lastName\": \"{{$randomLastName}}\"\r\n        },\r\n    \"account\": {\r\n        \"username\": \"{{$randomUserName}}\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"password\":\"{{$randomPassword}}\"\r\n        }\r\n    }\r\n  }\r\n\r\n\r\n  "
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"C343364 error 'Empty organization email' \", function(){\r",
									"pm.expect(pm.response.text()).to.include(\"There are validation errors\");\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation requestRegistration($command: InputRequestRegistrationType!){\r\n    requestRegistration(command:$command){\r\n        organization{\r\n            name\r\n            id\r\n            description\r\n            status\r\n            createdBy\r\n            address{\r\n                city\r\n                countryName\r\n                email\r\n            }\r\n            dynamicProperties{\r\n                name\r\n                value\r\n            }\r\n            }\r\n            \r\n            contact{\r\n            firstName\r\n            lastName\r\n            id\r\n            status\r\n            createdBy\r\n        }\r\n\r\n        account{\r\n            id\r\n            username\r\n            email\r\n            status\r\n            createdBy\r\n            }\r\n\r\n        \r\n\r\n        result{\r\n            succeeded\r\n            errors\r\n        }\r\n    \r\n  }\r\n}\r\n",
								"variables": "{\r\n\"command\": {\r\n    \"storeId\":\"{{storeId1}}\",\r\n    \"organization\": {\r\n        \"name\": \"{{$randomCompanyName}}\",\r\n        \"description\": \"{{comment}}\",\r\n        \"address\": {\r\n            \"city\": \"{{$randomCity}}\",\r\n            \"countryCode\":\"{{$randomCountryCode}}\",\r\n            \"email\":\"@\",\r\n            \"countryName\":\"{{$randomCountry}}\",\r\n            \"firstName\":\"first121\",\r\n            \"lastName\":\"las4244t\",\r\n            \"line1\":\"line1\",\r\n            \"postalCode\":\"123654\"\r\n    \r\n        }\r\n    },\r\n    \"contact\": {\r\n        \"firstName\": \"{{$randomFirstName}}\",\r\n        \"lastName\": \"{{$randomLastName}}\"\r\n        },\r\n    \"account\": {\r\n        \"username\": \"{{$randomUserName}}\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"password\":\"{{$randomPassword}}\"\r\n        }\r\n    }\r\n  }\r\n\r\n\r\n  "
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "queries",
			"item": [
				{
					"name": "me",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query me  {\n    me {\n        accessFailedCount\n        contact {\n            addresses {\n                items{\n                addressType\n                city\n                countryCode\n                countryName\n                email\n                firstName\n                key\n                lastName\n                line1\n                line2\n                middleName\n                name\n                organization\n                phone\n                postalCode\n                regionId\n                regionName\n                zip\n            }}\n            birthDate\n            firstName\n            fullName\n            id\n            lastName\n            memberType\n            middleName\n            name\n            organizationId\n            organizations {items{\n                addresses {items{\n                    addressType\n                    city\n                    countryCode\n                    countryName\n                    email\n                    firstName\n                    key\n                    lastName\n                    line1\n                    line2\n                    middleName\n                    name\n                    organization\n                    phone\n                    postalCode\n                    regionId\n                    regionName\n                    zip\n                }}}\n                items\n                contacts  {\n                    edges {\n                        cursor\n                    }\n                    items {\n                        birthDate\n                        firstName\n                        fullName\n                        id\n                        lastName\n                        memberType\n                        middleName\n                        name\n                        organizationId\n                        organizationsIds\n                        outerId\n                        phones\n                    }\n                    pageInfo {\n                        endCursor\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                    }\n                    totalCount\n                }\n                description\n                emails\n                groups\n                id\n                memberType\n                name\n                outerId\n                ownerId\n                parentId\n                phones\n                seoObjectType\n            }\n            organizationsIds\n            {id}\n            outerId\n            phones\n            securityAccounts {\n                accessFailedCount\n                contact {\n                    birthDate\n                    firstName\n                    fullName\n                    id\n                    lastName\n                    memberType\n                    middleName\n                    name\n                    organizationId\n                    organizationsIds\n                    outerId\n                    phones\n                }\n                createdBy\n                createdDate\n                email\n                emailConfirmed\n                id\n                isAdministrator\n                lockoutEnabled\n                lockoutEnd\n                memberId\n                modifiedBy\n                modifiedDate\n                normalizedEmail\n                normalizedUserName\n                passwordExpired\n                permissions\n                phoneNumber\n                phoneNumberConfirmed\n                photoUrl\n                roles {\n                    description\n                    id\n                    name\n                    normalizedName\n                    permissions\n                }\n                securityStamp\n                storeId\n                twoFactorEnabled\n                userName\n                userType\n            }\n        }\n        createdBy\n        createdDate\n        email\n        emailConfirmed\n        id\n        isAdministrator\n        lockoutEnabled\n        lockoutEnd\n        memberId\n        modifiedBy\n        modifiedDate\n        normalizedEmail\n        normalizedUserName\n        passwordExpired\n        permissions\n        phoneNumber\n        phoneNumberConfirmed\n        photoUrl\n        roles {\n            description\n            id\n            name\n            normalizedName\n            permissions\n        }\n        securityStamp\n        storeId\n        twoFactorEnabled\n        userName\n        userType\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "role",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query role ($roleName: String!) {\n    role (roleName: $roleName) {\n        description\n        id\n        name\n        normalizedName\n        permissions\n    }\n}",
								"variables": "{\n  \"roleName\": \"Organization maintainer\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Transferring d.p. from Cart to Order [ID]",
			"item": [
				{
					"name": "Prepare",
					"item": [
						{
							"name": "Add Default and Available to Electronics",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\":\"Electronics\",\r\n   \"storeState\":\"Open\",\r\n   \"country\":\"USA\",\r\n   \"defaultLanguage\":\"en-US\",\r\n   \"defaultCurrency\":\"USD\",\r\n   \"catalog\":\"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n   \"creditCardSavePolicy\":false,\r\n   \"url\":\"https://vcplatform-storefront.qa.govirto.com\",\r\n   \"secureUrl\":\"\",\r\n   \"email\":\"noreply@mail.com\",\r\n   \"displayOutOfStock\":false,\r\n   \"mainFulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"additionalFulfillmentCenterIds\":[\r\n      \"{{AvaibleFFCId}}\"\r\n   ],\r\n   \"mainReturnsFulfillmentCenterId\":\"{{DefaultFFCId}}\",\r\n   \"returnsFulfillmentCenterIds\":[\r\n      \"{{AvaibleFFCId}}\"\r\n   ],\r\n   \"languages\":[\r\n      \"de-DE\",\r\n      \"fr-FR\",\r\n      \"en-US\"\r\n   ],\r\n   \"currencies\":[\r\n      \"XPT\",\r\n      \"EUR\",\r\n      \"USD\"\r\n   ],\r\n   \"trustedGroups\":[\r\n      \"Clothing\"\r\n   ],\r\n   \"seoObjectType\":\"Store\",\r\n   \"seoInfos\":[\r\n      {\r\n         \"semanticUrl\":\"Electronique\",\r\n         \"pageTitle\":\"Electronique\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"fr-FR\",\r\n         \"id\":\"15b0752d92cb47b69001f31b10127514\"\r\n      },\r\n      {\r\n         \"semanticUrl\":\"Electronics\",\r\n         \"pageTitle\":\"Electronics\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"en-US\",\r\n         \"id\":\"27546a48097b4e59900da9a4f5a17ac8\"\r\n      },\r\n      {\r\n         \"semanticUrl\":\"Electronics\",\r\n         \"pageTitle\":\"Electronics\",\r\n         \"storeId\":\"Electronics\",\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"isActive\":true,\r\n         \"languageCode\":\"de-DE\",\r\n         \"id\":\"cfecfc3f5ce5486eaaf52886da7c957c\"\r\n      }\r\n   ],\r\n   \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n   \"dynamicProperties\":[\r\n      {\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"Electronics\",\r\n               \"value\":\"\",\r\n               \"valueType\":\"ShortText\",\r\n               \"propertyId\":\"Default_Theme_Name_Property\",\r\n               \"propertyName\":\"DefaultThemeName\"\r\n            }\r\n         ],\r\n         \"name\":\"DefaultThemeName\",\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"valueType\":\"Undefined\",\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"Default_Theme_Name_Property\"\r\n      },\r\n      {\r\n         \"values\":[\r\n            {\r\n               \"objectType\":\"VirtoCommerce.StoreModule.Core.Model.Store\",\r\n               \"objectId\":\"Electronics\",\r\n               \"value\":\"{\\n  \\\"Attributes\\\": [\\n    {\\n      \\\"Key\\\": \\\"Brand\\\",\\n      \\\"FacetSize\\\": null,\\n      \\\"Order\\\": 0,\\n      \\\"Values\\\": [\\n        {\\n          \\\"Id\\\": \\\"3DR\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Apple\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Asus\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Beats By Dr Dre\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"BLU\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"DJI\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"E-flite\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"HTC\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"LG\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Microsoft\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Onkyo\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Panasonic\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Parrot\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Powerbeats\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Samsung\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Sony\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"SunBriteTV\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Teac\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Vizio\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Walkera\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"xFold\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"Key\\\": \\\"Color\\\",\\n      \\\"FacetSize\\\": null,\\n      \\\"Order\\\": 1,\\n      \\\"Values\\\": [\\n        {\\n          \\\"Id\\\": \\\"Black\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Bronze\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Camo green\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Gold\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Gold Platinum\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Gray\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Green\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Red\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Ruby red\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Sheer Gold\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Silver\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Space Gray\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"Titanium grey\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"White\\\"\\n        },\\n        {\\n          \\\"Id\\\": \\\"White Pearl\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"Key\\\": \\\"Display size\\\",\\n      \\\"FacetSize\\\": null,\\n      \\\"Order\\\": 2,\\n      \\\"Values\\\": null\\n    }\\n  ],\\n  \\\"AttributeRanges\\\": [],\\n  \\\"Prices\\\": [\\n    {\\n      \\\"Key\\\": \\\"price\\\",\\n      \\\"Currency\\\": \\\"USD\\\",\\n      \\\"Order\\\": 3,\\n      \\\"Values\\\": [\\n        {\\n          \\\"Id\\\": \\\"under-100\\\",\\n          \\\"Lower\\\": null,\\n          \\\"Upper\\\": \\\"100\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"100-200\\\",\\n          \\\"Lower\\\": \\\"100\\\",\\n          \\\"Upper\\\": \\\"200\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"200-600\\\",\\n          \\\"Lower\\\": \\\"200\\\",\\n          \\\"Upper\\\": \\\"600\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"600-1000\\\",\\n          \\\"Lower\\\": \\\"600\\\",\\n          \\\"Upper\\\": \\\"1000\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"over-1000\\\",\\n          \\\"Lower\\\": \\\"1000\\\",\\n          \\\"Upper\\\": null,\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        }\\n      ]\\n    },\\n    {\\n      \\\"Key\\\": \\\"price\\\",\\n      \\\"Currency\\\": \\\"EUR\\\",\\n      \\\"Order\\\": 4,\\n      \\\"Values\\\": [\\n        {\\n          \\\"Id\\\": \\\"under-100\\\",\\n          \\\"Lower\\\": null,\\n          \\\"Upper\\\": \\\"100\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"100-200\\\",\\n          \\\"Lower\\\": \\\"100\\\",\\n          \\\"Upper\\\": \\\"200\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"200-600\\\",\\n          \\\"Lower\\\": \\\"200\\\",\\n          \\\"Upper\\\": \\\"600\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"600-1000\\\",\\n          \\\"Lower\\\": \\\"600\\\",\\n          \\\"Upper\\\": \\\"1000\\\",\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        },\\n        {\\n          \\\"Id\\\": \\\"over-1000\\\",\\n          \\\"Lower\\\": \\\"1000\\\",\\n          \\\"Upper\\\": null,\\n          \\\"IncludeLower\\\": true,\\n          \\\"IncludeUpper\\\": false\\n        }\\n      ]\\n    },\\n    {\\n      \\\"Key\\\": \\\"price\\\",\\n      \\\"Currency\\\": \\\"XPT\\\",\\n      \\\"Order\\\": 5,\\n      \\\"Values\\\": []\\n    }\\n  ]\\n}\",\r\n               \"valueType\":\"LongText\",\r\n               \"propertyId\":\"VirtoCommerce.Catalog_FilteredBrowsing_Property\",\r\n               \"propertyName\":\"FilteredBrowsing\"\r\n            }\r\n         ],\r\n         \"name\":\"FilteredBrowsing\",\r\n         \"isArray\":false,\r\n         \"isDictionary\":false,\r\n         \"isMultilingual\":false,\r\n         \"isRequired\":false,\r\n         \"valueType\":\"Undefined\",\r\n         \"createdDate\":\"0001-01-01T00:00:00Z\",\r\n         \"id\":\"VirtoCommerce.Catalog_FilteredBrowsing_Property\"\r\n      }\r\n   ],\r\n   \"settings\":[\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.TaxCalculationEnabled\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.AllowAnonymousUsers\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":false,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.IsSpa\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.EmailVerificationEnabled\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":false,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":true,\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|General\",\r\n         \"name\":\"Stores.EnablePriceRoundingForTotalsCalculation\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"Boolean\",\r\n         \"defaultValue\":true,\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Store\",\r\n         \"groupName\":\"Store|SEO\",\r\n         \"name\":\"Stores.SeoLinksType\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"allowedValues\":[\r\n            \"None\",\r\n            \"Short\",\r\n            \"Collapsed\",\r\n            \"Long\"\r\n         ],\r\n         \"defaultValue\":\"Collapsed\",\r\n         \"isDictionary\":false\r\n      },\r\n      {\r\n         \"itHasValues\":true,\r\n         \"objectId\":\"Electronics\",\r\n         \"objectType\":\"Store\",\r\n         \"value\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"restartRequired\":false,\r\n         \"moduleId\":\"VirtoCommerce.Orders\",\r\n         \"groupName\":\"Orders|Orders\",\r\n         \"name\":\"Order.CustomerOrderNewNumberTemplate\",\r\n         \"isHidden\":false,\r\n         \"valueType\":\"ShortText\",\r\n         \"defaultValue\":\"CO{0:yyMMdd}-{1:D5}\",\r\n         \"isDictionary\":false\r\n      },\r\n\r\n\r\n\r\n\r\n\r\n\r\n   ],\r\n   \"typeName\":\"Store\",\r\n   \"createdDate\":\"2015-10-06T22:39:51.553Z\",\r\n   \"modifiedDate\":\"2021-11-29T10:45:34.43732Z\",\r\n   \"createdBy\":\"unknown\",\r\n   \"modifiedBy\":\"admin\",\r\n   \"id\":\"Electronics\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/stores",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"stores"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create product_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Set ProductId1\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"ProductId1\", jsonData.id);\r",
											"pm.collectionVariables.set(\"Nameofproduct1\", jsonData.name);\r",
											"pm.collectionVariables.set(\"Code1\", jsonData.code);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"DDR-234304560\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"{{catalogQA}}\",\r\n    \"categoryId\": \"{{categoryQA}}\",\r\n    \"isActive\": true,\r\n    \"maxQuantity\": \"100\",\r\n    \"minQuantity\": \"1\",\r\n    \"startDate\": \"0001-01-01T00:00:00Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"Multi\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": true,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"fr-FR\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"de-DE\"\r\n                },\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"a9d63927-3b90-48f1-9006-fafc013c4a6f\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property3\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Product\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fc79d38-60bd-49be-ba14-d5bb631ce3dd\"\r\n        },\r\n        {\r\n            \"isReadOnly\": false,\r\n            \"isManageable\": true,\r\n            \"isNew\": false,\r\n            \"catalogId\": \"{{catalogQA}}\",\r\n            \"name\": \"new_property4\",\r\n            \"required\": false,\r\n            \"dictionary\": false,\r\n            \"multivalue\": false,\r\n            \"multilanguage\": false,\r\n            \"hidden\": false,\r\n            \"valueType\": \"ShortText\",\r\n            \"type\": \"Variation\",\r\n            \"values\": [],\r\n            \"attributes\": [],\r\n            \"displayNames\": [\r\n                {\r\n                    \"languageCode\": \"en-US\"\r\n                }\r\n            ],\r\n            \"validationRules\": [],\r\n            \"isInherited\": true,\r\n            \"id\": \"0fa78f60-13b3-4171-9344-2df47b251c56\"\r\n        }\r\n    ],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"0001-01-01T00:00:00Z\",\r\n    \"productType\": \"Physical\",\r\n     \"reviews\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/catalog/products",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"catalog",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add price to the product 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productId\": \"{{ProductId1}}\",\r\n  \"product\": {\r\n    \"code\": \"{{Code1}}\",\r\n    \"name\": \"Product1\",\r\n    \"catalogId\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n    \"categoryId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"outline\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n    \"path\": \"Cell phones\",\r\n    \"isBuyable\": true,\r\n    \"isActive\": true,\r\n    \"trackInventory\": true,\r\n    \"maxQuantity\": 0,\r\n    \"minQuantity\": 0,\r\n    \"productType\": \"Physical\",\r\n    \"startDate\": \"2021-10-13T11:15:17.8103888Z\",\r\n    \"priority\": 0,\r\n    \"properties\": [],\r\n    \"images\": [],\r\n    \"assets\": [],\r\n    \"links\": [],\r\n    \"seoObjectType\": \"CatalogProduct\",\r\n    \"seoInfos\": [\r\n      {\r\n        \"semanticUrl\": \"product1\",\r\n        \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n        \"objectType\": \"CatalogProduct\",\r\n        \"isActive\": true,\r\n        \"languageCode\": \"en-US\",\r\n        \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n      }\r\n    ],\r\n    \"reviews\": [],\r\n    \"associations\": [],\r\n    \"referencedAssociations\": [],\r\n    \"outlines\": [\r\n      {\r\n        \"items\": [\r\n          {\r\n            \"id\": \"4974648a41df4e6ea67ef2ad76d7bbd4\",\r\n            \"seoObjectType\": \"Catalog\",\r\n            \"name\": \"Electronics\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"Cell-phones\",\r\n            \"seoObjectType\": \"Category\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"cell-phones\",\r\n                \"objectId\": \"0d4ad9bab9184d69a6e586effdf9c2ea\",\r\n                \"objectType\": \"Category\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"73642cc7f2e44d92af13e94c79c73456\"\r\n              }\r\n            ],\r\n            \"name\": \"Cell phones\",\r\n            \"hasVirtualParent\": false\r\n          },\r\n          {\r\n            \"id\": \"DDR-234304560\",\r\n            \"seoObjectType\": \"CatalogProduct\",\r\n            \"seoInfos\": [\r\n              {\r\n                \"semanticUrl\": \"product1\",\r\n                \"objectId\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n                \"objectType\": \"CatalogProduct\",\r\n                \"isActive\": true,\r\n                \"languageCode\": \"en-US\",\r\n                \"id\": \"3e03dc62-18c2-42e6-a220-cc95e042cf76\"\r\n              }\r\n            ],\r\n            \"name\": \"Product1\",\r\n            \"hasVirtualParent\": false\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"isInherited\": false,\r\n    \"createdDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"modifiedDate\": \"2021-10-13T11:15:17.8142229Z\",\r\n    \"createdBy\": \"admin\",\r\n    \"modifiedBy\": \"admin\",\r\n    \"id\": \"a9c8297d-ce0d-4ec6-99de-270105e80a98\",\r\n    \"_priority\": 0\r\n  },\r\n  \"prices\": [\r\n    {\r\n      \"productId\": \"{{ProductId1}}\",\r\n      \"list\": {{ProductPrice1}},\r\n      \"minQuantity\": 1,\r\n      \"currency\": \"USD\",\r\n      \"pricelistId\": \"934da94516a74f9ab4ec001343ac928a\",\r\n      \"name\": \"ElectronicsUSD\",\r\n      \"catalog\": \"Electronics virtual, Electronics\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/products/{{ProductId1}}/prices",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"products",
										"{{ProductId1}}",
										"prices"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add stock qty to the product 1 Available",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Add stock qty to the product 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.inStockQuantity).to.eql(132);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"fulfillmentCenterId\":\"{{AvaibleFFCId}}\",\r\n   \"fulfillmentCenterName\":\"{{AvailableFFCName}}\",\r\n   \"fulfillmentCenter\":{\r\n      \"name\":\"{{AvailableFFCName}}\",\r\n      \"description\":\"<h3>Branch Hours</h3>\\n                            <table class=\\\"table\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th class=\\\"day\\\">Day</th>\\n                                        <th><span class=\\\"hours\\\">Hours</span></th>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>MON</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>TUE</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>WED</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>THU</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>FRI</td>\\n                                        <td>7:30 AM - 5:00 PM</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SAT</td>\\n                                        <td>\\n\\n                                            CLOSED\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>SUN</td>\\n                                        <td>CLOSED</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\",\r\n      \"address\":{\r\n         \"addressType\":0,\r\n         \"countryCode\":\"USA\",\r\n         \"countryName\":\"United States\",\r\n         \"city\":\"Chicago\",\r\n         \"postalCode\":\"60640\",\r\n         \"line1\":\"5400 N. Lakewood Avenue\",\r\n         \"regionName\":\"Illinois\",\r\n         \"phone\":\"(312) 222-3333\",\r\n         \"isDefault\":false\r\n      },\r\n      \"createdDate\":\"2018-05-05T05:55:00.64Z\",\r\n      \"modifiedDate\":\"2021-11-18T11:54:44.6718532Z\",\r\n      \"createdBy\":\"admin\",\r\n      \"modifiedBy\":\"admin\"\r\n   },\r\n   \"productId\":\"{{ProductId1}}\",\r\n   \"inStockQuantity\":132,\r\n   \"reservedQuantity\":0,\r\n   \"reorderMinQuantity\":0,\r\n   \"preorderQuantity\":0,\r\n   \"backorderQuantity\":0,\r\n   \"allowBackorder\":false,\r\n   \"allowPreorder\":false,\r\n   \"inTransit\":0,\r\n   \"status\":\"Disabled\",\r\n   \"createdDate\":\"0001-01-01T00:00:00Z\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/inventory/products/{{ProductId1}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"inventory",
										"products",
										"{{ProductId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Index products",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check Index\", function(){\r",
											"var jsonData = pm.response.json();\r",
											"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(() => {}, 1000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"documentType\": \"Product\",\r\n        \"documentIds\": [\r\n            \"{{ProductId2}}\", \"{{ProductId1}}\",\"{{ProductId3}}\"\r\n        ]\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/search/indexes/index",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"search",
										"indexes",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "getCart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Set cartId1, userId1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"cartId1\", jsonData.data.cart.id);\r",
											"    pm.collectionVariables.set(\"userId1\", jsonData.data.cart.customerId);\r",
											"});\r",
											"pm.test(\"Check cart by user ID\", function () {\r",
											"    var data = pm.response.json();\r",
											"    pm.expect(data.data.cart).to.not.eql(null);\r",
											"    pm.expect(data.data.cart).to.be.an(\"object\");\r",
											"    pm.expect(data.data.cart.id).to.be.a(\"string\");\r",
											"    pm.expect(data.errors).to.be.undefined;\r",
											"});\r",
											"pm.test(\"Check available payment method\", function () {\r",
											"    var data = pm.response.json();\r",
											"    pm.expect(data.data.cart.availablePaymentMethods).to.not.empty;\r",
											"     pm.expect(data.errors).to.be.undefined;\r",
											"});\r",
											"pm.test(\"Check available shipment method\", function () {\r",
											"    var data = pm.response.json();\r",
											"    pm.expect(data.data.cart.availableShippingMethods).to.not.empty;\r",
											" pm.expect(data.errors).to.be.undefined;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "{\r\ncart (\r\nstoreId:\"{{storeId}}\"\r\nuserId: \"{{$randomUUID}}\"\r\ncurrencyCode: \"{{currencyCode}}\"\r\ncultureName: \"{{cultureName}}\"\r\ncartName: \"{{cartName}}\"\r\n)\r\n{\r\nid\r\ncustomerId\r\nitems\r\n{\r\n    id\r\n    name\r\n}\r\ncoupons{\r\n    code\r\n}\r\ncomment\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\nitems\r\n{\r\nid\r\nname\r\nproductId\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n\r\nlistPrice {\r\namount\r\n}\r\n}\r\navailableShippingMethods {\r\ncode\r\noptionName\r\nlogoUrl\r\ncurrency {\r\ncode\r\n}\r\ntotal {\r\namount\r\n}\r\noptionDescription\r\nprice {\r\namount\r\n}\r\npriority\r\n}\r\navailablePaymentMethods {\r\ncode\r\ncurrency{\r\ncode\r\n}\r\nlogoUrl\r\nisAvailableForPartial\r\ntaxTotal{\r\namount\r\n}\r\npaymentMethodGroupType\r\nprice {\r\namount\r\n}\r\npriority\r\nisAvailableForPartial\r\n}\r\ntaxTotal {\r\namount\r\n}\r\ntotal{\r\n    amount\r\n}\r\npayments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n\r\nshipments\r\n{\r\n    id\r\n    dynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n  dictionaryItem{\r\n    id\r\n    name\r\n    label\r\n  }\r\n}\r\n}\r\n}}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "add item",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check items\", function(){\r",
											"var jsonData = pm.response.json();\r",
											"pm.expect(jsonData.data.addItemsCart.items[0]).to.be.not.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Set LineitemsId\", function(){\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"cartLineItem1\",jsonData.data.addItemsCart.items[0].id);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation ($command: InputAddItemsType!) {\r\n    addItemsCart (command: $command)        \r\n    {\r\n        id\r\n        items {\r\n            productId,\r\n            quantity,\r\n            id\r\n\r\n        }\r\n    }\r\n}",
										"variables": "{\r\n  \"command\": {\r\n    \"storeId\": \"{{storeId}}\",\r\n    \"cartName\": \"{{cartName}}\",\r\n    \"userId\": \"{{userId1}}\",\r\n    \"currencyCode\": \"{{currencyCode}}\",\r\n    \"cultureName\": \"{{cultureName}}\",\r\n    \"cartType\": null,\r\n    \"cartId\": \"{{cartId1}}\",\r\n    \"cartItems\": [{\r\n        \"productId\": \"{{ProductId1}}\",\r\n        \"quantity\": 2\r\n    }\r\n    ]\r\n  }\r\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "addOrUpdateCartPayment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"AddOrUpdatePayment\", function(){\r",
											"    var jSonData = pm.response.json();\r",
											"    pm.expect(jSonData.data.addOrUpdateCartPayment.id).to.not.eql(null);\r",
											"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).to.be.an(\"object\");\r",
											"    pm.expect(jSonData.data.addOrUpdateCartPayment.payments[0]).not.empty;\r",
											"    pm.collectionVariables.set(\"paymentId1\",jSonData.data.addOrUpdateCartPayment.payments[0].id);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation addOrUpdateCartPayment($command: InputAddOrUpdateCartPaymentType!) {\naddOrUpdateCartPayment(command: $command) {\nid\npayments {\nid\nouterId\npaymentGatewayCode\nprice {\namount\n}\namount {\namount\n}\nbillingAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
										"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{cartName}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"payment\": {\n\"id\": \"{{$randomUUID}}\",\n\"outerId\": \"paymentouterud_default_test_1\",\n\"paymentGatewayCode\": \"DefaultManualPaymentMethod\",\n\"billingAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"id\": \"KeyTest\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 1050,\n\"amount\": 1050\n}\n}\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "addOrUpdateCartShipment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"AddOrUpdateShipment\", function(){\r",
											"    var jSonData = pm.response.json();\r",
											"    pm.expect(jSonData.data.addOrUpdateCartShipment.id).to.not.eql(null);\r",
											"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).to.be.an(\"object\");\r",
											"    pm.expect(jSonData.data.addOrUpdateCartShipment.shipments[0]).not.empty;\r",
											"    pm.expect(data.errors).to.be.undefined;\r",
											"    pm.collectionVariables.set(\"shipmentId1\",jSonData.data.addOrUpdateCartShipment.shipments[0].id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation addOrUpdateCartShipment($command:InputAddOrUpdateCartShipmentType!) {addOrUpdateCartShipment(command: $command) {\nshipments {\nid\nshipmentMethodCode\nshipmentMethodOption\nfulfillmentCenterId\nprice{\namount\n}\ndeliveryAddress {\nid\ncity\ncountryCode\ncountryName\nemail\nfirstName\nlastName\nline1\nline2\nmiddleName\nname\norganization\nphone\npostalCode\nregionId\nregionName\nzip\n}\n}\n}\n}",
										"variables": "{\n\"command\": {\n\"cartId\": \"{{cartId1}}\",\n\"storeId\": \"{{storeId}}\",\n\"cartName\": \"{{default}}\",\n\"userId\": \"{{userId1}}\",\n\"currencyCode\": \"{{currencyCode}}\",\n\"cultureName\":\"{{cultureName}}\",\n\"cartType\": null,\n\"shipment\": {\n\"id\": \"{{$randomUUID}}\",\n\"fulfillmentCenterId\": \"142ba5568ae4454aad553ece41b9c3b5\",\n\"height\": 123,\n\"length\": 432,\n\"measureUnit\": \"mm\",\n\"shipmentMethodCode\": \"FixedRate\",\n\"shipmentMethodOption\": \"Ground\",\n\"volumetricWeight\": 151,\n\"weight\": 15643,\n\"weightUnit\": \"116\",\n\"width\": 114,\n\"deliveryAddress\": {\n\"city\": \"City 17\",\n\"countryCode\": \"RU\",\n\"countryName\": \"Russia\",\n\"email\": \"addressCart email test\",\n\"firstName\": \"First test name\",\n\"key\": \"KeyTest\",\n\"lastName\": \"Last name test\",\n\"line1\": \"Address Line 1\",\n\"line2\": \"Address line 2\",\n\"middleName\": \"Test Middle Name\",\n\"name\": \"First name address\",\n\"organization\": \"OrganizationTestName\",\n\"phone\": \"88005553535\",\n\"postalCode\": \"111111\",\n\"regionId\": \"Test region\",\n\"regionName\": \"Region 15\",\n\"zip\": \"13413\",\n\"addressType\": 1\n},\n\"currency\": \"USD\",\n\"price\": 10\n}\n}\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Transferring dynamic properties from Cart to Order",
					"item": [
						{
							"name": "Add dynamic property to cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"C315653 Add dynamicproperty to cart\", function(){\r",
											"\r",
											"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"Purchase order number\"));\r",
											"    //pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"Decimal\"));\r",
											"\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation updateCartDynamicProperties($command: InputUpdateCartDynamicPropertiesType!) {\r\nupdateCartDynamicProperties(command: $command) {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\n\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n} ",
										"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId1}}\",  \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"Purchase order number\",\r\n\"value\": \"{{Purchase order number}}\"\r\n},\r\n{\"name\": \"Decimal\",\r\n\"value\": \"{{Decimal}}\"\r\n}]\r\n}  \r\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add dynamic properties for lineitem_1 in cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"C315655 Add dynamicproperties for lineitems\", function(){\r",
											"\r",
											"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"A_line_long\"));\r",
											"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"Brand\"));\r",
											"\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation updateCartItemDynamicProperties($command: InputUpdateCartItemDynamicPropertiesType!) {\r\nupdateCartItemDynamicProperties(command: $command) {\r\nid\r\nitems {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
										"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId1}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"lineItemId\": \"{{cartLineItem1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n\"name\": \"A_line_long\",\r\n\"value\": \"{{A_line_long}}\"\r\n},\r\n{\"name\": \"Brand\",\r\n\"value\": \"{{Brand}}\"\r\n}  ]\r\n}\r\n}  "
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add dynamic properties for shipments in cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"C315654 Add dynamic properties for shipments in cart\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
											"        pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
											"        pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"Purchase order number\"));\r",
											"    });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation updateCartShipmentDynamicProperties($command: InputUpdateCartShipmentDynamicPropertiesType!) {\r\nupdateCartShipmentDynamicProperties(command: $command) {\r\nid\r\nshipments{\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
										"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId1}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"shipmentId\":\"{{shipmentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n    \"name\": \"Purchase order number\",\r\n    \"value\": \"{{Purchase order number}}\"\r\n},\r\n{\r\n    \"name\": \"Decimal\",\r\n    \"value\": \"{{decimal1}}\"\r\n},\r\n{\r\n    \"name\": \"Shipment_Integer_multi\",\r\n    \"value\": \"{{int2}}\"\r\n}\r\n   ]\r\n}\r\n}  "
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add dynamic properties for payments in cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"C315656 Add dynamicPropertiesPayment\", function(){\r",
											"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short9\"));\r",
											"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short11\"));\r",
											"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
											" \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation updateCartPaymentDynamicProperties($command: InputUpdateCartPaymentDynamicPropertiesType!) {\r\nupdateCartPaymentDynamicProperties(command: $command) {\r\nid\r\npayments {\r\nid\r\ndynamicProperties {\r\nname\r\nvalue\r\nvalueType\r\ndictionaryItem {\r\nlabel\r\nname\r\nid\r\n}\r\n}\r\n}\r\n}\r\n}",
										"variables": " {\r\n\"command\": {\r\n\"cartId\": \"{{cartId1}}\",   \r\n\"storeId\": \"{{storeId}}\",\r\n\"userId\": \"{{userId1}}\",\r\n\"currencyCode\": \"{{currencyCode}}\",\r\n\"cultureName\": \"{{cultureName}}\",\r\n\"cartName\": \"{{cartName}}\",\r\n\"paymentId\": \"{{paymentId1}}\",\r\n\"dynamicProperties\": [\r\n{\r\n    \"name\": \"A_long_multilang\",\r\n    \"value\": \"{{short9}}\",\r\n    \"cultureName\": \"de-DE\"\r\n},\r\n{\r\n    \"name\": \"A_paymnet\",\r\n    \"value\":\"{{short11}}\"\r\n},\r\n{\r\n    \"name\": \"Boolean-true\",\r\n    \"value\": \"{{bool2}}\"\r\n}\r\n\r\n]\r\n}\r\n}  "
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Order with dynamic properties",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C315675 CreateOrderFromCart\", function () {\r",
											"    var json = pm.response.json();\r",
											"    pm.collectionVariables.set(\"orderId1\", json.data.createOrderFromCart.id);\r",
											"    pm.expect(json.data.createOrderFromCart.items[0]).to.be.not.empty;\r",
											"    pm.expect(json.data.createOrderFromCart.id).to.be.a(\"string\");\r",
											"    pm.expect(json.errors).to.be.undefined;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation createOrderFromCart ($command: InputCreateOrderFromCartType!) {\r\ncreateOrderFromCart (command: $command) {\r\nid\r\nitems{\r\nid\r\nname\r\nquantity\r\nfulfillmentCenterId\r\nfulfillmentCenterName\r\n}\r\ntotal{\r\namount\r\n}\r\ndiscountTotal{\r\namount\r\n}\r\ntaxTotal{\r\namount\r\n}\r\ntotal{\r\namount\r\n}\r\n}\r\n}",
										"variables": "{\r\n\"command\": {\r\n    \"cartId\": \"{{cartId1}}\"\r\n  }\r\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check dynamic properties for Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C315657 Check dynamic properties for Order\", function () {\r",
											"pm.expect(pm.response.text()).to.include(\"33.88\");\r",
											"pm.expect(pm.response.text()).to.include(\"new value_1_2\");\r",
											"  });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n     dynamicProperties {\r\n      name\r\n      value\r\n      valueType\r\n      dynamicProperty {\r\n        name\r\n        label\r\n        valueType\r\n      }\r\n      dictionaryItem {\r\n        label\r\n        name\r\n        id\r\n      }\r\n    }\r\n    }\r\n  }\r\n\r\n",
										"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check dynamic properties for Shipments in Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"    pm.test(\"C315658 Check dynamic properties for Shipments in Order\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"int2\"));\r",
											"        pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"decimal1\"));\r",
											"    });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n       shipments{\r\n        id\r\n    dynamicProperties {\r\n      name\r\n      value\r\n      valueType\r\n      dynamicProperty {\r\n        name\r\n        label\r\n        valueType\r\n      }\r\n      dictionaryItem {\r\n        label\r\n        name\r\n        id\r\n      }\r\n    }\r\n    }\r\n     }\r\n}\r\n",
										"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check dynamic properties for Payments in Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C315659 Check dynamic properties for Payments\", function () {\r",
											"   \r",
											" \r",
											"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short9\"));\r",
											"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"short11\"));\r",
											"pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"bool1\"));\r",
											"\r",
											"});\r",
											"  \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n    inPayments{\r\n        id\r\n    dynamicProperties {\r\n      name\r\n      value\r\n      valueType\r\n      dynamicProperty {\r\n        name\r\n        label\r\n        valueType\r\n      }\r\n      dictionaryItem {\r\n        label\r\n        name\r\n        id\r\n      }\r\n    }\r\n    }\r\n  }\r\n}\r\n",
										"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check dynamic properties for LineItems in Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C315660 Check dynamic properties for LineItems\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"A_line_long\"));\r",
											"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"Brand\"));\r",
											"    });\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableCookies": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query order($id: String, $cultureName: String) {\r\n  order(id: $id, cultureName: $cultureName) {\r\n    id\r\n    number\r\n    items {\r\n      id\r\n      name\r\n      dynamicProperties {\r\n      name\r\n      value\r\n      valueType\r\n        dictionaryItem {\r\n          id\r\n          name\r\n          label\r\n        }\r\n        dynamicProperty {\r\n          valueType\r\n          \r\n        }\r\n     }\r\n  }\r\n}\r\n}\r\n",
										"variables": "{\r\n  \"id\": \"{{orderId1}}\",\r\n  \"cultureName\": \"en-US\"\r\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Clear all",
					"item": [
						{
							"name": "Delete a product 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/catalog/products?ids={{ProductId1}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"catalog",
										"products"
									],
									"query": [
										{
											"key": "ids",
											"value": "{{ProductId1}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AdminToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "mutations",
			"item": [
				{
					"name": "send notification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ($command: InputSendVerifyEmailType){\r\nsendVerifyEmail(command: $command)\r\n}",
								"variables": "{\r\n\"command\": {\r\n\"email\": \"{atz@virtoway.com}\"\r\n}\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"updateRole\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.updateRole.succeeded).to.be.eql(true);\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateRole ($command: InputUpdateRoleType!) {\n    updateRole (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
								"variables": "{\n\"command\":{\n    \"role\":\n    {\n\"id\": \"d1e0b7f9-32e4-4b2f-98c1-0406a4d48112\",\n\"description\":\"sdfdsfsdfsdf\",\n\"name\": \"CustomerUpdate_test111\",\n\"permissions\": [{\n\"name\": \"customer:update\",\n\"assignedScopes\": [{\n\"scope\": \"USERID\",\n\"type\": \"OnlyOrderResponsibleScope\"\n}]\n}]\n}\n}\n}"
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "newUpdateRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"updateRole\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.updateRole.succeeded).to.be.eql(true);\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateRole ($command: InputUpdateRoleType!) {\n    updateRole (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
								"variables": "{\n\"command\":{\n    \"role\":{\n\"id\": \"d1e0b7f9-32e4-4b2f-98c1-0406a4d48112\",\n\"description\":\"sdfdsfsdfsdf\",\n\"name\": \"CustomerUpdate_test111\",\n\"permissions\": [{\n\"name\": \"customer:update\",\n\"assignedScopes\": [{\n\"scope\": \"USERID\",\n\"type\": \"OnlyOrderResponsibleScope\"\n}]\n}]\n}\n}\n}"
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CRUD by User Copy new",
			"item": [
				{
					"name": "Create Organization_1 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Set organizationId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"organizationId1\", jsonData.data.createOrganization.id);\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization ($command: InputCreateOrganizationType!) {\ncreateOrganization (command: $command) {\nid\nname\n}\n}",
								"variables": "{\n\"command\": {\n\"name\": \"AutoTestPostman\",\n\"addresses\": []\n}\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contact_1 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Set contactId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"contactId1\", jsonData.data.createContact.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
								"variables": "{\n\"command\": {\n\"name\": \"Auto_Contact1\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"AB_Contact1 \",\n\"firstName\": \"A_Contact1\",\n\"lastName\": \"B_Contact1\",\n\"organizations\": \"{{organizationId1}}\"\n}\n}\n\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User_1 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Add User_1 [admin]\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.createUser.succeeded).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
								"variables": "{\n\"command\": {\n\"applicationUser\": {   \n\"createdBy\": \"autoTestPostman\",\n\"email\": \"Tracy_Rippin@hotmail.com\",\n\"password\":\"Password\",\n\"userName\": \"{{userName1}}\",\n\"userType\": \"Customer\",\n\"storeId\": \"{{storeId}}\",\n\"memberId\":\"{{contactId1}}\"\n}\n}\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check added Contact_1 with User_1 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check user and Set variables\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.contact.securityAccounts).to.be.not.empty;\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"    pm.collectionVariables.set(\"userId1\", data.data.contact.securityAccounts[0].id);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query contact {\r\n    contact (id: \"{{contactId1}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n      id  \r\n      userName\r\n      email\r\n    }\r\n    }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contact_2 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Set contactId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"contactId3\", jsonData.data.createContact.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
								"variables": "{\n\"command\": {\n\"name\": \"Auto_Contact2\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"AB_Contact2 \",\n\"firstName\": \"A_Contact2\",\n\"lastName\": \"B_Contact2\",\n\"organizations\": \"{{organizationId1}}\"\n}\n}\n\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User_2 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Add User_2 [admin]\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.createUser.succeeded).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
								"variables": "{\n\"command\": {\n\"applicationUser\": {   \n\"createdBy\": \"autoTestPostman\",\n\"email\": \"{{$randomEmail}}\",\n\"password\":\"{{$randomPassword}}\",\n\"userName\": \"{{$randomUserName}}\",\n\"userType\": \"Customer\",\n\"storeId\": \"{{storeId}}\",\n\"memberId\":\"{{contactId3}}\"\n}\n}\n}\n\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check added Contact_2 with User_2 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check user\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.contact.securityAccounts).to.be.not.empty;\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});\r",
									"pm.test(\"Set userId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"userId3\", jsonData.data.contact.securityAccounts[0].id);\r",
									"    pm.collectionVariables.set(\"userName3\", jsonData.data.contact.securityAccounts[0].userName);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query contact {\r\n    contact (id: \"{{contactId3}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n        id\r\n      userName\r\n      email\r\n    }\r\n    }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Organization_2[admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Set organizationId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"organizationId2\", jsonData.data.createOrganization.id);\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization ($command: InputCreateOrganizationType!) {\ncreateOrganization (command: $command) {\nid\nname\n}\n}",
								"variables": "{\n\"command\": {\n\"name\": \"Postman_Auto2\",\n\"addresses\": []\n}\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contact_3 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Set contactId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"contactId2\", jsonData.data.createContact.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createContact ($command: InputCreateContactType!) {\ncreateContact (command: $command) {\nfullName\nid\nlastName\nname\n\n}\n}",
								"variables": "{\n\"command\": {\n\"name\": \"Cont\",\n\"memberType\": \"Contact\",\n\"addresses\": [],\n\"fullName\": \"Cont Postman\",\n\"firstName\": \"Cont\",\n\"lastName\": \"Postman\",\n\"organizations\": \"{{organizationId2}}\"\n}\n}\n\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User_3 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Add User_3 [admin]\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.createUser.succeeded).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}\n\n",
								"variables": "{\n\"command\": {\n\"applicationUser\": {   \n\"createdBy\": \"autoTestPostman\",\n\"email\": \"{{$randomEmail}}\",\n\"password\":\"{{$randomPassword}}\",\n\"userName\": \"{{$randomUserName}}\",\n\"userType\": \"Customer\",\n\"storeId\": \"{{storeId}}\",\n\"memberId\":\"{{contactId2}}\"\n}\n}\n}\n\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check added Contact_3 with User_3 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check user\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.contact.securityAccounts).to.be.not.empty;\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});\r",
									"pm.test(\"Set userId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"   pm.collectionVariables.set(\"userId4\", jsonData.data.contact.securityAccounts[0].id);\r",
									"   pm.collectionVariables.set(\"userName4\", jsonData.data.contact.securityAccounts[0].userName);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query contact {\r\n    contact (id: \"{{contactId2}}\") {\r\n        fullName\r\n        id\r\n    securityAccounts{\r\n        id\r\n      userName\r\n      email\r\n    }\r\n    }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUserToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    \r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Set user token\", function () {\r",
									"   \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"Token1\", jsonData.access_token);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {}, 1000); "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "grand_type",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "grant_type=password&scope=offline_access&username={{userName1}}&password=Password",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{url}}/connect/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin delete role Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/platform/security/roles?ids={{roleId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"platform",
								"security",
								"roles"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{roleId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin add role (create)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Admin add role (create)\", function(){\r",
									"\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.succeeded).to.eql(true);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{roleId}}\",\r\n  \"name\": \"userbyUser\",\r\n  \"permissions\": [\r\n    {\r\n      \"id\": \"platform:security:create\",\r\n      \"name\": \"platform:security:create\",\r\n      \"groupName\": \"Platform\",\r\n      \"assignedScopes\": [],\r\n      \"availableScopes\": [],\r\n      \"isChecked\": true\r\n    } \r\n  ]\r\n }\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/platform/security/roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"platform",
								"security",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin add permission to User_1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Admin add permission to User_1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.updateUser.succeeded).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateUser ($command: InputUpdateUserType!) {\r\n    updateUser (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}",
								"variables": "{\r\n\"command\": {\r\n\"applicationUser\": {   \r\n\"id\":\"{{userId1}}\",\r\n\"email\": \"Tracy_Rippin@hotmail.com\",\r\n\"userName\": \"{{userName1}}\",\r\n\"userType\": \"Customer\",\r\n\"securityStamp\": \"RandomData\",\r\n\"memberId\":\"{{contactId1}}\",\r\n\"roles\":[{\r\n\"id\":\"{{roleId}}\",\r\n\"name\":\"userbyUser\",\r\n  \"permissions\": [{\r\n    \"name\": \"platform:security:create\"\r\n  }]\r\n}]\r\n}\r\n}\r\n}\r\n\r\n\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser (with permission)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CreateUser\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.createUser).to.not.empty;\r",
									"    pm.expect(jsonData.data.createUser.succeeded).to.be.equal(true);\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n      \n    }\n}",
								"variables": "{\n\"command\": {\n\"applicationUser\": {\n\"createdBy\": \"userAutoTest\",\n\"email\": \"Celine_Stiedemann39@gmail.com\",\n\"password\":\"{{$randomPassword}}\",\n\"userName\": \"{{userName2}}\",\n\"userType\": \"Customer\",\n\"storeId\":\"{{storeId}}\"\n}\n}\n}\n\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check User after create 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check User after create\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.user.userName).to.equal(pm.collectionVariables.get(\"userName2\"));\r",
									"   \r",
									"  });\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query user(\n  $id: String\n  $userName: String\n  $email: String\n  $loginProvider: String\n  $providerKey: String\n) {\n  user(\n    id: $id\n    userName: $userName\n    email: $email\n    loginProvider: $loginProvider\n    providerKey: $providerKey\n  ) {\n    id\n    isAdministrator\n        userName\n    email\n    storeId\n    userName\n    userType\n    roles{\n      id\n      name\n      description\n      permissions\n    }\n  }\n}",
								"variables": "{\n\n\"userName\": \"{{userName2}}\",\n\"loginProvider\":\"\",\n\"providerKey\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin delete role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/platform/security/roles?ids={{roleId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"platform",
								"security",
								"roles"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{roleId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser (No permission)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createUser (No permission)\", function(){\r",
									"           var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.createUser.succeeded).to.equal(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createUser ($command: InputCreateUserType!) {\n    createUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n      \n    }\n}",
								"variables": "{\n\"command\": {\n\"applicationUser\": {   \n\"createdBy\": \"userAutoTest\",\n\"email\": \"Keshaun67@hotmail.com\",\n\"password\":\"{{$randomPassword}}\",\n\"userName\": \"Mikayla_Schultz\",\n\"userType\": \"Customer\",\n\"storeId\":\"{{storeId}}\"\n}\n}\n}\n\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check User after create 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check User after create 2\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.user.userName).to.equal(\"Mikayla_Schultz\");\r",
									"     pm.expect(jsonData.data.user.email).to.equal(\"Keshaun67@hotmail.com\");\r",
									"   \r",
									"  });\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query user(\n  $id: String\n  $userName: String\n  $email: String\n  $loginProvider: String\n  $providerKey: String\n) {\n  user(\n    id: $id\n    userName: $userName\n    email: $email\n    loginProvider: $loginProvider\n    providerKey: $providerKey\n  ) {\n    id\n    isAdministrator\n        userName\n    email\n    storeId\n    userName\n    userType\n    roles{\n      id\n      name\n      description\n      permissions\n    }\n  }\n}",
								"variables": "{\n\n\"userName\": \"Mikayla_Schultz\",\n\"loginProvider\":\"\",\n\"providerKey\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin update role (update)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Admin update role (update)\", function(){\r",
									"\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.succeeded).to.eql(true);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{roleId}}\",\r\n  \"name\": \"userbyUser\",\r\n  \"permissions\": [\r\n    {\r\n      \"id\": \"platform:security:update\",\r\n      \"name\": \"platform:security:update\",\r\n      \"groupName\": \"Platform\",\r\n      \"assignedScopes\": [],\r\n      \"availableScopes\": [],\r\n      \"isChecked\": true\r\n    } \r\n  ]\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/platform/security/roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"platform",
								"security",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin updateUserRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Admin updateUserRole\", function(){\r",
									"\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.succeeded).to.eql(true);\r",
									"        pm.expect(jsonData.errors).to.be.empty;\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"storeId\": \"Electronics\",\r\n  \"memberId\": \"{{contactId1}}\",\r\n  \"isAdministrator\": false,\r\n  \"userType\": \"Customer\",\r\n  \"createdDate\": \"2021-11-15T08:43:31.3699384Z\",\r\n  \"modifiedDate\": \"2021-11-15T08:50:47.179429Z\",\r\n  \"createdBy\": \"autoTestPostman\",\r\n  \"modifiedBy\": \"admin\",\r\n  \"roles\": [\r\n    {\r\n      \"permissions\": [],\r\n      \"id\": \"{{roleId}}\",\r\n      \"name\": \"userbyUser\",\r\n      \"normalizedName\": \"USERCREATEUSER\",\r\n      \"concurrencyStamp\": \"ee8545f9-ce56-4a21-b696-c623b86cf8f9\",\r\n      \"$selected\": false\r\n    }\r\n  ],\r\n  \"userState\": \"PendingApproval\",\r\n  \"permissions\": [],\r\n  \"logins\": [],\r\n  \"passwordExpired\": false,\r\n  \"id\": \"{{userId1}}\",\r\n  \"userName\": \"{{userName1}}\",\r\n  \"normalizedUserName\": \"{{userName1}}\",\r\n  \"email\": \"Celine_Stiedemann40@gmail.com\",\r\n  \"normalizedEmail\": \"CELINE_STIEDEMANN40@GMAIL.COM\",\r\n  \"emailConfirmed\": false,\r\n  \"securityStamp\": \"RandomData\",\r\n  \"concurrencyStamp\": \"f1c16509-7383-4f7c-9282-5804de42e74a\",\r\n  \"phoneNumberConfirmed\": false,\r\n  \"twoFactorEnabled\": false,\r\n  \"lockoutEnabled\": false,\r\n  \"accessFailedCount\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/platform/security/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"platform",
								"security",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "User updateUser in the same organization (with permission)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User updateUser the same org_1 (with permission)\", function(){\r",
									"\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.data.updateUser.errors).to.be.empty;\r",
									"        pm.expect(jsonData.data.updateUser.succeeded).to.eql(true);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateUser ($command: InputUpdateUserType!) {\n    updateUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
								"variables": "\n{\n\"command\":{\n\"applicationUser\":{\n\"userType\": \"Customer\",\n\"memberId\":\"{{contactId3}}\",\n\"roles\": [],\n\"id\": \"{{userId3}}\",\n\"userName\": \"QWERTY\",\n\"email\": \"testqa2022@gmail.com\",\n\"securityStamp\": \"RandomData\",\n\"storeId\":\"{{storeId}}\"\n}\n}\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Index",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Check Index\", function(){\r",
									"var jsonData = pm.response.json();\r",
									"pm.expect (jsonData.errorCount).to.be.eql(0);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {}, 1000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"documentType\": \"Member\",\r\n        \"documentIds\": [\r\n            \"{{contactId3}}\"\r\n        ]\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/search/indexes/index",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"search",
								"indexes",
								"index"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check User_2 after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check User_2 after update\", function(){\r",
									"    var jsonData =pm.response.json();\r",
									"    pm.expect(jsonData.data.user.email).to.equal(\"testqa2022@gmail.com\");\r",
									"    pm.expect(jsonData.data.user.userName).to.equal(\"QWERTY\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AdminToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query user(\n  $id: String\n  $userName: String\n  $email: String\n  $loginProvider: String\n  $providerKey: String\n) {\n  user(\n    id: $id\n    userName: $userName\n    email: $email\n    loginProvider: $loginProvider\n    providerKey: $providerKey\n  ) {\n    id\n    isAdministrator\n        userName\n    email\n    storeId\n    userName\n    userType\n    securityStamp\n    roles{\n      id\n      name\n      description\n      permissions\n    }\n  }\n}",
								"variables": "{\n\"id\": \"{{userId3}}\",\n\"userName\": \"QWERTY\",\n \"email\": \"testqa2022@gmail.com\",\n\"loginProvider\":\"\",\n\"providerKey\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "User updateUser in organization_2 (with permission)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User updateUser in organization_2 (with permission)\", function(){\r",
									"       var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errors).to.not.empty;\r",
									"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateUser ($command: InputUpdateUserType!) {\n    updateUser (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
								"variables": "\n{\n\"command\":{\n   \"applicationUser\":{\n\"userType\": \"Customer\",\n\"memberId\":\"{{contactId2}}\",\n\"roles\": [],\n\"id\": \"{{userId4}}\",\n\"userName\": \"{{userName4}}\",\n\"email\": \"ty-testqa2@gmail.com\",\n\"securityStamp\": \"RandomData\",\n\"storeId\":\"{{storeId}}\"\n}\n}\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin delete role Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/platform/security/roles?ids={{roleId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"platform",
								"security",
								"roles"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{roleId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User deleteUser (no permission)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteUser (no permission)\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errors).to.not.empty;\r",
									"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: User doesn't have the required permission 'platform:security:delete'\");\r",
									"  });\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\n    deleteUsers (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
								"variables": "{\n\"command\": {\n\"userNames\": [\n\"QWERTY\"\n]\n}\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin update role (delete)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Admin update role (delete)\", function(){\r",
									"\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.succeeded).to.eql(true);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{roleId}}\",\r\n  \"name\": \"userbyUser\",\r\n  \"permissions\": [\r\n    {\r\n      \"id\": \"platform:security:delete\",\r\n      \"name\": \"platform:security:delete\",\r\n      \"groupName\": \"Platform\",\r\n      \"assignedScopes\": [],\r\n      \"availableScopes\": [],\r\n      \"isChecked\": true\r\n    } \r\n  ]\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/platform/security/roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"platform",
								"security",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin updateUserRole (delete)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Admin updateUserRole (delete)\", function(){\r",
									"\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.succeeded).to.eql(true);\r",
									"        pm.expect(jsonData.errors).to.be.empty;\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"storeId\": \"Electronics\",\r\n  \"memberId\": \"{{contactId1}}\",\r\n  \"isAdministrator\": false,\r\n  \"userType\": \"Customer\",\r\n  \"createdDate\": \"2021-11-15T08:43:31.3699384Z\",\r\n  \"modifiedDate\": \"2021-11-15T08:50:47.179429Z\",\r\n  \"createdBy\": \"autoTestPostman\",\r\n  \"modifiedBy\": \"admin\",\r\n  \"roles\": [\r\n    {\r\n      \"permissions\": [],\r\n      \"id\": \"{{roleId}}\",\r\n      \"name\": \"userbyUser\",\r\n      \"normalizedName\": \"USERCREATEUSER\",\r\n      \"concurrencyStamp\": \"ee8545f9-ce56-4a21-b696-c623b86cf8f9\",\r\n      \"$selected\": false\r\n    }\r\n  ],\r\n  \"userState\": \"PendingApproval\",\r\n  \"permissions\": [],\r\n  \"logins\": [],\r\n  \"passwordExpired\": false,\r\n  \"id\": \"{{userId1}}\",\r\n  \"userName\": \"{{userName1}}\",\r\n  \"normalizedUserName\": \"{{userName1}}\",\r\n  \"email\": \"Celine_Stiedemann40@gmail.com\",\r\n  \"normalizedEmail\": \"CELINE_STIEDEMANN40@GMAIL.COM\",\r\n  \"emailConfirmed\": false,\r\n  \"securityStamp\": \"RandomData\",\r\n  \"concurrencyStamp\": \"f1c16509-7383-4f7c-9282-5804de42e74a\",\r\n  \"phoneNumberConfirmed\": false,\r\n  \"twoFactorEnabled\": false,\r\n  \"lockoutEnabled\": false,\r\n  \"accessFailedCount\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/platform/security/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"platform",
								"security",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check User_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check User_2 after update\", function(){\r",
									"    var jsonData =pm.response.json();\r",
									"    pm.expect(jsonData.data.user.email).to.equal(\"testqa2022@gmail.com\");\r",
									"    pm.expect(jsonData.data.user.userName).to.equal(\"QWERTY\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AdminToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query user(\n  $id: String\n  $userName: String\n  $email: String\n  $loginProvider: String\n  $providerKey: String\n) {\n  user(\n    id: $id\n    userName: $userName\n    email: $email\n    loginProvider: $loginProvider\n    providerKey: $providerKey\n  ) {\n    id\n    isAdministrator\n        userName\n    email\n    storeId\n    userName\n    userType\n    securityStamp\n    roles{\n      id\n      name\n      description\n      permissions\n    }\n  }\n}",
								"variables": "{\n\"id\": \"{{userId3}}\",\n\"userName\": \"QWERTY\",\n\"email\": \"testqa2022@gmail.com\",\n\"loginProvider\":\"\",\n\"providerKey\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "User deleteUser in the same organization_1 (with permission)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User deleteUser in the same organization_1 (with permission)\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.deleteUsers).to.not.empty;\r",
									"    pm.expect(jsonData.data.deleteUsers.succeeded).to.be.equal(true);\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\n    deleteUsers (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
								"variables": "{\n\"command\": {\n\"userNames\": [\n\"QWERTY\"\n]\n}\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check User_2 after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check User_2 after delete\", function(){\r",
									"    var jsonData =pm.response.json();\r",
									" \r",
									"    pm.expect(jsonData.data.user).to.be.equal(null);\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"   \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AdminToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query user(\n  $id: String\n  $userName: String\n  $email: String\n  $loginProvider: String\n  $providerKey: String\n) {\n  user(\n    id: $id\n    userName: $userName\n    email: $email\n    loginProvider: $loginProvider\n    providerKey: $providerKey\n  ) {\n    id\n    isAdministrator\n        userName\n    email\n    storeId\n    userName\n    userType\n    securityStamp\n    roles{\n      id\n      name\n      description\n      permissions\n    }\n  }\n}",
								"variables": "{\n\"id\": \"{{userId3}}\",\n\"userName\": \"QWERTY\",\n\"email\": \"testqa2022@gmail.com\",\n\"loginProvider\":\"\",\n\"providerKey\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "User deleteUser in organization_2 (with permission)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User deleteUser in the same organization_1 (with permission)\", function(){\r",
									"   var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errors).to.not.empty;\r",
									"    pm.expect(jsonData.errors[0].message).to.include(\"VirtoCommerce.ExperienceApiModule.Core.Infrastructure.Authorization.AuthorizationError: Access denied\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\n    deleteUsers (command: $command) {\n        errors {\n            code\n            description\n        }\n        succeeded\n    }\n}",
								"variables": "{\n\"command\": {\n\"userNames\": [\n\"{{userName4}}\"\n]\n}\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin delete role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/platform/security/roles?ids={{roleId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"platform",
								"security",
								"roles"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{roleId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete users [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete users [admin]\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.deleteUsers).to.not.empty;\r",
									"    pm.expect(jsonData.data.deleteUsers.succeeded).to.be.equal(true);\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteUsers ($command: InputDeleteUserType!) {\r\n    deleteUsers (command: $command) {\r\n        errors {\r\n            code\r\n            description\r\n        }\r\n        succeeded\r\n    }\r\n}\r\n\r\n\r\n\r\n",
								"variables": "{\r\n  \"command\": {\r\n    \"userNames\": [\r\n      \"Mikayla_Schultz\",\"{{userName4}}\",\"{{userName3}}\",\"{{userName2}}\",\"{{userName1}}\",\"QWERTY\"\r\n    ]\r\n  }\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Contact_1 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Contact_1 [admin]\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.deleteContact).to.eql(true);\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
								"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId1}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Contact_2 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Contact_2 [admin]\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"  \r",
									"    pm.expect(jsonData.data.deleteContact).to.eql(true);\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
								"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Contact_3[admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Contact_3 [admin]\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"   \r",
									"    pm.expect(jsonData.data.deleteContact).to.eql(true);\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
								"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId3}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete organization_1 [admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
								"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/api/members?ids={{organizationId1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{organizationId1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete organization _2[admin]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteContact ($command: InputDeleteContactType!) {\r\n    deleteContact (command: $command)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
								"variables": "{\r\n  \"command\": {\r\n    \"contactId\": \"{{contactId2}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/api/members?ids={{organizationId2}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{organizationId2}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Facet search",
			"item": [
				{
					"name": "GetAdminToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    \r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Set admin token\", function () {\r",
									"   \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"AdminToken\", jsonData.access_token);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "grand_type",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "grant_type=password&scope=offline_access&username=admin&password={{password}}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{url}}/connect/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "get facet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get facet\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.term_facets[0].name).to.be.equal(\"__outline\");\r",
									" pm.expect(data.data.products.term_facets[0].terms).to.be.not.empty;\r",
									" pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"__outline\", filter:\"\" storeId: \"{{storeId}}\") {\r\nterm_facets {\r\nfacetType\r\nterms {\r\ncount\r\nterm\r\nlabel\r\n}\r\n}\r\n}\r\n}\r\n\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get few terms facet (products)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get few terms facet (products)\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.items).to.be.not.empty;\r",
									" pm.expect(data.data.products.term_facets[0].name).to.be.equal(\"Brand\");\r",
									" pm.expect(data.data.products.term_facets[0].terms).to.be.not.empty;\r",
									" pm.expect(data.data.products.term_facets[1].name).to.be.equal(\"Color\");\r",
									" pm.expect(data.data.products.term_facets[1].terms).to.be.not.empty;\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"Brand Color\", filter:\"\" storeId: \"{{storeId}}\") {\r\n  items\r\n  {id\r\n  name}\r\nterm_facets {\r\nfacetType\r\nname\r\nterms {\r\ncount\r\nterm\r\n\r\n}\r\n}\r\nrange_facets\r\n{\r\nname\r\nranges\r\n{\r\ncount\r\nincludeTo\r\nincludeFrom\r\nmin\r\nto\r\nmax\r\n}\r\n}\r\nfilter_facets\r\n{\r\nname\r\n\r\nfacetType\r\n\r\n}\r\n}\r\n}  ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get few terms facet (filter by color)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get few terms facet (filter by color)\", function () {\r",
									"    var data = pm.response.json();\r",
									" \r",
									" pm.expect(data.data.products.term_facets[0].name).to.be.equal(\"Brand\");\r",
									" pm.expect(data.data.products.term_facets[0].terms).to.be.not.empty;\r",
									" pm.expect(data.data.products.term_facets[1].name).to.be.equal(\"Color\");\r",
									" pm.expect(data.data.products.term_facets[1].terms).to.be.not.empty;\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"Color Brand\", filter:\"Color:Black\" storeId: \"{{storeId}}\") \r\n{\r\n  \r\nterm_facets {\r\nfacetType\r\nname\r\nterms {\r\ncount\r\nterm\r\n\r\n}\r\n}\r\nrange_facets\r\n{\r\nname\r\nranges\r\n{\r\ncount\r\nincludeTo\r\nincludeFrom\r\nmin\r\nto\r\nmax\r\n}\r\n}\r\nfilter_facets\r\n{\r\nname\r\n\r\nfacetType\r\n\r\n}\r\n}\r\n}  ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get few terms facet (filter by Brand)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get few terms facet (filter by Brand)\", function () {\r",
									"    var data = pm.response.json();\r",
									" \r",
									" pm.expect(data.data.products.term_facets[0].name).to.be.equal(\"Brand\");\r",
									" pm.expect(data.data.products.term_facets[0].terms).to.be.not.empty;\r",
									" pm.expect(data.data.products.term_facets[1].name).to.be.equal(\"Color\");\r",
									" pm.expect(data.data.products.term_facets[1].terms).to.be.not.empty;\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"Color Brand\", filter:\"Color:Black Brand:Microsoft\"  storeId: \"{{storeId}}\") {\r\n  items\r\n  {id\r\n  name}\r\nterm_facets {\r\nfacetType\r\nname\r\nterms {\r\ncount\r\nterm\r\n\r\n}\r\n}\r\nrange_facets\r\n{\r\nname\r\nranges\r\n{\r\ncount\r\nincludeTo\r\nincludeFrom\r\nmin\r\nto\r\nmax\r\n}\r\n}\r\nfilter_facets\r\n{\r\nname\r\n\r\nfacetType\r\n\r\n}\r\n}\r\n}  ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get facet with some languages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get facet with some languages\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.items).to.be.not.empty;\r",
									" pm.expect(pm.response.text()).to.include(\"Display_size\");\r",
									" pm.expect(data.data.products.term_facets[0].terms).to.be.not.empty;\r",
									" pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n    products(facet: \"Display_size\", cultureName:\"de-DE\"  storeId: \"{{storeId}}\") {\r\n  items\r\n  {id\r\n  name}\r\nterm_facets {\r\nfacetType\r\nname\r\nterms {\r\ncount\r\nterm\r\n\r\n}\r\n}\r\nrange_facets\r\n{\r\nname\r\nranges\r\n{\r\ncount\r\nincludeTo\r\nincludeFrom\r\nmin\r\nto\r\nmax\r\n}\r\n}\r\nfilter_facets\r\n{\r\nname\r\n\r\nfacetType\r\n\r\n}\r\n}\r\n} ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get active facet (filter: single word)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get active facet (filter: single word)\", function () {\r",
									"    var data = pm.response.json();\r",
									"  pm.expect(data.data.products.items).to.be.not.empty;\r",
									"  pm.expect(pm.response.text()).to.include(\"Asus\");\r",
									"  pm.expect(pm.response.text()).to.include(\"Color\");\r",
									"  pm.expect(pm.response.text()).to.include(\"Brand\");\r",
									"  pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  products(storeId: \"{{storeId}}\", filter: \"color:Black,Red brand:Asus\") {\r\n    totalCount\r\n    items {\r\n      id\r\n      name\r\n    }\r\n    term_facets {\r\n      name\r\n      terms {\r\n        term\r\n        isSelected\r\n        count\r\n      }\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get active facet (filter: words with spaces)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get active facet (filter: words with spaces)\", function () {\r",
									"    var data = pm.response.json();\r",
									"pm.expect(data.data.products.items).to.be.not.empty;\r",
									"pm.expect(pm.expect(pm.response.text()).to.include(\"Brand\"));\r",
									"pm.expect(pm.expect(pm.response.text()).to.include(\"Samsung\"));\r",
									"pm.expect(pm.expect(pm.response.text()).to.include(\"Color\"));\r",
									"pm.expect(pm.expect(pm.response.text()).to.include(\"Gold Platinum\"));\r",
									"pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  products(\r\n    storeId: \"{{storeId}}\"\r\n    filter: \"color:\\\"Gold Platinum\\\" brand:Samsung\"\r\n  ) {\r\n    totalCount\r\n    items {\r\n      id\r\n      name\r\n    }\r\n    term_facets {\r\n      name\r\n      terms {\r\n        term\r\n        isSelected\r\n        count\r\n      }\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get inactive facet BLOCKED",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get inactive facet\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.term_facets).to.be.empty;\r",
									"\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"Deep\", filter:\"\",  storeId: \"{{storeId}}\") {\r\nterm_facets {\r\nfacetType\r\nname\r\nterms {\r\ncount\r\nterm }\r\n}\r\n}\r\n} ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get active facet \"price:[TO 100)\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get active facet price:[TO 100)\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.range_facets).to.be.not.empty;\r",
									"\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"price.USD:[TO 100)\", filter:\"\"  storeId: \"{{storeId}}\") {\r\nterm_facets {\r\nfacetType\r\nname\r\nterms {\r\ncount\r\nterm\r\n\r\n}\r\n}\r\n  range_facets\r\n  {\r\n    name\r\n    ranges\r\n    {\r\n      count\r\n      includeTo\r\n      includeFrom\r\n      min\r\n      to\r\n      max\r\n    }\r\n  }\r\n  filter_facets\r\n  {\r\n    name\r\n    \r\nfacetType\r\n  \r\n  }\r\n}\r\n} ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get active facet \"price:[100 TO 200]\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get active facet price:[100 TO 200]\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.range_facets).to.be.not.empty;\r",
									"\r",
									"\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"price.USD:[100 TO 200]\", filter:\"\" storeId: \"{{storeId}}\") {\r\nterm_facets {\r\nfacetType\r\nname\r\nterms {\r\ncount\r\nterm\r\n\r\n}\r\n}\r\nrange_facets\r\n{\r\nname\r\nranges\r\n{\r\ncount\r\nincludeTo\r\nincludeFrom\r\nmin\r\nto\r\nmax\r\n}\r\n}\r\nfilter_facets\r\n{\r\nname\r\n\r\nfacetType\r\n\r\n}\r\n}\r\n} ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get facets \"price:[0 TO 100),[600 TO 1000]\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"price:[0 TO 100),[600 TO 1000]\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.range_facets).to.be.not.empty;\r",
									"\r",
									"\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"price.USD:[0 TO 100),[600 TO 1000])\", filter:\"\" storeId: \"{{storeId}}\") {\r\nterm_facets {\r\nfacetType\r\nname\r\nterms {\r\ncount\r\nterm\r\n\r\n}\r\n}\r\nrange_facets\r\n{\r\nname\r\nranges\r\n{\r\ncount\r\nincludeTo\r\nincludeFrom\r\nmin\r\nto\r\nmax\r\n}\r\n}\r\nfilter_facets\r\n{\r\nname\r\n\r\nfacetType\r\n\r\n}\r\n}\r\n} ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get product's facet \"category.path\" Blocked",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get product's facet category.path\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.items).to.be.not.empty;\r",
									"\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"Camcorder Type\", filter:\"Camcorder.path:4974648a41df4e6ea67ef2ad76d7bbd4/45d3fc9a913d4610a5c7d0470558c4b2\" storeId: \"{{storeId}}\") {\r\nterm_facets {\r\nfacetType\r\nname\r\nterms {\r\ncount\r\nterm\r\n\r\n}\r\n}\r\nrange_facets\r\n{\r\nname\r\nranges\r\n{\r\ncount\r\nincludeTo\r\nincludeFrom\r\nmin\r\nto\r\nmax\r\n}\r\n}\r\nfilter_facets\r\n{\r\nname\r\n\r\nfacetType\r\n\r\n}\r\n}\r\n} ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get produt's facet \"properties.{propertyName}\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get produt's facet properties.{propertyName}\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.items).to.be.not.empty;\r",
									"  pm.expect(data.data.products.term_facets[0].name).to.be.equal(\"Brand\");\r",
									" pm.expect(data.data.products.term_facets[0].terms).to.be.not.empty;\r",
									"\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"properties.Brand\", filter:\"properties.Brand:LG\" storeId: \"{{storeId}}\")\r\n {\r\n  items\r\n  {id\r\n  name}\r\nterm_facets {\r\nfacetType\r\nname\r\nterms {\r\ncount\r\nterm\r\n\r\n}\r\n}\r\nrange_facets\r\n{\r\nname\r\nranges\r\n{\r\ncount\r\nincludeTo\r\nincludeFrom\r\nmin\r\nto\r\nmax\r\n}\r\n}\r\nfilter_facets\r\n{\r\nname\r\n\r\nfacetType\r\n\r\n}\r\n}\r\n}  ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get terms and range facets.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get terms and range facets\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.items).to.be.not.empty;\r",
									"\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"properties.Brand\", filter:\"properties.Brand:LG\" storeId: \"{{storeId}}\") {\r\nitems\r\n{id\r\nname}\r\nterm_facets {\r\nfacetType\r\nname\r\nterms {\r\ncount\r\nterm\r\n\r\n}\r\n}\r\nrange_facets\r\n{\r\nname\r\nranges\r\n{\r\ncount\r\nincludeTo\r\nincludeFrom\r\nmin\r\nto\r\nmax\r\n}\r\n}\r\nfilter_facets\r\n{\r\nname\r\n\r\nfacetType\r\n\r\n}\r\n}\r\n}   ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get few range facets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get few range facets\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.items).to.be.not.empty;\r",
									"\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"price.USD:[TO 100), [600 TO 1000]\", filter:\"\" storeId: \"{{storeId}}\") {\r\nitems\r\n{id\r\nname}\r\nterm_facets {\r\nfacetType\r\nname\r\nterms {\r\ncount\r\nterm\r\n\r\n}\r\n}\r\nrange_facets\r\n{\r\nname\r\nranges\r\n{\r\ncount\r\nincludeTo\r\nincludeFrom\r\nmin\r\nto\r\nmax\r\n}\r\n}\r\nfilter_facets\r\n{\r\nname\r\n\r\nfacetType\r\n\r\n}\r\n}\r\n}   ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Label for facet with some languages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Label for facet with some languages\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.term_facets[0].label).to.be.a(\"String\");\r",
									" pm.expect(data.data.products.term_facets[0].terms).to.be.not.empty;\r",
									" pm.expect(data.data.products.term_facets).to.be.not.empty;\r",
									" pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"Brand\",cultureName:\"de-DE\" storeId: \"{{storeId}}\") {\r\nterm_facets {\r\nfacetType\r\nname\r\n  label\r\nterms {\r\n  label\r\ncount\r\nterm\r\nlabel\r\n}\r\n}\r\n  pageInfo\r\n  {\r\n    startCursor\r\n    endCursor\r\n    hasNextPage\r\n    hasPreviousPage\r\n  }\r\n  totalCount\r\n}\r\n}  ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Label for term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Label for term\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.term_facets[0].label).to.be.a(\"String\");\r",
									" pm.expect(data.data.products.term_facets[0].terms).to.be.not.empty;\r",
									" pm.expect(data.data.products.term_facets[0].terms[0].label).to.be.a(\"String\");\r",
									" pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproducts(facet: \"Color\",cultureName:\"de-DE\" storeId: \"Electronics\") {\r\nterm_facets {\r\nfacetType\r\nname\r\n  label\r\nterms {\r\n  label\r\ncount\r\nterm\r\nlabel\r\n}\r\n}\r\n  pageInfo\r\n  {\r\n    startCursor\r\n    endCursor\r\n    hasNextPage\r\n    hasPreviousPage\r\n  }\r\n  totalCount\r\n}\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query without \"facet\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Query without facet\", function () {\r",
									"    var data = pm.response.json();\r",
									" pm.expect(data.data.products.items).to.be.not.empty;  \r",
									" pm.expect(data.data.products.term_facets[0]).to.be.not.empty;\r",
									" pm.expect(data.errors).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  products(\r\n    storeId: \"Electronics\"\r\n    cultureName: \"en-US\"\r\n    sort: \"priority\"\r\n  ) {\r\n    items {\r\n      name\r\n    }\r\n    term_facets {\r\n      name\r\n    }\r\n        range_facets\r\n    {\r\n      name\r\n    }\r\n    totalCount\r\n    pageInfo {\r\n      hasNextPage\r\n      hasPreviousPage\r\n      startCursor\r\n      endCursor\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AdminToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Properties",
			"item": [
				{
					"name": "get properties for category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"get properties for category\", function () {\r",
									"    var data = pm.response.json();\r",
									"    pm.expect(data.data.category.properties).to.be.not.empty;\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  category (storeId:\"{{storeId}}\" id:\"{{categoryId}}\", cultureName:\"de-DE\")\r\n  {\r\n    name\r\n    properties\r\n    {\r\n      name\r\n      value\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "get properties for specific category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"get properties for specific category\", function () {\r",
									"    var data = pm.response.json();\r",
									"    pm.expect(data.data.properties.items).to.be.not.empty;\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproperties (storeId:\"{{storeId}}\", filter:\"categoryId:53e239451c844442a3b2fe9aa82d95c8\")\r\n{\r\n  items\r\n  {\r\n    name\r\n    type\r\n    id\r\n    multivalue\r\n    \r\n    propertyDictItems\r\n    {\r\n     totalCount\r\n      items\r\n      {\r\n        value\r\n      }\r\n    }\r\n  }\r\n}\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "get one property with dictionary items for specific culture",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"get one property with dictionary items for specific culture\", function () {\r",
									"    var data = pm.response.json();\r",
									"    pm.expect(data.data.property.propertyDictItems.items).to.be.not.empty;\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproperty (id:\"{{propertyId}}\", cultureName:\"{{cultureName}}\")\r\n{\r\npropertyDictItems\r\n{\r\nitems\r\n{\r\nvalue\r\n}\r\n}\r\n}\r\n} \r\n\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "get properties with dictionary, cultureName, name and types",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"get properties with dictionary,cultureName, name and types\", function () {\r",
									"    var data = pm.response.json();\r",
									"    pm.expect(data.data.properties.items).to.be.not.empty;\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\nproperties (storeId:\"{{storeId}}\", cultureName:\"{{cultureName}}\", filter:\"keyword:Brand\", types:[PRODUCT, VARIATION])\r\n{\r\n  items\r\n  {\r\n    name\r\n    type\r\n    id\r\n    multivalue\r\n    propertyDictItems\r\n    {\r\n     totalCount\r\n      items\r\n      {\r\n        value\r\n      }\r\n    }\r\n  }\r\n}\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check meta information about dynamic property",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query dynamicProperties($filter: String!, $cultureName: String, $dictionaryFilter: String, $dictionaryCultureName: String){\r\ndynamicProperties(filter: $filter, cultureName: $cultureName){\r\ntotalCount\r\nitems{\r\nobjectType\r\nname\r\ndictionaryItems(filter:$dictionaryFilter cultureName: $dictionaryCultureName ) {\r\ntotalCount\r\nitems\r\n{\r\nlabel\r\nname\r\nid\r\n}\r\n\r\n  }\r\n  }\r\n}\r\n}",
								"variables": "{\r\n\"filter\": \"objectType:VirtoCommerce.CustomerModule.Core.Model.Contact\",\r\n\"cultureName\": \"en-US\",\r\n\"dictionaryFilter\": \"keyword:\",\r\n\"dictionaryCultureName\": \"de-DE\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AdminToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Dynamic properties",
			"item": [
				{
					"name": "Get dynamic property by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check dynamic property by id \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.dynamicProperty).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.data.dynamicProperty.id).to.eql(\"3113af25-ee0d-49d7-9ce9-ca6ea7ab3bac\");\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"   });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  dynamicProperty(\r\nidOrName: \"3113af25-ee0d-49d7-9ce9-ca6ea7ab3bac\"\r\n  ){\r\n    id\r\n    name\r\n    objectType\r\n    valueType\r\n    isArray\r\n    isDictionary\r\n    isMultilingual\r\n    dictionaryItems{\r\n      items{\r\n        id\r\n        name\r\n        label\r\n      }\r\n    }\r\n      }\r\n  }",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dynamic  property by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check dynamic property by id \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.dynamicProperty).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.data.dynamicProperty.name).to.eql(\"CustomerModule_Organization_ShortText_1_0_1\");\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"   });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  dynamicProperty(\r\nidOrName: \"CustomerModule_Organization_ShortText_1_0_1\"\r\n  ){\r\n    id\r\n    name\r\n    objectType\r\n    valueType\r\n    isArray\r\n    isDictionary\r\n    isMultilingual\r\n    dictionaryItems{\r\n      items{\r\n        id\r\n        name\r\n        label\r\n      }\r\n    }\r\n      }\r\n  }",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dynamic  property  by cultureName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check dynamic property by id \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.dynamicProperty).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.data.dynamicProperty.name).to.eql(\"CustomerModule_Contact_ShortText_1_0_0\");\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"   });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  dynamicProperty(\r\nidOrName: \"CustomerModule_Contact_ShortText_1_0_0\",\r\ncultureName: \"de-DE\",\r\nobjectType: \"\"\r\n  ){\r\n    id\r\n    name\r\n    objectType\r\n    valueType\r\n    isArray\r\n    isDictionary\r\n    isMultilingual\r\n    dictionaryItems{\r\n      items{\r\n        id\r\n        name\r\n        label\r\n      }\r\n    }\r\n      }\r\n  }",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dynamic  property by name and objectType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check dynamic property by id \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.dynamicProperty).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.data.dynamicProperty.objectType).to.eql(\"VirtoCommerce.CustomerModule.Core.Model.Organization\");\r",
									"    pm.expect(jsonData.data.dynamicProperty.name).to.eql(\"Default shipping address\");\r",
									"    pm.expect(data.errors).to.be.undefined;\r",
									"   });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  dynamicProperty(\r\nidOrName: \"{{Defaultship}}\",\r\nobjectType: \"VirtoCommerce.CustomerModule.Core.Model.Organization\"\r\n  ){\r\n    id\r\n    name\r\n    objectType\r\n    valueType\r\n    isArray\r\n    isDictionary\r\n    isMultilingual\r\n    dictionaryItems{\r\n      items{\r\n        id\r\n        name\r\n        label\r\n      }\r\n    }\r\n      }\r\n  }",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dynamic properties by objectType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check dynamic property by id \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.dynamicProperties.items[0]).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.data.dynamicProperties.items[1].objectType).to.eql(\"VirtoCommerce.CustomerModule.Core.Model.Contact\");\r",
									"      pm.expect(data.errors).to.be.undefined;\r",
									"   });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  dynamicProperties(\r\ncultureName: \"en-US\",\r\nobjectType: \"VirtoCommerce.CustomerModule.Core.Model.Contact\"\r\n)\r\n  {\r\n    totalCount\r\n     items{\r\n      id\r\n      name\r\n      objectType\r\n      valueType\r\n      isArray\r\n      isDictionary\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check meta information about dynamic property Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Items not empty\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.dynamicProperties.items).to.be.not.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Filtering dynamic properties by objectType\", function () {\r",
									"   \r",
									"    pm.expect(pm.response.text()).to.include(\"VirtoCommerce.CustomerModule.Core.Model.Contact\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query dynamicProperties($filter: String!, $cultureName: String, $dictionaryFilter: String, $dictionaryCultureName: String){\r\ndynamicProperties(filter: $filter, cultureName: $cultureName){\r\ntotalCount\r\nitems{\r\nobjectType\r\nname\r\ndictionaryItems(filter:$dictionaryFilter cultureName: $dictionaryCultureName ) {\r\ntotalCount\r\nitems\r\n{\r\nlabel\r\nname\r\nid\r\n}\r\n\r\n  }\r\n  }\r\n}\r\n}",
								"variables": "{\r\n\"filter\": \"objectType:VirtoCommerce.CustomerModule.Core.Model.Contact\",\r\n\"cultureName\": \"en-US\",\r\n\"dictionaryFilter\": \"keyword:\",\r\n\"dictionaryCultureName\": \"de-DE\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check meta information about dynamic property Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Items not empty\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.dynamicProperties.items).to.be.not.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Filtering dynamic properties by objectType\", function () {\r",
									"   \r",
									"    pm.expect(pm.response.text()).to.include(\"VirtoCommerce.CustomerModule.Core.Model.Organization\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query dynamicProperties($filter: String!, $cultureName: String, $dictionaryFilter: String, $dictionaryCultureName: String){\r\ndynamicProperties(filter: $filter, cultureName: $cultureName){\r\ntotalCount\r\nitems{\r\nobjectType\r\nname\r\ndictionaryItems(filter:$dictionaryFilter cultureName: $dictionaryCultureName ) {\r\ntotalCount\r\nitems\r\n{\r\nlabel\r\nname\r\nid\r\n}\r\n\r\n  }\r\n  }\r\n}\r\n}",
								"variables": "{\r\n\"filter\": \"objectType:VirtoCommerce.CustomerModule.Core.Model.Organization\",\r\n\"cultureName\": \"en-US\",\r\n\"dictionaryFilter\": \"keyword:\",\r\n\"dictionaryCultureName\": \"de-DE\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "addWishlistBulkItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"C317348 Set lineItemId\", function(){\r",
							"var jsonData =pm.response.json();\r",
							"pm.collectionVariables.set(\"lineItemId\",jsonData.data.addWishlistItem.items[0].id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AdminToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"objectIds\": [\r\n    \"B2B-store\"\r\n  ]\r\n  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/stores/search",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"stores",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AdminToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\":\"1OrganizationMaintainerRole\",\r\n   \"id\":\"OrganizationMaintainerRole\",\r\n   \"permissions\":[\r\n      {\r\n         \"id\":\"cart:read\",\r\n         \"name\":\"cart:read\",\r\n         \"moduleId\":\"VirtoCommerce.Cart\",\r\n         \"groupName\":\"Cart\",\r\n         \"assignedScopes\":[\r\n            \r\n         ],\r\n         \"availableScopes\":[\r\n            \r\n         ],\r\n         \"isChecked\":true\r\n      }\r\n   ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/platform/security/roles",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"platform",
						"security",
						"roles"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"/*pm.test(\"Error message\", function () {",
					"",
					"    if(pm.response.json().errors[0] != \"\")",
					"    {",
					"    console.log(jsonData.errors[0].message);",
					"    }",
					"});*/"
				]
			}
		}
	],
	"variable": [
		{
			"key": "AdminToken",
			"value": ""
		},
		{
			"key": "Token1",
			"value": ""
		},
		{
			"key": "Token2",
			"value": ""
		},
		{
			"key": "Token3",
			"value": ""
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "urlQA",
			"value": "https://vcplatform-platform.qa.govirto.com"
		},
		{
			"key": "adminQA",
			"value": "https://vcplatform-platform.qa.govirto.com"
		},
		{
			"key": "urlStoreFrontQA",
			"value": "https://vcplatform-storefront.qa.govirto.com",
			"type": "string"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "catalogQA",
			"value": "4974648a41df4e6ea67ef2ad76d7bbd4"
		},
		{
			"key": "categoryQA",
			"value": "0d4ad9bab9184d69a6e586effdf9c2ea"
		},
		{
			"key": "categoryId",
			"value": "4b50b398ff584af9b6d69c082c94844b"
		},
		{
			"key": "categoryId2",
			"value": "53e239451c844442a3b2fe9aa82d95c8",
			"type": "string"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "storeId",
			"value": "Electronics"
		},
		{
			"key": "storeId1",
			"value": "Registration",
			"type": "string"
		},
		{
			"key": "storeCustomerStatus",
			"value": "storeCustomerStatus",
			"type": "string"
		},
		{
			"key": "storeCompanyStatus",
			"value": "storeCompanyStatus",
			"type": "string"
		},
		{
			"key": "currencyCode",
			"value": "USD"
		},
		{
			"key": "cultureName",
			"value": "en-US"
		},
		{
			"key": "after",
			"value": "0"
		},
		{
			"key": "first",
			"value": "2"
		},
		{
			"key": "sort",
			"value": ""
		},
		{
			"key": "filter",
			"value": "bool:true"
		},
		{
			"key": "password",
			"value": "eXp1Z1qad"
		},
		{
			"key": "email",
			"value": "eXp1@mail.com"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "roleId",
			"value": "12345678901"
		},
		{
			"key": "roleName",
			"value": "organization manager"
		},
		{
			"key": "roleNormName",
			"value": "ORGANIZATION MANAGER",
			"type": "string"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "787585c5-8240-4617-8bf9-30c07201a17a"
		},
		{
			"key": "userId1",
			"value": ""
		},
		{
			"key": "userId2",
			"value": ""
		},
		{
			"key": "userId3",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId4",
			"value": ""
		},
		{
			"key": "userName",
			"value": "admin"
		},
		{
			"key": "userName1",
			"value": "userName_1"
		},
		{
			"key": "userName2",
			"value": "user_Assign_2"
		},
		{
			"key": "userName3",
			"value": "user_Assign_2333333"
		},
		{
			"key": "userName4",
			"value": "superUser4@a"
		},
		{
			"key": "userPassword1",
			"value": "Password",
			"type": "string"
		},
		{
			"key": "customerEmail1",
			"value": ""
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "contactId",
			"value": "71df1001-efeb-46e4-bafd-92f69da032df"
		},
		{
			"key": "contactId1",
			"value": "4cbd2f3c-cad5-434c-be59-1dbcbe66fded"
		},
		{
			"key": "contactId2",
			"value": "b855a16c-b43f-488f-a570-bada5ca0566d"
		},
		{
			"key": "contactId3",
			"value": "889abe65-b6e2-4f20-8348-f5c983d076cc"
		},
		{
			"key": "contactId4",
			"value": "429e3548-4a98-4f5e-aeaa-d47f3d3c1e39"
		},
		{
			"key": "contactName1",
			"value": ""
		},
		{
			"key": "firstName1",
			"value": "User",
			"type": "string"
		},
		{
			"key": "middleName1",
			"value": ""
		},
		{
			"key": "lastName1",
			"value": "Postman",
			"type": "string"
		},
		{
			"key": "phoneNumber1",
			"value": "",
			"type": "string"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "organizationId",
			"value": "3b85ef22-f9fa-43bc-83d1-cb6f1be4eb0f"
		},
		{
			"key": "organizationId1",
			"value": ""
		},
		{
			"key": "organizationId2",
			"value": ""
		},
		{
			"key": "organizationName1",
			"value": "organizationName1",
			"type": "string"
		},
		{
			"key": "companyEmail1",
			"value": ""
		},
		{
			"key": "organizationDescription1",
			"value": ""
		},
		{
			"key": "   ",
			"value": "",
			"type": "string"
		},
		{
			"key": "xapi_code",
			"value": ""
		},
		{
			"key": "Code1",
			"value": ""
		},
		{
			"key": "Code2",
			"value": ""
		},
		{
			"key": "Code3",
			"value": ""
		},
		{
			"key": "Code4",
			"value": ""
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "Nameofproduct",
			"value": ""
		},
		{
			"key": "Nameofproduct1",
			"value": ""
		},
		{
			"key": "Nameofproduct2",
			"value": ""
		},
		{
			"key": "Nameofproduct3",
			"value": ""
		},
		{
			"key": "Nameofproduct4",
			"value": ""
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "promotionId",
			"value": "f24a5558-2fa3-46f3-838d-02482d4d6d3b"
		},
		{
			"key": "xapi_promo_code",
			"value": "xapi_promo_code"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "listId",
			"value": ""
		},
		{
			"key": "listId1",
			"value": ""
		},
		{
			"key": "listId2",
			"value": ""
		},
		{
			"key": "price",
			"value": "569.0"
		},
		{
			"key": "ProductPrice1",
			"value": "9999"
		},
		{
			"key": "ProductPrice2",
			"value": "101"
		},
		{
			"key": "ProductPrice3",
			"value": "900"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "productIdQA",
			"value": ""
		},
		{
			"key": "ProductId",
			"value": "ac8da6c50cef42ad97d6f1effe2abaee"
		},
		{
			"key": "variationId",
			"value": ""
		},
		{
			"key": "ProductId1",
			"value": "eab75312-4dec-44c2-98cf-3411b40e44a6"
		},
		{
			"key": "ProductId2",
			"value": "22222222"
		},
		{
			"key": "ProductId3",
			"value": "33333333"
		},
		{
			"key": "ProductId4",
			"value": "c13541d5-b154-4165-99ec-67bbc873a372"
		},
		{
			"key": "ProductId5",
			"value": "ad4ae79ffdbc4c97959139a0c387c72e",
			"type": "string"
		},
		{
			"key": "ProductId6",
			"value": "f1b26974b7634abaa0900e575a99476f",
			"type": "string"
		},
		{
			"key": "ProductId7",
			"value": "9cbd8f316e254a679ba34a900fccb076",
			"type": "string"
		},
		{
			"key": "ProductId8",
			"value": "e7eee66223da43109502891b54bc33d3",
			"type": "string"
		},
		{
			"key": "ProductId9",
			"value": "4ed55441810a47da88a483e5a1ee4e94",
			"type": "string"
		},
		{
			"key": "ProductId10",
			"value": "bd8e58948c3648e8b08e1fb4ed4e01bb",
			"type": "string"
		},
		{
			"key": "ProductId11",
			"value": "6e37b94d874247e4ab7469e8fefd247e",
			"type": "string"
		},
		{
			"key": "ProductId12",
			"value": "cb8b439491444dad94030be5f551901c",
			"type": "string"
		},
		{
			"key": "ProductId13",
			"value": "8e3a763a3cff407b97e2a2f6390b4048",
			"type": "string"
		},
		{
			"key": "variationId1",
			"value": "variationId1",
			"type": "string"
		},
		{
			"key": "variationId2",
			"value": "variationId2",
			"type": "string"
		},
		{
			"key": "variationId3",
			"value": "variationId3",
			"type": "string"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "DefaultFFCId",
			"value": "vendor-fulfillment"
		},
		{
			"key": "DefaultFFCName",
			"value": "Los Angeles Branch"
		},
		{
			"key": "AvaibleFFCId",
			"value": "142ba5568ae4454aad553ece41b9c3b5"
		},
		{
			"key": "AvaibleFFCName",
			"value": "Chicago Branch"
		},
		{
			"key": "ffcId1",
			"value": ""
		},
		{
			"key": "ffcId2",
			"value": ""
		},
		{
			"key": "ffcId3",
			"value": ""
		},
		{
			"key": "ffcId4",
			"value": ""
		},
		{
			"key": "ffcShortDescription1",
			"value": "",
			"type": "string"
		},
		{
			"key": "ffcDescription1",
			"value": "",
			"type": "string"
		},
		{
			"key": "ffcName1",
			"value": "",
			"type": "string"
		},
		{
			"key": "ffcCity1",
			"value": "",
			"type": "string"
		},
		{
			"key": "ffcGeoLocation1",
			"value": "",
			"type": "string"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "total1",
			"value": ""
		},
		{
			"key": "total2",
			"value": ""
		},
		{
			"key": "cartId",
			"value": "961a0f8c-3451-4255-84c9-382516e73e3d"
		},
		{
			"key": "cartId1",
			"value": ""
		},
		{
			"key": "cartId2",
			"value": ""
		},
		{
			"key": "cartName",
			"value": "default"
		},
		{
			"key": "cartType ",
			"value": "null"
		},
		{
			"key": "cartAddress",
			"value": ""
		},
		{
			"key": "cartAddressId",
			"value": ""
		},
		{
			"key": "shippingAddressId1",
			"value": ""
		},
		{
			"key": "shippingAddressId2",
			"value": ""
		},
		{
			"key": "billingAddressId1",
			"value": ""
		},
		{
			"key": "billingAddressId2",
			"value": "",
			"type": "string"
		},
		{
			"key": "BillingAndShippingId1",
			"value": "876fec0a-f726-440f-b069-3223dc9232a5",
			"type": "string"
		},
		{
			"key": "billingKey",
			"value": ""
		},
		{
			"key": "shipmentKey",
			"value": ""
		},
		{
			"key": "lineItemId",
			"value": "7a2e595a-8d06-487e-b1c5-878c12e9774a"
		},
		{
			"key": "cartLineItem1",
			"value": ""
		},
		{
			"key": "cartLineItem2",
			"value": ""
		},
		{
			"key": "lineItemId1",
			"value": ""
		},
		{
			"key": "lineItemId2",
			"value": ""
		},
		{
			"key": "lineItemsComment",
			"value": "commentForItemNew"
		},
		{
			"key": "paymentNumber",
			"value": "PI210628-00401"
		},
		{
			"key": "paymentId1",
			"value": ""
		},
		{
			"key": "paymentId2",
			"value": ""
		},
		{
			"key": "paymentId3",
			"value": ""
		},
		{
			"key": "shipmentId1",
			"value": ""
		},
		{
			"key": "shipmentId2",
			"value": ""
		},
		{
			"key": "comment",
			"value": "commentForCartOLD",
			"type": "string"
		},
		{
			"key": "newComment",
			"value": "commentForCartNew",
			"type": "string"
		},
		{
			"key": "nativePaymentMethodId1",
			"value": ""
		},
		{
			"key": "nativePaymentMethodCode1",
			"value": ""
		},
		{
			"key": "nativePaymentMethodName1",
			"value": ""
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "shipment_update",
			"value": "1234567",
			"type": "string"
		},
		{
			"key": "payment_update",
			"value": "7645321 p",
			"type": "string"
		},
		{
			"key": "orderPaymentId",
			"value": "dfb38a0c-b9ce-4e4d-b580-85dd80104653"
		},
		{
			"key": "orderShipmentId",
			"value": "5db3dd0f-a2c0-44bb-b100-22600b98e03b"
		},
		{
			"key": "orderNumber",
			"value": "CO210628-00401"
		},
		{
			"key": "orderId",
			"value": "ce1553ab-67f2-4c3c-8fbc-de485331a4bb"
		},
		{
			"key": "orderId1",
			"value": ""
		},
		{
			"key": "orderId2",
			"value": ""
		},
		{
			"key": "orderId3",
			"value": ""
		},
		{
			"key": "orderId4",
			"value": ""
		},
		{
			"key": "orderId5",
			"value": ""
		},
		{
			"key": "orderId6",
			"value": ""
		},
		{
			"key": "  ",
			"value": "",
			"type": "string"
		},
		{
			"key": "city1",
			"value": "Vienna"
		},
		{
			"key": " ",
			"value": "",
			"type": "string"
		},
		{
			"key": "propertyId",
			"value": "d21b2008-c5be-4050-a74f-355b0d7012f4"
		},
		{
			"key": "propertyId1",
			"value": ""
		},
		{
			"key": "propertyId2",
			"value": "9a762d98-c039-4784-a7df-05a2cd9730a1",
			"type": "string"
		},
		{
			"key": "propertyId3",
			"value": "2728a0e3-a83d-470c-9483-a1cb66d09126",
			"type": "string"
		},
		{
			"key": "propertyId4",
			"value": "dc84c1a9-3737-45a6-ad7f-5140e1b55718",
			"type": "string"
		},
		{
			"key": "propertyId5",
			"value": "4d74e9c3-51fc-4105-8808-068c9bba9e2f"
		},
		{
			"key": "propertyId6",
			"value": "89890fa1-6b01-45a6-ad8a-4622231cbfcf"
		},
		{
			"key": "propertyId7",
			"value": "8cd92f30-2a3d-4005-9ba2-030129a607a8",
			"type": "string"
		},
		{
			"key": "propertyId8",
			"value": "2c4e0d0d-81bf-4e2d-a8b1-a9657d8896df",
			"type": "string"
		},
		{
			"key": "propertyId9",
			"value": "ca98d5bb-7321-4dfb-afb4-bf32ac24c6db",
			"type": "string"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "decimal1",
			"value": "112.11234",
			"type": "string"
		},
		{
			"key": "decimal2",
			"value": "661.21234",
			"type": "string"
		},
		{
			"key": "decimal3",
			"value": "551.51234",
			"type": "string"
		},
		{
			"key": "int1",
			"value": "123",
			"type": "string"
		},
		{
			"key": "int2",
			"value": "801",
			"type": "string"
		},
		{
			"key": "int3",
			"value": "901",
			"type": "string"
		},
		{
			"key": "long1",
			"value": "ndkvncvkdvnjednvksnmdklvndekvn11",
			"type": "string"
		},
		{
			"key": "long2",
			"value": "this is long text for languages1",
			"type": "string"
		},
		{
			"key": "data1",
			"value": "2021-11-25T21:00:00",
			"type": "string"
		},
		{
			"key": "date1",
			"value": "2021-11-25",
			"type": "string"
		},
		{
			"key": "data_update",
			"value": "2022-02-14T14:00:00",
			"type": "string"
		},
		{
			"key": "bool1",
			"value": "true",
			"type": "string"
		},
		{
			"key": "bool2",
			"value": "false",
			"type": "string"
		},
		{
			"key": "html1",
			"value": "value_texthtmlHHH1",
			"type": "string"
		},
		{
			"key": "html2",
			"value": "textHHHH001=en1",
			"type": "string"
		},
		{
			"key": "html3",
			"value": "textHHHH002=de1",
			"type": "string"
		},
		{
			"key": "html4",
			"value": "textHHHH003=fr1",
			"type": "string"
		},
		{
			"key": "image",
			"value": "image",
			"type": "string"
		},
		{
			"key": "short1",
			"value": "text for short",
			"type": "string"
		},
		{
			"key": "short2",
			"value": "1111111112",
			"type": "string"
		},
		{
			"key": "short3",
			"value": "cbe42029-527d-4fad-b55a-0f969175eb04",
			"type": "string"
		},
		{
			"key": "short4",
			"value": "text value for en-US1",
			"type": "string"
		},
		{
			"key": "short5",
			"value": "text value for fr-FR1",
			"type": "string"
		},
		{
			"key": "short6",
			"value": "value11",
			"type": "string"
		},
		{
			"key": "short7",
			"value": "value21",
			"type": "string"
		},
		{
			"key": "short8",
			"value": "value22-en",
			"type": "string"
		},
		{
			"key": "short9",
			"value": "value25-de",
			"type": "string"
		},
		{
			"key": "short10",
			"value": "value26-fr",
			"type": "string"
		},
		{
			"key": "short11",
			"value": "6d6a6c88-f2a6-4342-a0b3-40084fd3816f",
			"type": "string"
		},
		{
			"key": "short12",
			"value": "ef327e04-7414-4683-95f9-29efc81f978a",
			"type": "string"
		},
		{
			"key": "short13",
			"value": "1ad328b7-41f6-4beb-a1ab-3c5cbfb2af2c",
			"type": "string"
		},
		{
			"key": "short14",
			"value": "4adc3561-ea8c-4c4b-aad3-714daef29247",
			"type": "string"
		},
		{
			"key": "short15",
			"value": "b93fe520-711a-432c-a55c-9ca7e4ceb71f",
			"type": "string"
		},
		{
			"key": "decimal_update",
			"value": "23.45",
			"type": "string"
		},
		{
			"key": "long_update",
			"value": "Long text new",
			"type": "string"
		},
		{
			"key": "html_update",
			"value": "htmltextnew",
			"type": "string"
		},
		{
			"key": "image_update",
			"value": "https://regression-platform.qa.govirto.com/cms-content/assets/catalog/SAGN4N910CBK/1280x1280_4257_9450.jpg",
			"type": "string"
		},
		{
			"key": "int_update",
			"value": "100",
			"type": "string"
		},
		{
			"key": "int2_update",
			"value": "2300",
			"type": "string"
		},
		{
			"key": "int3_update",
			"value": "674",
			"type": "string"
		},
		{
			"key": "short_update",
			"value": "f7c1984d-a48c-4720-9a97-4c6a9c508b24",
			"type": "string"
		},
		{
			"key": "short2_update",
			"value": "6882b02b-d42e-4ba3-82f2-0f16c45c8da7",
			"type": "string"
		},
		{
			"key": "short3_update",
			"value": "value_3",
			"type": "string"
		},
		{
			"key": "short4_update",
			"value": "value_4",
			"type": "string"
		},
		{
			"key": "Sex",
			"value": "d58bedc559c6420fbde35666adae3251",
			"type": "string"
		},
		{
			"key": "occupation",
			"value": "9a21cdb9583e4794b200f2579bce55b9",
			"type": "string"
		},
		{
			"key": "Defaultship",
			"value": "aDefault",
			"type": "string"
		},
		{
			"key": "Purchase order number",
			"value": "new value_1_2",
			"type": "string"
		},
		{
			"key": "Decimal",
			"value": "33.88",
			"type": "string"
		},
		{
			"key": "A_line_long",
			"value": "Long comment",
			"type": "string"
		},
		{
			"key": "Brand",
			"value": "Asus",
			"type": "string"
		},
		{
			"key": "emptyDynamic",
			"value": "",
			"type": "string"
		}
	]
}